<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>无人机控制算法</title>
      <link href="/posts/9a3063ce/"/>
      <url>/posts/9a3063ce/</url>
      
        <content type="html"><![CDATA[<h1 id="导论"><a href="#导论" class="headerlink" title="导论"></a>导论</h1><p>多旋翼是垂直起降的，难以大型化，具有较短的续航和较小的负载，是一个非自稳设计。</p><p>我们最主要研究小型无人机。无人机自主导航架构如下图所示。</p><p><img src="https://blog-1316756713.cos.ap-shanghai.myqcloud.com/img/202306021205514.webp" alt="image-20230602110244041"></p><p> 定位：GPS、动作捕捉仪、视觉惯性里程计（VIO）、激光</p>]]></content>
      
      
      <categories>
          
          <category> 四旋翼 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 四旋翼 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>四旋翼运动建模</title>
      <link href="/posts/a3a7b283/"/>
      <url>/posts/a3a7b283/</url>
      
        <content type="html"><![CDATA[<h1 id="数学知识"><a href="#数学知识" class="headerlink" title="数学知识"></a>数学知识</h1><p>无人机理论需要的数学基础</p><ol><li>微积分：</li></ol><p>向量值微积分。</p><p>托马斯微积分与普林斯顿微积分读本-学习基本微积分知识。</p><ol start="2"><li>线性代数与运动学：</li></ol><p>学习向量的基变换，即坐标系的基变换。</p><p>进阶学习变换的矩阵表示以及矩阵论。</p><ol start="3"><li>动力学：</li></ol><p>学习旋转的相对性及坐标系与动态系统向量的微分运动关系。<br>进阶学习分析力学，拉格朗日力学，哈密顿方程用于数学建模，这些都需要以泛函、变分法作为基础。</p><ol start="4"><li>信号与系统：</li></ol><p>学习信号的频域分析，线性时不变LTI系统，从周期信号的傅里叶级数表示推广到非周期信号的傅里叶变换获得信号的频域组成，再扩展到拉普拉斯变换求解线性时不变系统的线性常系数微分方程，需要复变函数的微积分基础。</p><p>进阶学习数字滤波器设计、自适应滤波器、卡尔曼滤波、最小二乘估计、维纳滤波器等这些需要概率论中随机变量的基础，滤波器可结合MATLAB仿真。</p><ol start="5"><li>自动控制理论：</li></ol><p>学习动态控制系统的数学建模，系统传递函数（系统单位冲激响应函数的频域表示即拉普拉斯变换）的推导分析。</p><p>机器人导论或惯性导航的学习可了解姿态的四元数、欧拉角、方向余弦矩阵表示。<br>6. 实践：</p><p>通过控制芯片stm32及C语言、汇编的编程实践四轴项目来结合上述知识来深化理解。</p><p>学习数值分析来解决向量的误差矫正问题，如叉积矫正旋转的误差以及量化误差，以及引入反馈来解决实际系统的累积误差。</p><p><a href="https://zhuanlan.zhihu.com/p/394491146">https://zhuanlan.zhihu.com/p/394491146</a></p><p><a href="https://www.zhihu.com/column/multiUAV">https://www.zhihu.com/column/multiUAV</a></p><p>Gazebo 有优秀的物理引擎，可以模拟出真实的物理环境，同时也能够自主搭建环境；凤凰模拟器能够模拟遥控器手动飞行，对于飞手的训练有非常大的帮助。</p><h1 id="学习路线"><a href="#学习路线" class="headerlink" title="学习路线"></a>学习路线</h1><p><img src="https://blog-1316756713.cos.ap-shanghai.myqcloud.com/img/202306010019671.webp" alt="image-20230601001948772"></p><h1 id="多旋翼飞行器理论与实践"><a href="#多旋翼飞行器理论与实践" class="headerlink" title="多旋翼飞行器理论与实践"></a>多旋翼飞行器理论与实践</h1><p><a href="https://github.com/Amos-Chen98/quadsim">https://github.com/Amos-Chen98/quadsim</a></p>]]></content>
      
      
      <categories>
          
          <category> 四旋翼 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 四旋翼 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>基于PX4与ROS的全自主无人机开源平台&amp;EGO-Planner复现</title>
      <link href="/posts/5e562735/"/>
      <url>/posts/5e562735/</url>
      
        <content type="html"><![CDATA[<h1 id="无人机基础知识"><a href="#无人机基础知识" class="headerlink" title="无人机基础知识"></a>无人机基础知识</h1><ol><li><p>机架</p></li><li><p>动力系统：电机、电调、桨、电池</p></li><li><p>控制系统：飞控板</p></li><li><p>通信系统：图/数传、遥控器、地面站</p></li><li><p>传感器：自主感知外部环境</p></li><li><p>机载电脑：</p></li><li><p>PX4是用于无人机的开源飞行控制软件。PX4提供无人机硬件支持和软件堆栈的标准，从而允许生态系统以可扩展的方式构建和维护硬件和软件。</p></li></ol><h2 id="PX4的开源生态"><a href="#PX4的开源生态" class="headerlink" title="PX4的开源生态"></a>PX4的开源生态</h2><ol><li>地面站软件QGroundControl：通过mavlink与飞控进行通信，可以用来刷个固件、电调校准、飞控参数调节等</li><li>SDK功能包</li><li>飞控硬件pixhawk（里面是STM32）</li><li>通信协议 mavlink</li><li>Mavros:Mavlink+ROS。Mavros是运行于ROS下收发MAVlink消息的工具（接口），实现机载电脑与飞控的双向通信。<h2 id="Prometheus项目"><a href="#Prometheus项目" class="headerlink" title="Prometheus项目"></a>Prometheus项目</h2>利用PX4和ROS两大开源生态中的已有成果和便利工具，快速便利的实现无人机的全自主飞行技术，配套有Gazebo仿真测试代码。</li></ol><h1 id="机器狗"><a href="#机器狗" class="headerlink" title="机器狗"></a>机器狗</h1><h2 id="VNC-Viewer远程连接"><a href="#VNC-Viewer远程连接" class="headerlink" title="VNC Viewer远程连接"></a>VNC Viewer远程连接</h2><p><a href="https://blog.csdn.net/weixin_44942126/article/details/118754248">https://blog.csdn.net/weixin_44942126/article/details/118754248</a></p><p>笔记本电脑连接wifi，使用网线把笔记本电脑和nano/nx连接起来。点击笔记本电脑右下角的wifi设置，点击“未识别的网络”</p><p>点击右侧的“更改适配器选项”</p><p>点击“WLAN”，然后右键，选择“属性–&gt;共享”</p><p>sudo apt-get install xrdp vnc4server xbase-clients</p><p>sudo vim /usr/share/glib-2.0/schemas/org.gnome.Vino.gschema.xml</p><h2 id="换源以及部署目标检测模型"><a href="#换源以及部署目标检测模型" class="headerlink" title="换源以及部署目标检测模型"></a>换源以及部署目标检测模型</h2><p><a href="https://zhuanlan.zhihu.com/p/561152201">https://zhuanlan.zhihu.com/p/561152201</a></p><p><a href="https://aistudio.baidu.com/aistudio/projectdetail/4462769">https://aistudio.baidu.com/aistudio/projectdetail/4462769</a></p><h2 id="视觉巡线"><a href="#视觉巡线" class="headerlink" title="视觉巡线"></a>视觉巡线</h2><p><a href="https://www.jianshu.com/p/ea5fd623393e?u_atoken=cb9c5f88-167f-49b4-a056-0ba14650fedd&amp;u_asession=01kgzLKaLLeQWkdWUtu0O8CB1xUf5OC1xmSKczwmkb7H8CPEn1mtgj-4ZiiMfi6axeX0KNBwm7Lovlpxjd_P_q4JsKWYrT3W_NKPr8w6oU7K9cUrxWOhYPesy28wbV0HUrCvvWHyhA8I9G3hxoTho1LGBkFo3NEHBv0PZUm6pbxQU&amp;u_asig=053WpEGOMjJshjOP0P2n9LK1fmL5TsN-pcfK8PaOHnWivo3-mCbHm8zM1a-iXy7OJEpEITWX2O7M4wv_DajWXFWvTHH63jFXsISikkE6REYYWYNlauubsvXIy8LPdOTaTPsWOiyPqasfFbJh9E-zso5rPMPQXioKJwhHvg2y4oa5n9JS7q8ZD7Xtz2Ly-b0kmuyAKRFSVJkkdwVUnyHAIJzWEWXzMYqWr_LPCW6ISJNZfu7-XqyDek9DvQnmHNHnAgChTz2MQxpCmDDGYlh3aZze3h9VXwMyh6PgyDIVSG1W-LadoVy9bvH20kJ01Jyd0Uu347zn66YkwTOXwXqJK2niDBKql3zWwadojYZX7tzYlsaYaSR9m-wZ4FMhIACfmCmWspDxyAEEo4kbsryBKb9Q&amp;u_aref=kwb9FrWzafRlGerZrYlHu167ylI=">https://www.jianshu.com/p/ea5fd623393e?u_atoken=cb9c5f88-167f-49b4-a056-0ba14650fedd&amp;u_asession=01kgzLKaLLeQWkdWUtu0O8CB1xUf5OC1xmSKczwmkb7H8CPEn1mtgj-4ZiiMfi6axeX0KNBwm7Lovlpxjd_P_q4JsKWYrT3W_NKPr8w6oU7K9cUrxWOhYPesy28wbV0HUrCvvWHyhA8I9G3hxoTho1LGBkFo3NEHBv0PZUm6pbxQU&amp;u_asig=053WpEGOMjJshjOP0P2n9LK1fmL5TsN-pcfK8PaOHnWivo3-mCbHm8zM1a-iXy7OJEpEITWX2O7M4wv_DajWXFWvTHH63jFXsISikkE6REYYWYNlauubsvXIy8LPdOTaTPsWOiyPqasfFbJh9E-zso5rPMPQXioKJwhHvg2y4oa5n9JS7q8ZD7Xtz2Ly-b0kmuyAKRFSVJkkdwVUnyHAIJzWEWXzMYqWr_LPCW6ISJNZfu7-XqyDek9DvQnmHNHnAgChTz2MQxpCmDDGYlh3aZze3h9VXwMyh6PgyDIVSG1W-LadoVy9bvH20kJ01Jyd0Uu347zn66YkwTOXwXqJK2niDBKql3zWwadojYZX7tzYlsaYaSR9m-wZ4FMhIACfmCmWspDxyAEEo4kbsryBKb9Q&amp;u_aref=kwb9FrWzafRlGerZrYlHu167ylI%3D</a></p><p>使用下巴摄像头图像（640 * 480），进行HSV阈值分割，获取二值化图像第100行像素，提取值为0（黑色）的像素中心center，偏移方向d = 320 – center，d&lt;0 右转，d&gt;0 左转,旋转速度rotateSpeed=0.02+d*1.0/1000</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># HSV阈值分割脚本</span></span><br><span class="line"><span class="comment"># File: script_hsv.py</span></span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> cv2</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">empty</span>(<span class="params">a</span>):</span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">stackImages</span>(<span class="params">scale,imgArray</span>):</span><br><span class="line">    rows = <span class="built_in">len</span>(imgArray)</span><br><span class="line">    cols = <span class="built_in">len</span>(imgArray[<span class="number">0</span>])</span><br><span class="line">    rowsAvailable = <span class="built_in">isinstance</span>(imgArray[<span class="number">0</span>], <span class="built_in">list</span>)</span><br><span class="line">    width = imgArray[<span class="number">0</span>][<span class="number">0</span>].shape[<span class="number">1</span>]</span><br><span class="line">    height = imgArray[<span class="number">0</span>][<span class="number">0</span>].shape[<span class="number">0</span>]</span><br><span class="line">    <span class="keyword">if</span> rowsAvailable:</span><br><span class="line">        <span class="keyword">for</span> x <span class="keyword">in</span> <span class="built_in">range</span> ( <span class="number">0</span>, rows):</span><br><span class="line">            <span class="keyword">for</span> y <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>, cols):</span><br><span class="line">                <span class="keyword">if</span> imgArray[x][y].shape[:<span class="number">2</span>] == imgArray[<span class="number">0</span>][<span class="number">0</span>].shape [:<span class="number">2</span>]:</span><br><span class="line">                    imgArray[x][y] = cv2.resize(imgArray[x][y], (<span class="number">0</span>, <span class="number">0</span>), <span class="literal">None</span>, scale, scale)</span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    imgArray[x][y] = cv2.resize(imgArray[x][y], (imgArray[<span class="number">0</span>][<span class="number">0</span>].shape[<span class="number">1</span>], imgArray[<span class="number">0</span>][<span class="number">0</span>].shape[<span class="number">0</span>]), <span class="literal">None</span>, scale, scale)</span><br><span class="line">                <span class="keyword">if</span> <span class="built_in">len</span>(imgArray[x][y].shape) == <span class="number">2</span>: imgArray[x][y]= cv2.cvtColor( imgArray[x][y], cv2.COLOR_GRAY2BGR)</span><br><span class="line">        imageBlank = np.zeros((height, width, <span class="number">3</span>), np.uint8)</span><br><span class="line">        hor = [imageBlank]*rows</span><br><span class="line">        hor_con = [imageBlank]*rows</span><br><span class="line">        <span class="keyword">for</span> x <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>, rows):</span><br><span class="line">            hor[x] = np.hstack(imgArray[x])</span><br><span class="line">        ver = np.vstack(hor)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">for</span> x <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>, rows):</span><br><span class="line">            <span class="keyword">if</span> imgArray[x].shape[:<span class="number">2</span>] == imgArray[<span class="number">0</span>].shape[:<span class="number">2</span>]:</span><br><span class="line">                imgArray[x] = cv2.resize(imgArray[x], (<span class="number">0</span>, <span class="number">0</span>), <span class="literal">None</span>, scale, scale)</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                imgArray[x] = cv2.resize(imgArray[x], (imgArray[<span class="number">0</span>].shape[<span class="number">1</span>], imgArray[<span class="number">0</span>].shape[<span class="number">0</span>]), <span class="literal">None</span>,scale, scale)</span><br><span class="line">            <span class="keyword">if</span> <span class="built_in">len</span>(imgArray[x].shape) == <span class="number">2</span>: imgArray[x] = cv2.cvtColor(imgArray[x], cv2.COLOR_GRAY2BGR)</span><br><span class="line">        hor= np.hstack(imgArray)</span><br><span class="line">        ver = hor</span><br><span class="line">    <span class="keyword">return</span> ver</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    <span class="comment">#### 摄像头测试</span></span><br><span class="line">    <span class="comment"># dev = &quot; ! application/x-rtp,media=video,encoding-name=H264 ! rtph264depay ! h264parse ! omxh264dec ! videoconvert ! appsink&quot;</span></span><br><span class="line">    <span class="comment"># device1 = &quot;udpsrc address=192.168.123.15 port=9201&quot; + dev   # 前方左目</span></span><br><span class="line">    <span class="comment"># device2 = &quot;udpsrc address=192.168.123.15 port=9202&quot; + dev   # 下巴左目</span></span><br><span class="line">    <span class="comment"># cap_head = cv2.VideoCapture(device1) # 前摄像头视频流</span></span><br><span class="line">    <span class="comment"># cap_jaw = cv2.VideoCapture(device2) # 下巴摄像头视频流</span></span><br><span class="line"></span><br><span class="line">    path = <span class="string">&#x27;./test.jpg&#x27;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#### 测试巡线参数</span></span><br><span class="line">    cv2.namedWindow(<span class="string">&quot;TrackBars&quot;</span>)</span><br><span class="line">    cv2.resizeWindow(<span class="string">&quot;TrackBars&quot;</span>,<span class="number">640</span>,<span class="number">480</span>)</span><br><span class="line">    cv2.createTrackbar(<span class="string">&quot;Hue Min&quot;</span>,<span class="string">&quot;TrackBars&quot;</span>,<span class="number">0</span>,<span class="number">179</span>,empty)</span><br><span class="line">    cv2.createTrackbar(<span class="string">&quot;Hue Max&quot;</span>,<span class="string">&quot;TrackBars&quot;</span>,<span class="number">0</span>,<span class="number">179</span>,empty)</span><br><span class="line">    cv2.createTrackbar(<span class="string">&quot;Sat Min&quot;</span>,<span class="string">&quot;TrackBars&quot;</span>,<span class="number">0</span>,<span class="number">255</span>,empty)</span><br><span class="line">    cv2.createTrackbar(<span class="string">&quot;Sat Max&quot;</span>,<span class="string">&quot;TrackBars&quot;</span>,<span class="number">0</span>,<span class="number">255</span>,empty)</span><br><span class="line">    cv2.createTrackbar(<span class="string">&quot;Val Min&quot;</span>,<span class="string">&quot;TrackBars&quot;</span>,<span class="number">0</span>,<span class="number">255</span>,empty)</span><br><span class="line">    cv2.createTrackbar(<span class="string">&quot;Val Max&quot;</span>,<span class="string">&quot;TrackBars&quot;</span>,<span class="number">0</span>,<span class="number">255</span>,empty)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        img = cv2.imread(path)</span><br><span class="line">        <span class="comment"># ret_jaw, frame_jaw = cap_jaw.read()</span></span><br><span class="line">        <span class="comment"># img = cv2.resize(frame_jaw,(640,480))</span></span><br><span class="line">        imgHSV = cv2.cvtColor(img,cv2.COLOR_BGR2HSV)</span><br><span class="line">        h_min = cv2.getTrackbarPos(<span class="string">&quot;Hue Min&quot;</span>,<span class="string">&quot;TrackBars&quot;</span>)  </span><br><span class="line">        h_max = cv2.getTrackbarPos(<span class="string">&quot;Hue Max&quot;</span>, <span class="string">&quot;TrackBars&quot;</span>)</span><br><span class="line">        s_min = cv2.getTrackbarPos(<span class="string">&quot;Sat Min&quot;</span>, <span class="string">&quot;TrackBars&quot;</span>)</span><br><span class="line">        s_max = cv2.getTrackbarPos(<span class="string">&quot;Sat Max&quot;</span>, <span class="string">&quot;TrackBars&quot;</span>)</span><br><span class="line">        v_min = cv2.getTrackbarPos(<span class="string">&quot;Val Min&quot;</span>, <span class="string">&quot;TrackBars&quot;</span>)</span><br><span class="line">        v_max = cv2.getTrackbarPos(<span class="string">&quot;Val Max&quot;</span>, <span class="string">&quot;TrackBars&quot;</span>)</span><br><span class="line">        <span class="built_in">print</span>(h_min,h_max,s_min,s_max,v_min,v_max)</span><br><span class="line">        lower = np.array([h_min,s_min,v_min])</span><br><span class="line">        upper = np.array([h_max,s_max,v_max])</span><br><span class="line">        mask = cv2.inRange(imgHSV,lower,upper)</span><br><span class="line">        imgResult = cv2.bitwise_and(img,img,mask=mask)</span><br><span class="line"></span><br><span class="line">        imgStack = stackImages(<span class="number">0.3</span>,([img,imgHSV],[mask,imgResult]))</span><br><span class="line">        cv2.imshow(<span class="string">&quot;TrackBars&quot;</span>, imgStack)</span><br><span class="line"></span><br><span class="line">        cv2.waitKey(<span class="number">1</span>)</span><br></pre></td></tr></table></figure><p>巡线：<a href="https://aistudio.baidu.com/aistudio/projectdetail/4464358?sUid=974371&amp;ts=1683548599443&amp;qq-pf-to=pcqq.c2c">https://aistudio.baidu.com/aistudio/projectdetail/4464358?sUid=974371&amp;ts=1683548599443&amp;qq-pf-to=pcqq.c2c</a></p><p>模型部署：<a href="https://aistudio.baidu.com/aistudio/projectdetail/4425060">https://aistudio.baidu.com/aistudio/projectdetail/4425060</a></p><p>博客搭建：<a href="https://wyxogo.top/categories/">https://wyxogo.top/categories/</a></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br></pre></td><td class="code"><pre><span class="line">cmd.reserve = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (motiontime &gt; <span class="number">0</span> &amp;&amp; motiontime &lt; <span class="number">1000</span>)</span><br><span class="line">  &#123;</span><br><span class="line">    cmd.mode = <span class="number">1</span>;              <span class="comment"># </span></span><br><span class="line">    cmd.euler[<span class="number">0</span>] = -<span class="number">0.3</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span> (motiontime &gt; <span class="number">1000</span> &amp;&amp; motiontime &lt; <span class="number">2000</span>)</span><br><span class="line">  &#123;</span><br><span class="line">    cmd.mode = <span class="number">1</span>;</span><br><span class="line">    cmd.euler[<span class="number">0</span>] = <span class="number">0.3</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span> (motiontime &gt; <span class="number">2000</span> &amp;&amp; motiontime &lt; <span class="number">3000</span>)</span><br><span class="line">  &#123;</span><br><span class="line">    cmd.mode = <span class="number">1</span>;</span><br><span class="line">    cmd.euler[<span class="number">1</span>] = -<span class="number">0.2</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span> (motiontime &gt; <span class="number">3000</span> &amp;&amp; motiontime &lt; <span class="number">4000</span>)</span><br><span class="line">  &#123;</span><br><span class="line">    cmd.mode = <span class="number">1</span>;</span><br><span class="line">    cmd.euler[<span class="number">1</span>] = <span class="number">0.2</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span> (motiontime &gt; <span class="number">4000</span> &amp;&amp; motiontime &lt; <span class="number">5000</span>)</span><br><span class="line">  &#123;</span><br><span class="line">    cmd.mode = <span class="number">1</span>;</span><br><span class="line">    cmd.euler[<span class="number">2</span>] = -<span class="number">0.2</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span> (motiontime &gt; <span class="number">5000</span> &amp;&amp; motiontime &lt; <span class="number">6000</span>)</span><br><span class="line">  &#123;</span><br><span class="line">    cmd.mode = <span class="number">1</span>;</span><br><span class="line">    cmd.euler[<span class="number">2</span>] = <span class="number">0.2</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span> (motiontime &gt; <span class="number">6000</span> &amp;&amp; motiontime &lt; <span class="number">7000</span>)</span><br><span class="line">  &#123;</span><br><span class="line">    cmd.mode = <span class="number">1</span>;</span><br><span class="line">    cmd.bodyHeight = -<span class="number">0.2</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span> (motiontime &gt; <span class="number">7000</span> &amp;&amp; motiontime &lt; <span class="number">8000</span>)</span><br><span class="line">  &#123;</span><br><span class="line">    cmd.mode = <span class="number">1</span>;</span><br><span class="line">    cmd.bodyHeight = <span class="number">0.1</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span> (motiontime &gt; <span class="number">8000</span> &amp;&amp; motiontime &lt; <span class="number">9000</span>)</span><br><span class="line">  &#123;</span><br><span class="line">    cmd.mode = <span class="number">1</span>;</span><br><span class="line">    cmd.bodyHeight = <span class="number">0.0</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span> (motiontime &gt; <span class="number">9000</span> &amp;&amp; motiontime &lt; <span class="number">11000</span>)</span><br><span class="line">  &#123;</span><br><span class="line">    cmd.mode = <span class="number">5</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span> (motiontime &gt; <span class="number">11000</span> &amp;&amp; motiontime &lt; <span class="number">13000</span>)</span><br><span class="line">  &#123;</span><br><span class="line">    cmd.mode = <span class="number">7</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span> (motiontime &gt; <span class="number">13000</span> &amp;&amp; motiontime &lt; <span class="number">15000</span>)</span><br><span class="line">  &#123;</span><br><span class="line">    cmd.mode = <span class="number">6</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span> (motiontime &gt; <span class="number">15000</span> &amp;&amp; motiontime &lt; <span class="number">16000</span>)</span><br><span class="line">  &#123;</span><br><span class="line">    cmd.mode = <span class="number">0</span>;     <span class="comment">#直走</span></span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span> (motiontime &gt; <span class="number">16000</span> &amp;&amp; motiontime &lt; <span class="number">20000</span>)</span><br><span class="line">  &#123;</span><br><span class="line">    cmd.mode = <span class="number">2</span>;</span><br><span class="line">    cmd.gaitType = <span class="number">2</span>;</span><br><span class="line">    cmd.velocity[<span class="number">0</span>] = <span class="number">0.4</span>f;</span><br><span class="line">    cmd.yawSpeed = <span class="number">2</span>;</span><br><span class="line">    cmd.footRaiseHeight = <span class="number">0.1</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span> (motiontime &gt; <span class="number">20000</span> &amp;&amp; motiontime &lt; <span class="number">22000</span>)</span><br><span class="line">  &#123;</span><br><span class="line">    cmd.mode = <span class="number">0</span>;</span><br><span class="line">    cmd.velocity[<span class="number">0</span>] = <span class="number">0</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span> (motiontime &gt; <span class="number">22000</span> &amp;&amp; motiontime &lt; <span class="number">26000</span>)</span><br><span class="line">  &#123;  <span class="comment"># 执行</span></span><br><span class="line">    cmd.mode = <span class="number">2</span>;</span><br><span class="line">    cmd.gaitType = <span class="number">1</span>;</span><br><span class="line">    cmd.velocity[<span class="number">0</span>] = <span class="number">0.2</span>f;</span><br><span class="line">    cmd.bodyHeight = <span class="number">0.1</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  // straightHand mode usage</span><br><span class="line">  <span class="keyword">if</span> (motiontime &gt; <span class="number">26000</span> &amp;&amp; motiontime &lt; <span class="number">27000</span>)</span><br><span class="line">  &#123;</span><br><span class="line">    cmd.mode = <span class="number">1</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span> (motiontime &gt; <span class="number">27000</span> &amp;&amp; motiontime &lt; <span class="number">35000</span>)</span><br><span class="line">  &#123;</span><br><span class="line">    cmd.mode = <span class="number">11</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  // jumpYaw mode usage</span><br><span class="line">  <span class="keyword">if</span> (motiontime &gt; <span class="number">35000</span> &amp;&amp; motiontime &lt; <span class="number">36000</span>)</span><br><span class="line">  &#123;</span><br><span class="line">    cmd.mode = <span class="number">1</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span> (motiontime &gt; <span class="number">36000</span> &amp;&amp; motiontime &lt; <span class="number">37000</span>)</span><br><span class="line">  &#123;</span><br><span class="line">    cmd.mode = <span class="number">10</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  udp.SetSend(cmd);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">int</span> main(void)</span><br><span class="line">&#123;</span><br><span class="line">  std::cout &lt;&lt; <span class="string">&quot;Communication level is set to HIGH-level.&quot;</span> &lt;&lt; std::endl</span><br><span class="line">            &lt;&lt; <span class="string">&quot;WARNING: Make sure the robot is standing on the ground.&quot;</span> &lt;&lt; std::endl</span><br><span class="line">            &lt;&lt; <span class="string">&quot;Press Enter to continue...&quot;</span> &lt;&lt; std::endl;</span><br><span class="line">  std::cin.ignore();</span><br><span class="line"></span><br><span class="line">  Custom custom(HIGHLEVEL);</span><br><span class="line">  LoopFunc loop_control(<span class="string">&quot;control_loop&quot;</span>, custom.dt, boost::bind(&amp;Custom::RobotControl, &amp;custom));</span><br><span class="line">  LoopFunc loop_udpSend(<span class="string">&quot;udp_send&quot;</span>, custom.dt, <span class="number">3</span>, boost::bind(&amp;Custom::UDPSend, &amp;custom));</span><br><span class="line">  LoopFunc loop_udpRecv(<span class="string">&quot;udp_recv&quot;</span>, custom.dt, <span class="number">3</span>, boost::bind(&amp;Custom::UDPRecv, &amp;custom));</span><br><span class="line"></span><br><span class="line">  loop_udpSend.start();</span><br><span class="line">  loop_udpRecv.start();</span><br><span class="line">  loop_control.start();</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="步态相关代码"><a href="#步态相关代码" class="headerlink" title="步态相关代码"></a>步态相关代码</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">std::array&lt;<span class="type">float</span>, 2&gt; velocity; <span class="comment">// (unit: m/s), forwardSpeed, sideSpeed in body frame</span></span><br><span class="line">                                  <span class="comment">// (range: trot : vx:-1.1~1.5m/s,  vy:-1.0~1.0m/s)   小跑</span></span><br><span class="line">                                  <span class="comment">// (range: run  : vx:-2.5~3.5m/s,  vy:-1.0~1.0m/s) </span></span><br><span class="line">                                  <span class="comment">// (range: stair: vx:-0.2~0.25m/s, vy:-0.15~0.15m/s) 楼梯 </span></span><br><span class="line">   <span class="type">float</span> yawSpeed;                <span class="comment">// (unit: rad/s), rotateSpeed in body frame</span></span><br><span class="line">                                  <span class="comment">// (range: trot : -4.0~4.0rad/s)</span></span><br><span class="line">                                  <span class="comment">// (range: run  : -4.0~4.0rad/s)</span></span><br><span class="line">                                  <span class="comment">// (range: stair: -0.7~0.7rad/s)</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 四旋翼 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 四旋翼 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>树莓派</title>
      <link href="/posts/16fcf6b8/"/>
      <url>/posts/16fcf6b8/</url>
      
        <content type="html"><![CDATA[<a class="btn-beautify outline blue larger" href="https://doc.itprojects.cn/0007.zhishi.raspberrypi/02.doc/index.html#/a06.vnc.md" title="树莓派教程"><i class="far fa-hand-point-right"></i><span>树莓派教程</span></a><h1 id="Linux基础"><a href="#Linux基础" class="headerlink" title="Linux基础"></a>Linux基础</h1><h2 id="用户权限"><a href="#用户权限" class="headerlink" title="用户权限"></a>用户权限</h2><p>$ 表示普通用户</p><p>输入sudo -s 会切换到root#超级管理员</p>]]></content>
      
      
      <categories>
          
          <category> 嵌入式 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 树莓派 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Awesome-Backbones</title>
      <link href="/posts/f5491174/"/>
      <url>/posts/f5491174/</url>
      
        <content type="html"><![CDATA[<a class="btn-beautify outline blue larger" href="https://github.com/Fafa-DL/Awesome-Backbones" title="项目地址"><i class="far fa-hand-point-right"></i><span>项目地址</span></a><h1 id="BUG"><a href="#BUG" class="headerlink" title="BUG"></a>BUG</h1><h2 id="vscode使用python出现乱码问题"><a href="#vscode使用python出现乱码问题" class="headerlink" title="vscode使用python出现乱码问题"></a>vscode使用python出现乱码问题</h2><p>在vscode中打开设置，打开json，添加如下代码</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&quot;code-runner.executorMap&quot;: &#123;</span><br><span class="line">&quot;python&quot;: &quot;set PYTHONENCODING = utf8 &amp;&amp; python&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 图像分类 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Awesome-Backbones </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>随机森林</title>
      <link href="/posts/41b133f5/"/>
      <url>/posts/41b133f5/</url>
      
        <content type="html"><![CDATA[<h1 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h1><h2 id="集成算法概述"><a href="#集成算法概述" class="headerlink" title="集成算法概述"></a>集成算法概述</h2><p>集成算法会考虑多个评估器的建模结果，汇总之后得到一个综合的结果，以此来获取比单个模型更好的回归或者分类表现。</p><p>多个模型库集成成为的模型叫做集成评估器(ensemble estimator)，组合集成评估器的每个模型都叫做基评估器(base estimator)，汇总后得到一个综合的结果，以此来获取比单个模型更好的回归或者分类表现。通常来说，有3类集成算法：装袋法（Bagging)、提升法(Boosting)和Stacking。</p><p>装袋法（Bagging)的核心思想是构建多个<strong>相互独立的评估器</strong>，然后对其预测进行平均或多数表决原则来决定集成评估器的结果，装袋法的代表模型就是随机森林。</p><p>提升法(Boosting)的代表模型是Adaboost和梯度提升树。</p><h2 id="sklearn中的集成概述"><a href="#sklearn中的集成概述" class="headerlink" title="sklearn中的集成概述"></a>sklearn中的集成概述</h2><table><thead><tr><th align="center">类</th><th align="center">类的功能</th></tr></thead><tbody><tr><td align="center">ensemble.RandomForestClassifler</td><td align="center">随机森林分类</td></tr><tr><td align="center">ensemble.RandomForestRegressor</td><td align="center">随机森林回归</td></tr></tbody></table><p>决策树是对特定的特征进行提问，从而总结出决策规则，运用树状图来呈现这些决策规则。</p><p><img src="https://blog-1316756713.cos.ap-shanghai.myqcloud.com/img/202305021659005.webp" alt="image-20230502165949445"></p><p>决策树的核心问题</p><ol><li><p>找出正确的特征进行提问，即如何分枝</p><p>定义了用来衡量分枝质量的指标<strong>不纯度</strong>，分类树的不纯度用基尼系数或信息熵来衡量；回归树的不纯度用MSE均方误差来衡量。</p><p>每次分枝时，决策树对所有的特征进行不纯度计算，选取不纯度最低的特征进行分枝，分枝后，又再对被分枝的不同取值下，计算每个特征的不纯度，继续选取不纯度最低的特征进行分枝。</p></li><li><p>树生长到什么时候应该停下</p><p>每分枝一层，树整体的不纯度会越来越小，决策树追求的是<strong>最小不纯度</strong>。因此，决策树会一直分枝，直到没有更多的特征可用，或者整体的不纯度指标已经最优，决策树就会停止生长。</p><p>论文中可能出现的问题：决策树非常容易<strong>过拟合</strong>，这是说，它很容易在训练集上表现优秀，却在测试集上表现很糟糕。为了防止决策树过拟合，我们需要对决策树进行剪枝，sklearn中提供了大量的剪枝参数。</p></li></ol><h1 id="RandomForestClassifier"><a href="#RandomForestClassifier" class="headerlink" title="RandomForestClassifier"></a>RandomForestClassifier</h1><p>随机森林是非常具有代表性的Bagging集成算法，它的所有基评估器都是决策树，分类树组成的森林就叫做随机森 林分类器，回归树所集成的森林就叫做随机森林回归器。</p><h2 id="重要参数"><a href="#重要参数" class="headerlink" title="重要参数"></a>重要参数</h2><h3 id="控制基评估器的参数"><a href="#控制基评估器的参数" class="headerlink" title="控制基评估器的参数"></a>控制基评估器的参数</h3><table><thead><tr><th align="center">参数</th><th align="center">含义</th></tr></thead><tbody><tr><td align="center">criterion</td><td align="center">不纯度的衡量指标，有基尼系数和信息熵两种选择</td></tr><tr><td align="center">max_depth</td><td align="center">树的最大深度，超过最大深度的树枝都会被剪掉</td></tr><tr><td align="center">min_samples_leaf</td><td align="center">一个节点在分枝后的每个<strong>子节点</strong>都必须包含至少min_samples_leaf个训练样本，否则分枝就不会发生</td></tr><tr><td align="center">min_samples_split</td><td align="center">一个节点必须要包含<strong>至少min_samples_split</strong>个训练样本，这个节点才允许被分枝，否则分枝就不会发生</td></tr><tr><td align="center">max_features</td><td align="center">max_features限制<strong>分枝时（提问时）考虑的特征个数</strong>，超过限制个数的特征都会被舍弃， 默认值为总特征个数开平方取整</td></tr><tr><td align="center">min_impurity_decrease</td><td align="center">限制信息增益的大小，信息增益小于设定数值的分枝不会发生</td></tr></tbody></table><p>单个决策树的准确率越高，随机森林的准确率也会越高，因为装袋法是依赖于平均值或 者少数服从多数原则来决定集成的结果的。</p><p>信息熵：父节点与子节点的信息增益</p><h2 id="n-estimators基评估器的数量"><a href="#n-estimators基评估器的数量" class="headerlink" title="n_estimators基评估器的数量"></a>n_estimators基评估器的数量</h2><p>这是森林中树木的数量，即基基评估器的数量。这个参数对随机森林模型的精确性影响是单调的，<strong>n_estimators 越大，模型的效果往往越好</strong>。但是相应的，任何模型都有<strong>决策边界</strong>，n_estimators达到一定的程度之后，随机森林的精确性往往不在上升或开始波动，并且，n_estimators越大，需要的计算量和内存也越大，训练的时间也会越来越长。对于这个参数，我们是渴望在训练难度和模型效果之间取得平衡。</p><p>n_estimators的默认值在现有版本的sklearn中是10，但是在即将更新的0.22版本中，这个默认值会被修正为 100。这个修正显示出了使用者的调参倾向：要更大的n_estimators。</p><h2 id="sklearn调用随机森林"><a href="#sklearn调用随机森林" class="headerlink" title="sklearn调用随机森林"></a>sklearn调用随机森林</h2><ol><li>导入需要的包</li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">%matplotlib inline  <span class="comment"># 画图时以下需要这样的环境</span></span><br><span class="line"><span class="keyword">from</span> sklearn.tree <span class="keyword">import</span> DecisionTreeClassifier    <span class="comment"># 导入决策树分类器</span></span><br><span class="line"><span class="keyword">from</span> sklearn.ensemble <span class="keyword">import</span> RandomForestClassifier  <span class="comment"># 从集成算法模块ensemble导入随机森林分类器</span></span><br><span class="line"><span class="keyword">from</span> sklearn.datasets <span class="keyword">import</span> load_wine                <span class="comment"># 导入红酒数据集</span></span><br></pre></td></tr></table></figure><ol start="2"><li>导入需要的数据集</li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">wine = load_wine()  <span class="comment"># wine数据集是字典格式</span></span><br><span class="line">wine.data                <span class="comment"># 特征矩阵</span></span><br><span class="line">wine.data.shape     <span class="comment"># 几行几列</span></span><br><span class="line">wine.target              <span class="comment"># 是哪一列</span></span><br></pre></td></tr></table></figure><ol start="3"><li>sklearn建模的基本流程</li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 建模流程</span></span><br><span class="line"><span class="keyword">from</span> sklearn.model_selection <span class="keyword">import</span> train_test_split <span class="comment"># 导入分训练集和测试集的类</span></span><br><span class="line">Xtrain, Xtest, Ytrain, Ytest = train_test_split(wine.data,wine.target,test_size=<span class="number">0.3</span>) <span class="comment"># 测试集30%</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 1.实例化</span></span><br><span class="line">clf = DecisionTreeClassifier(random_state=<span class="number">0</span>)    <span class="comment"># 实例化决策树，random_state=0只有1棵树</span></span><br><span class="line">rfc = RandomForestClassifier(random_state=<span class="number">0</span>) <span class="comment"># 实例化随机森林</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 2.训练集带入实例化后的模型去进行训练，使用的接口是fit</span></span><br><span class="line">clf = clf.fit(Xtrain,Ytrain)</span><br><span class="line">rfc = rfc.fit(Xtrain,Ytrain)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 3.使用其他接口将测试集合导入我们训练好的模型，去获取我们希望的结果(score,Y_test) 得分或者预测出的标签</span></span><br><span class="line">score_c = clf.score(Xtest,Ytest) <span class="comment"># score是模型的精确性</span></span><br><span class="line">score_r = rfc.score(Xtest,Ytest)</span><br><span class="line"><span class="comment"># 随机森林和决策树的表现</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;Single Tree:&#123;&#125;&quot;</span>.<span class="built_in">format</span>(score_c)</span><br><span class="line">     ,<span class="string">&quot;Random Forest:&#123;&#125;&quot;</span>.<span class="built_in">format</span>(score_r)</span><br><span class="line">     )</span><br></pre></td></tr></table></figure><ol start="4"><li>画出随机森林和决策树在十组交叉验证下的效果对比</li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 交叉验证 cross_val_score</span></span><br><span class="line"><span class="keyword">from</span> sklearn.model_selection <span class="keyword">import</span> cross_val_score</span><br><span class="line"><span class="comment">#交叉验证：是数据集划分为n分，依次取每一份做测试集，每n-1份做训练集，多次训练模型以观测模型稳定性的方法</span></span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line">rfc_l = []  <span class="comment"># 列表保存结果</span></span><br><span class="line">clf_l = []</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">10</span>):  <span class="comment"># 10次建模，每次都进行cv=10次交叉验证，一共100次交叉验证</span></span><br><span class="line">    <span class="comment"># 随机森林</span></span><br><span class="line">    rfc = RandomForestClassifier(n_estimators=<span class="number">25</span>)   <span class="comment"># 实例化随机森林，基评估器，森林中有25棵树</span></span><br><span class="line">    <span class="comment"># 交叉验证（实例化好的模型，完整的特征矩阵，完整的标签，交叉验证的次数为10次）</span></span><br><span class="line">    rfc_s = cross_val_score(rfc,wine.data,wine.target,cv=<span class="number">10</span>).mean()<span class="comment"># 每10 次取一个平均，这样最终看到的就是10次的结果</span></span><br><span class="line">    rfc_l.append(rfc_s)  <span class="comment"># 结果添加到列表中去</span></span><br><span class="line">    <span class="comment"># 决策树</span></span><br><span class="line">    clf = DecisionTreeClassifier()</span><br><span class="line">    clf_s = cross_val_score(clf,wine.data,wine.target,cv=<span class="number">10</span>).mean()</span><br><span class="line">    clf_l.append(clf_s)</span><br><span class="line">plt.plot(<span class="built_in">range</span>(<span class="number">1</span>,<span class="number">11</span>),rfc_l,label = <span class="string">&quot;Random Forest&quot;</span>)</span><br><span class="line">plt.plot(<span class="built_in">range</span>(<span class="number">1</span>,<span class="number">11</span>),clf_l,label = <span class="string">&quot;Decision Tree&quot;</span>)</span><br><span class="line">plt.legend()  <span class="comment"># 显示图例</span></span><br><span class="line">plt.show()</span><br><span class="line"><span class="comment">#是否有注意到，单个决策树的波动轨迹和随机森林一致？</span></span><br><span class="line"><span class="comment">#再次验证了我们之前提到的，单个决策树的准确率越高，随机森林的准确率也会越高</span></span><br></pre></td></tr></table></figure><ol start="5"><li>n_estimators的学习曲线</li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 绘制树数目不同时的准确率</span></span><br><span class="line">superpa = []</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">200</span>):</span><br><span class="line">    rfc = RandomForestClassifier(n_estimators=i+<span class="number">1</span>,n_jobs=-<span class="number">1</span>) <span class="comment"># 实例化，在决策树从1到201跑了200次</span></span><br><span class="line">    rfc_s = cross_val_score(rfc,wine.data,wine.target,cv=<span class="number">10</span>).mean()</span><br><span class="line">    superpa.append(rfc_s)</span><br><span class="line"><span class="comment"># list.index(object)   &gt;&gt;&gt; 对象object在列表list当中的索引</span></span><br><span class="line"><span class="comment"># 能够达到的最大的准确率取值，和最大值出现的次数</span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">max</span>(superpa) , superpa.index(<span class="built_in">max</span>(superpa))+<span class="number">1</span>)</span><br><span class="line">plt.figure(figsize=[<span class="number">20</span>,<span class="number">5</span>])</span><br><span class="line">plt.plot(<span class="built_in">range</span>(<span class="number">1</span>,<span class="number">201</span>),superpa)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><h2 id="重要属性和接口"><a href="#重要属性和接口" class="headerlink" title="重要属性和接口"></a>重要属性和接口</h2><ol><li>.estimators_是用来查看随机森林中所有树的列表的。</li><li><strong>oob_score_</strong> 指的是袋外得分。随机森林为了<em>确保林中的每棵树都不尽相同</em>，所以采用了对训练集进行<em>有放回抽样</em>的方式来不断组成信的训练集，在这个过程中，会有一些数据从来没有被随机挑选到，他们就被叫做“袋外数据”。这些<em>袋外数据</em>，没有被模型用来进行训练，sklearn可以帮助我们用他们来测试模型，测试的结果就由这个属性oob_score_ 来导出，<em>本质还是模型的精确度</em>。</li><li><strong>.feature_importances_</strong> 和决策树中的.feature_importances_ 用法和含义都一致，是返回特征的重要性。随机森林的接口与决策树完全一致，因此依然有四个常用接口：<strong>apply, fit, predict和score</strong>。除此之外，还需要注意随机森林的<em>predict_proba接口</em>，这个接口返回每个测试样本对应的被分到每一类标签的概率，标签有几个分类就返回几个概率。如果是二分类问题，则<em>predict_proba返回的数值大于0.5的，被分为1，小于0.5的，被分为0</em>。 传统的随机森林是利用袋装法中的规则，平均或少数服从多数来决定集成的结果，而sklearn中的随机森林是平均每个样本对应的predict_proba返回的概率，得到一个<strong>平均概率</strong>，从而决定测试样本的分类。</li></ol><h1 id="随机森林与分类算法的调参"><a href="#随机森林与分类算法的调参" class="headerlink" title="随机森林与分类算法的调参"></a>随机森林与分类算法的调参</h1><p>采用超参数调参</p>]]></content>
      
      
      <categories>
          
          <category> 机器学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 随机森林 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SVM分类</title>
      <link href="/posts/19ae2cb8/"/>
      <url>/posts/19ae2cb8/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      <categories>
          
          <category> 机器学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SVM分类 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Seaborn</title>
      <link href="/posts/169d08fe/"/>
      <url>/posts/169d08fe/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Seaborn </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Neural-fly</title>
      <link href="/posts/34811d5f/"/>
      <url>/posts/34811d5f/</url>
      
        <content type="html"><![CDATA[<h1 id="论文框架梳理"><a href="#论文框架梳理" class="headerlink" title="论文框架梳理"></a>论文框架梳理</h1><h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><h2 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h2><p>   在本文中，我们提出了一种名为Neural-Fly的数据驱动方法，这是一种基于深度学习的轨迹跟踪控制器，可以学习快速适应快速变化的风况。我们的方法，如图2所示。推进并提供对自适应飞行控制和基于深度学习的机器人控制的见解。我们的实验表明，Neural-Fly在标准无人机上实现了动态风力条件下敏捷且具有挑战性的轨迹的厘米级位置误差跟踪。</p><p>   我们的方法有两个主要组成部分：离线学习阶段和用作实时在线学习的在线自适应控制阶段。</p><p>​    在离线学习阶段，我们开发了域对抗不变量元学习( DAIML )，以数据有效的方式学习与风条件无关的空气动力学深度神经网络( DNN )表示。DNN 的输出被视为一组表示空气动力学效应的基函数。通过更新一组混合 DNN 输出的线性系数，此表示法可适应不同的风况。DAIML 数据高效，在六种不同的风力条件下仅使用总共 12 分钟的飞行数据来训练 DNN。</p><p>   DAIML包含几个关键功能，不仅可以提高数据效率，还可以通过下游在线自适应控制阶段提供信息。特别是，DAIML 使用频谱归一化 （8，12） 来控制 DNN 的 Lipschitz 属性，以改善对看不见数据的泛化，并提供闭环稳定性和鲁棒性保证。DAIML还使用判别网络，确保学习的表示是温不变的，并且风相关信息仅包含在在线控制阶段适应的线性系数中。</p><h3 id="四旋翼动力学建模"><a href="#四旋翼动力学建模" class="headerlink" title="四旋翼动力学建模"></a>四旋翼动力学建模</h3><h4 id="机理建模部分"><a href="#机理建模部分" class="headerlink" title="机理建模部分"></a>机理建模部分</h4><p><img src="https://blog-1316756713.cos.ap-shanghai.myqcloud.com/img/202304251609125.webp" alt="image-20230425160932887"></p><h1 id="组会汇报内容"><a href="#组会汇报内容" class="headerlink" title="组会汇报内容"></a>组会汇报内容</h1>]]></content>
      
      
      <categories>
          
          <category> 文献学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 飞行器控制 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Matplotlib</title>
      <link href="/posts/d1e3c468/"/>
      <url>/posts/d1e3c468/</url>
      
        <content type="html"><![CDATA[<p>6张组图</p><h1 id="修改表中数据"><a href="#修改表中数据" class="headerlink" title="修改表中数据"></a>修改表中数据</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 如果只调用data01.replace(np.nan,0)，那data01本身不会发生变化</span></span><br><span class="line"><span class="comment"># 把表格中原本为NAN的数据替换为0</span></span><br><span class="line">data01=data01.replace(np.nan,<span class="number">0</span>)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">data_k=data01[data01.iloc[:,-<span class="number">7</span>]==<span class="string">&quot;高钾&quot;</span>]</span><br><span class="line">data_p=data01[data01.iloc[:,-<span class="number">7</span>]==<span class="string">&quot;铅钡&quot;</span>]</span><br><span class="line"><span class="comment"># data_k  #dataframe</span></span><br></pre></td></tr></table></figure><h1 id="读入数据"><a href="#读入数据" class="headerlink" title="读入数据"></a>读入数据</h1><p>注意：数据要提前进行编码，编码为<strong>UTF-8</strong></p><p><img src="https://blog-1316756713.cos.ap-shanghai.myqcloud.com/img/202304161550254.webp" alt="image-20230416155050248"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">data01=pd.read_excel(<span class="string">&quot;fall01.xlsx&quot;</span>)   </span><br><span class="line">data01=pd.read_csv(<span class="string">&quot;fall01.csv&quot;</span>)</span><br><span class="line"><span class="comment"># 类型是pandas里面的series</span></span><br><span class="line">data.iloc[: , <span class="number">0</span>] <span class="comment"># 所有行的第1列</span></span><br><span class="line">data.iloc[ <span class="number">1</span>: , <span class="number">1</span>]  <span class="comment"># 第1行后面的所有行的第2列</span></span><br><span class="line">data.iloc[: , <span class="number">2</span>] <span class="comment"># 所有行的第3列</span></span><br></pre></td></tr></table></figure><h1 id="添加图例"><a href="#添加图例" class="headerlink" title="添加图例"></a>添加图例</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&#x27;&#x27;&#x27;loc:图例位置， </span></span><br><span class="line"><span class="string">   fontsize：字体大小，</span></span><br><span class="line"><span class="string">   frameon：是否显示图例边框，</span></span><br><span class="line"><span class="string">   ncol：图例的列的数量，一般为1,</span></span><br><span class="line"><span class="string">   title:为图例添加标题</span></span><br><span class="line"><span class="string">   shadow:为图例边框添加阴影,</span></span><br><span class="line"><span class="string">   markerfirst:True表示图例标签在句柄右侧，false反之，</span></span><br><span class="line"><span class="string">   markerscale：图例标记为原图标记中的多少倍大小，</span></span><br><span class="line"><span class="string">   numpoints:表示图例中的句柄上的标记点的个数，一半设为1,</span></span><br><span class="line"><span class="string">   fancybox:是否将图例框的边角设为圆形</span></span><br><span class="line"><span class="string">   framealpha:控制图例框的透明度</span></span><br><span class="line"><span class="string">   borderpad: 图例框内边距</span></span><br><span class="line"><span class="string">   labelspacing: 图例中条目之间的距离</span></span><br><span class="line"><span class="string">   handlelength:图例句柄的长度</span></span><br><span class="line"><span class="string">   bbox_to_anchor: (横向看右，纵向看下),如果要自定义图例位置或者将图例画在坐标外边，用它，比如bbox_to_anchor=(1.4,0.8)，这个一般配合着ax.get_position()，set_position([box.x0, box.y0, box.width*0.8 , box.height])使用</span></span><br><span class="line"><span class="string">   用不到的参数可以直接去掉,有的参数没写进去，用得到的话加进去     , bbox_to_anchor=(1.11,0)</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="comment"># box = ax.get_position()</span></span><br><span class="line"><span class="comment"># ax.set_position([box.x0, box.y0, box.width*0.8 , box.height]) #若是将图例画在坐标外边，如果放在右边，一般要给width*0.8左右的值，在上边，要给height*0.8左右的值</span></span><br><span class="line">ax.legend(loc=<span class="string">&#x27;lower right&#x27;</span>, fontsize=<span class="number">12</span>, frameon=<span class="literal">True</span>, fancybox=<span class="literal">True</span>, framealpha=<span class="number">0.2</span>, borderpad=<span class="number">0.3</span>,</span><br><span class="line">           ncol=<span class="number">1</span>, markerfirst=<span class="literal">True</span>, markerscale=<span class="number">1</span>, numpoints=<span class="number">1</span>, handlelength=<span class="number">3.5</span>)    <span class="comment">#可以用ax.legend,也可以用plt.legend</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Matplotlib </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Numpy</title>
      <link href="/posts/3be9a986/"/>
      <url>/posts/3be9a986/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Numpy </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Pandas</title>
      <link href="/posts/38d36e05/"/>
      <url>/posts/38d36e05/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Pandas </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python语法</title>
      <link href="/posts/5d191536/"/>
      <url>/posts/5d191536/</url>
      
        <content type="html"><![CDATA[<h1 id="Jupyter-notebook"><a href="#Jupyter-notebook" class="headerlink" title="Jupyter notebook"></a>Jupyter notebook</h1><p>后缀:.ipynb</p><p><img src="https://blog-1316756713.cos.ap-shanghai.myqcloud.com/img/202304112333039.webp" alt="image-20230411233220971"></p><p>清除变量和输出：Restart &amp; Clear Output</p><p>Change kernel（切换内核）： d2l(Diving Into Deep Learning) </p><p>​       base内核：python3</p><h1 id="切换内核造成的报错"><a href="#切换内核造成的报错" class="headerlink" title="切换内核造成的报错"></a>切换内核造成的报错</h1><p>这里再插一嘴好像是20.0.0以上版本都不太行，至少我是22.0.2（本机）和20.0.0（虚拟环境）都无法运行，换成19.0.2就可以了</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">DL环境 ：pyzmq                     <span class="number">25.0</span><span class="number">.2</span>                   pypi_0    pypi</span><br><span class="line"></span><br><span class="line">pip install -i https://pypi.tuna.tsinghua.edu.cn/simple --trusted-host pypi.tuna.tsinghua.edu.cn --user pyzmq==<span class="number">19.0</span><span class="number">.2</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="虚拟环境"><a href="#虚拟环境" class="headerlink" title="虚拟环境"></a>虚拟环境</h1><h2 id="虚拟环境基础命令"><a href="#虚拟环境基础命令" class="headerlink" title="虚拟环境基础命令"></a>虚拟环境基础命令</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 清屏</span></span><br><span class="line">cls</span><br><span class="line"><span class="comment"># 列出所有的虚拟环境</span></span><br><span class="line">conda env <span class="built_in">list</span></span><br><span class="line"><span class="comment"># 创建名为“DL”的虚拟环境，并指定 Python 解释器的版本</span></span><br><span class="line">conda create -n DL python=<span class="number">3.9</span></span><br><span class="line"><span class="comment"># 进入名为“环境名”的虚拟环境</span></span><br><span class="line">conda activate DL</span><br><span class="line"><span class="comment"># 删除名为“环境名”的虚拟环境</span></span><br><span class="line">conda remove -n DL --<span class="built_in">all</span></span><br></pre></td></tr></table></figure><h2 id="虚拟环境内的操作"><a href="#虚拟环境内的操作" class="headerlink" title="虚拟环境内的操作"></a>虚拟环境内的操作</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 列出当前环境下的所有库</span></span><br><span class="line">conda <span class="built_in">list</span></span><br><span class="line"><span class="comment"># 安装 NumPy 库，并指定版本 1.21.5</span></span><br><span class="line">pip install numpy==<span class="number">1.21</span><span class="number">.5</span> -i https://pypi.tuna.tsinghua.edu.cn/simple</span><br><span class="line"><span class="comment"># 安装 Pandas 库，并指定版本 1.2.4</span></span><br><span class="line">pip install Pandas==<span class="number">1.2</span><span class="number">.4</span> -i https://pypi.tuna.tsinghua.edu.cn/simple</span><br><span class="line"><span class="comment"># 安装 Matplotlib 库，并指定版本 3.5.1</span></span><br><span class="line">pip install Matplotlib==<span class="number">3.5</span><span class="number">.1</span> -i https://pypi.tuna.tsinghua.edu.cn/simple</span><br><span class="line"><span class="comment"># 查看当前环境下某个库的版本（以 numpy 为例）</span></span><br><span class="line">pip show numpy</span><br><span class="line"><span class="comment"># 退出虚拟环境</span></span><br><span class="line">conda deactivate</span><br></pre></td></tr></table></figure><h2 id="虚拟环境连接-Jupyter-内核"><a href="#虚拟环境连接-Jupyter-内核" class="headerlink" title="虚拟环境连接 Jupyter 内核"></a>虚拟环境连接 Jupyter 内核</h2><p>以下操作都必须在虚拟环境中进行：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 列出 Jupyter 的内核列表</span></span><br><span class="line">jupyter kernelspec <span class="built_in">list</span></span><br><span class="line"><span class="comment"># 安装 ipykernel</span></span><br><span class="line">pip install -i https://pypi.tuna.tsinghua.edu.cn/simple ipykernel</span><br><span class="line"><span class="comment"># 将虚拟环境导入 Jupyter 的 kernel 中</span></span><br><span class="line">python -m ipykernel install --user --name=DL</span><br><span class="line"><span class="comment"># 删除虚拟环境的 kernel 内核</span></span><br><span class="line">jupyter kernelspec remove DL</span><br></pre></td></tr></table></figure><h2 id="安装GPU版本的PyTorch库"><a href="#安装GPU版本的PyTorch库" class="headerlink" title="安装GPU版本的PyTorch库"></a>安装GPU版本的PyTorch库</h2><p><img src="https://blog-1316756713.cos.ap-shanghai.myqcloud.com/img/202304121151614.webp" alt="image-20230412115055307"></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">注意在Prompt的虚拟环境DL中执行</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">直接法</span></span><br><span class="line">pip install torch==1.12.0+cu113 torchvision==0.13.0+cu113 torchaudio==0.12.0 --extra-index-url https://download.pytorch.org/whl/cu113</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">轮子法</span></span><br><span class="line">pip install D:\Anaconda\whl\torch-1.12.0+cu113-cp39-cp39-win_amd64.whl</span><br><span class="line">pip install D:\Anaconda\whl\torchvision-0.13.0+cu113-cp39-cp39-win_amd64.whl</span><br><span class="line">pip install D:\Anaconda\whl\torchaudio-0.12.0+cu113-cp39-cp39-win_amd64.whl</span><br></pre></td></tr></table></figure><h1 id="Python语法学习"><a href="#Python语法学习" class="headerlink" title="Python语法学习"></a>Python语法学习</h1><h2 id="变量类型"><a href="#变量类型" class="headerlink" title="变量类型"></a>变量类型</h2><h3 id="字符串"><a href="#字符串" class="headerlink" title="字符串"></a>字符串</h3><p>字符串用引号括起来，双引号和单引号都可以。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">str_v = <span class="string">&quot;Kun&quot;</span></span><br><span class="line"><span class="built_in">print</span>(str_v)</span><br></pre></td></tr></table></figure><h4 id="插入其他变量"><a href="#插入其他变量" class="headerlink" title="插入其他变量"></a>插入其他变量</h4><p>可使用”f {字符串}”的方法<br>例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">answer = <span class="number">0.98</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;这个问题的答案是：<span class="subst">&#123;answer&#125;</span>&quot;</span>)</span><br><span class="line"><span class="comment"># 输出为 这个问题的答案是：0.98</span></span><br></pre></td></tr></table></figure><h4 id="转义字符"><a href="#转义字符" class="headerlink" title="转义字符"></a>转义字符</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">\n 换行符号</span><br><span class="line">\t 一个Tab符号</span><br><span class="line">message = <span class="string">&quot;She likes:\n\tsinging, \n\tdancing, \n\trap, \n\tbasketball.&quot;</span></span><br></pre></td></tr></table></figure><h3 id="数字"><a href="#数字" class="headerlink" title="数字"></a>数字</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">num_v = <span class="number">2.5</span></span><br><span class="line"><span class="built_in">print</span>(num_v)</span><br></pre></td></tr></table></figure><p>插入下划线，以观察大数字的位数</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"> <span class="comment"># 区分个位、万位、亿位</span></span><br><span class="line">num3 = <span class="number">1145_1411_4514</span></span><br><span class="line"><span class="comment"># 输出 114514114514</span></span><br></pre></td></tr></table></figure><p><img src="https://blog-1316756713.cos.ap-shanghai.myqcloud.com/img/202304122347934.webp" alt="image-20230412234733572"></p><h3 id="布尔型"><a href="#布尔型" class="headerlink" title="布尔型"></a>布尔型</h3><ol><li>定义</li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">bool_v = <span class="literal">True</span></span><br><span class="line"><span class="built_in">print</span>(bool_v)</span><br></pre></td></tr></table></figure><ol start="2"><li>用法</li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 检查变量是否为空</span></span><br><span class="line"><span class="built_in">print</span>( <span class="built_in">bool</span>( <span class="string">&#x27;a&#x27;</span> ) )  <span class="comment"># 输出True </span></span><br><span class="line"><span class="comment"># 数字——检查数字是否为 0   不为0范围True,为0返回False</span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">bool</span>(<span class="number">0</span>))      <span class="comment"># False</span></span><br><span class="line"><span class="comment"># 集合——检查集合是否为空  </span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">bool</span>( <span class="built_in">set</span>([<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>]) ))   <span class="comment"># 输出True</span></span><br></pre></td></tr></table></figure><h3 id="基本变量间的转换"><a href="#基本变量间的转换" class="headerlink" title="基本变量间的转换"></a>基本变量间的转换</h3><ul><li>转换为字符串使用 str 函数；</li><li>转换为整数型数字使用 int 函数；</li><li>转换为浮点型数字使用 float 函数；</li><li>转换为布尔型使用 bool 函数。</li></ul><p>高级变量类型，即集合、元组、列表、字典，它们有一个共同的特点：作为</p><p>容器，它们可以随意容纳所有变量（甚至<strong>在同一个容器内包含 7 种变量类型</strong>）。</p><h3 id="集合"><a href="#集合" class="headerlink" title="集合 {}"></a>集合 {}</h3><p>集合是<strong>无序的</strong>、<strong>不可重复的</strong>元素的集合。</p><ol><li>创建方式</li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">set_v = &#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">1</span>&#125;</span><br><span class="line"><span class="built_in">print</span>(set_v)</span><br></pre></td></tr></table></figure><h3 id="元组"><a href="#元组" class="headerlink" title="元组 ()"></a>元组 ()</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">tuple_v = (<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>)</span><br><span class="line"><span class="built_in">print</span>(tuple_v)</span><br></pre></td></tr></table></figure><h3 id="列表"><a href="#列表" class="headerlink" title="列表 []"></a>列表 []</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">list_v = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>]</span><br><span class="line"><span class="built_in">print</span>(list_v)</span><br></pre></td></tr></table></figure><h3 id="字典"><a href="#字典" class="headerlink" title="字典"></a>字典</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">dict_v = &#123;<span class="string">&#x27;a&#x27;</span>:<span class="number">1</span>,<span class="string">&#x27;b&#x27;</span>:<span class="number">2</span>,<span class="string">&#x27;c&#x27;</span>:<span class="number">3</span>&#125;</span><br><span class="line"><span class="built_in">print</span>(dict_v)</span><br></pre></td></tr></table></figure><p><a href="https://www.bilibili.com/video/BV1EE41167is/?spm_id_from=333.999.0.0&amp;vd_source=b3841a7aae8adc8ec66a5b92d3972845">https://www.bilibili.com/video/BV1EE41167is/?spm_id_from=333.999.0.0&amp;vd_source=b3841a7aae8adc8ec66a5b92d3972845</a></p>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>研究生准备</title>
      <link href="/posts/2b02ea7f/"/>
      <url>/posts/2b02ea7f/</url>
      
        <content type="html"><![CDATA[<h1 id="研究生准备"><a href="#研究生准备" class="headerlink" title="研究生准备"></a>研究生准备</h1><ul><li><input disabled type="checkbox"> c++复习</li><li><input disabled type="checkbox"> python复习</li><li><input disabled type="checkbox"> matlab复习</li><li><input disabled type="checkbox"> Tensorflow</li><li><input disabled type="checkbox"> pytorch</li><li><input disabled type="checkbox"> Paddle</li><li><input disabled type="checkbox"> OPLNCL</li><li><input disabled type="checkbox"> 四旋翼基础</li></ul>]]></content>
      
      
      <categories>
          
          <category> 实习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 算法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>数据结构</title>
      <link href="/posts/79666db/"/>
      <url>/posts/79666db/</url>
      
        <content type="html"><![CDATA[<h1 id="结构体"><a href="#结构体" class="headerlink" title="结构体"></a>结构体</h1><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//以区间数组为例</span></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">1000</span>;</span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">node</span>&#123;           <span class="comment">//node为此结构体变量名</span></span><br><span class="line"><span class="type">int</span> l , r;           <span class="comment">//区间的左端点、右端点</span></span><br><span class="line"><span class="type">bool</span> <span class="keyword">operator</span> &lt;(<span class="type">const</span> node &amp;t) <span class="type">const</span></span><br><span class="line">        <span class="comment">//重载&lt;操作符。可以对2个node使用&lt;操作符进行比较</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span> r &lt; t.r;         <span class="comment">//按照右端点从小到大排序</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;a[N];</span><br><span class="line"><span class="comment">//括号中的const表示参数 t 对象不会被修改，最后的const表示调用函数对象不会被修改</span></span><br><span class="line"><span class="comment">//&lt;返回类型说明符&gt; operator &lt;运算符符号&gt;(&lt;参数表&gt;) &#123;      &lt;函数体&gt; &#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//对a[N]中的数进行赋值</span></span><br><span class="line">a[i] = &#123;<span class="number">1</span>,<span class="number">2</span>&#125;;  <span class="comment">//这一行是c++11的语法</span></span><br><span class="line">a[i].l = <span class="number">1</span>,a[i].r = <span class="number">2</span>; <span class="comment">//普通赋值</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//排序</span></span><br><span class="line"><span class="built_in">sort</span>(a,a+n); <span class="comment">//按结构体中定义的顺序排序</span></span><br></pre></td></tr></table></figure><h1 id="pair"><a href="#pair" class="headerlink" title="pair"></a>pair</h1><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> x first</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> y second</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> pair&lt;<span class="type">int</span>, <span class="type">int</span>&gt; PII;</span><br><span class="line">PII start;  <span class="comment">//定义pair类型的变量start</span></span><br><span class="line">start = &#123;x,y&#125;; <span class="comment">//赋值</span></span><br><span class="line"><span class="comment">//1. 使用默认构造函数</span></span><br><span class="line">PII p1;</span><br><span class="line"><span class="comment">//2. 用给定值初始化</span></span><br><span class="line"><span class="function">PII <span class="title">p2</span><span class="params">(<span class="number">1</span>,<span class="number">2</span>)</span></span>;</span><br><span class="line"><span class="function">pair&lt;<span class="type">int</span>, <span class="type">double</span>&gt; <span class="title">p2</span><span class="params">(<span class="number">1</span>,<span class="number">2.4</span>)</span></span>;</span><br></pre></td></tr></table></figure><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">auto</span> t = q.<span class="built_in">front</span>();</span><br><span class="line">q.<span class="built_in">push</span>(x,y);</span><br></pre></td></tr></table></figure><h2 id="赋值"><a href="#赋值" class="headerlink" title="赋值"></a>赋值</h2><ol><li><p>利用make_pair</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">PII p1;</span><br><span class="line">p1 = <span class="built_in">make_pair</span>(<span class="number">1</span>,<span class="number">2</span>);</span><br></pre></td></tr></table></figure></li><li><p>变量间赋值</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">PII <span class="title">p1</span><span class="params">(<span class="number">1</span>,<span class="number">1</span>)</span></span>;</span><br><span class="line">PII p2 = p1;</span><br></pre></td></tr></table></figure></li></ol><h2 id="比较"><a href="#比较" class="headerlink" title="比较"></a>比较</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sort</span>(); <span class="comment">//默认对first升序，当first相同时对second升序</span></span><br><span class="line"><span class="built_in">swap</span>();<span class="comment">//2个pair对象的键和值的类型要相同</span></span><br><span class="line"><span class="comment">//单个值不能直接比较，需要使用make_pair</span></span><br><span class="line"><span class="built_in">make_pair</span>(x,y);</span><br></pre></td></tr></table></figure><p><strong>pair的特殊比较：</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">cmp</span><span class="params">(PII a , PII b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(a.x != b.x) <span class="keyword">return</span> a.x &gt; b.x;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">return</span> a.y&lt;b.second;</span><br><span class="line">&#125;</span><br><span class="line">PII p[N];</span><br><span class="line">p[i] = <span class="built_in">make_pair</span>(a,b);</span><br><span class="line"><span class="built_in">sort</span>(p,p+n,cmp);</span><br></pre></td></tr></table></figure><h1 id="数组操作"><a href="#数组操作" class="headerlink" title="数组操作"></a>数组操作</h1><h2 id="复制重置操作"><a href="#复制重置操作" class="headerlink" title="复制重置操作"></a>复制重置操作</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">memset</span>(backup , <span class="number">0</span> , <span class="keyword">sizeof</span> backup)  <span class="comment">//将backup数组的每一位都置为0</span></span><br><span class="line"><span class="built_in">memcpy</span>(backup , st , <span class="keyword">sizeof</span> st)        <span class="comment">//复制st数组给backup数组，从st开始的一段复制给backup</span></span><br></pre></td></tr></table></figure><h1 id="平方开方"><a href="#平方开方" class="headerlink" title="平方开方"></a>平方开方</h1><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="comment">//平方 pow()</span></span><br><span class="line"><span class="type">int</span> a = <span class="built_in">pow</span>(<span class="number">4</span>,<span class="number">2</span>);<span class="comment">// 4的平方=16</span></span><br><span class="line">a = <span class="built_in">pow</span>(<span class="number">4</span>,x); <span class="comment">//x次幂</span></span><br><span class="line"><span class="comment">//开方</span></span><br><span class="line"><span class="type">int</span> b = <span class="built_in">pow</span>(<span class="number">4</span>,<span class="number">0.5</span>);<span class="comment">// 4的平方根=2</span></span><br><span class="line"><span class="type">int</span> c = <span class="built_in">sqrt</span>(<span class="number">4</span>);<span class="comment">// 4的平方根=2</span></span><br><span class="line"><span class="comment">//3次方根</span></span><br><span class="line"><span class="type">double</span> x = <span class="built_in">cbrt</span>(n);</span><br><span class="line"><span class="comment">//整数绝对值</span></span><br><span class="line"><span class="type">int</span> c = <span class="built_in">abs</span>(b-c);</span><br><span class="line"><span class="comment">//浮点数绝对值</span></span><br><span class="line"><span class="type">double</span> d = <span class="built_in">fabs</span>(b-c);</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="哈希表"><a href="#哈希表" class="headerlink" title="哈希表"></a>哈希表</h1><h2 id="存储结构"><a href="#存储结构" class="headerlink" title="存储结构"></a>存储结构</h2><h3 id="开放寻址法"><a href="#开放寻址法" class="headerlink" title="开放寻址法"></a>开放寻址法</h3><p>把$-10^9$~$10^9$的数映射到$0$~$10^5$之间的数字，称为哈希函数</p><ol><li>x mod $10^5$  mod的这个数尽量取成质数   </li><li>冲突 把若干个不同的数映射到同一个数</li></ol><p>哈希表时间复杂度为O（1）</p><p>一般只有添加x和寻找x</p><p>删除的话，打一个bool变量，把他虚拟删除</p><h3 id="拉链法"><a href="#拉链法" class="headerlink" title="拉链法"></a>拉链法</h3><p>一维数组存储所有的哈希值</p><p> <img src="https://blog-1316756713.cos.ap-shanghai.myqcloud.com/img/202304070034836.webp" alt="image-20230407003409612"></p><h2 id="字符串哈希方式"><a href="#字符串哈希方式" class="headerlink" title="字符串哈希方式"></a>字符串哈希方式</h2><h2 id="例题"><a href="#例题" class="headerlink" title="例题"></a>例题</h2><h1 id="map"><a href="#map" class="headerlink" title="map"></a>map</h1><p>耗时又耗空，能不用尽量不用</p><h1 id="读入方式"><a href="#读入方式" class="headerlink" title="读入方式"></a>读入方式</h1><h3 id="格式化读入输出"><a href="#格式化读入输出" class="headerlink" title="格式化读入输出"></a>格式化读入输出</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d/%d/%d&quot;</span>,&amp;a,&amp;b,&amp;c);<span class="comment">//格式化输入02/03/04</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d-%02d-%02d\n&quot;</span>,year,month,day);<span class="comment">//格式化输出，不满2位补前导0</span></span><br></pre></td></tr></table></figure><p>每行读入不同多的数字呀</p><p>输入模板</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">2</span>                  </span><br><span class="line"><span class="number">5</span> <span class="number">6</span> <span class="number">8</span> <span class="number">11</span> <span class="number">9</span> </span><br><span class="line"><span class="number">10</span> <span class="number">12</span> <span class="number">9</span></span><br></pre></td></tr></table></figure><h3 id="getline读入、ssin处理每一个"><a href="#getline读入、ssin处理每一个" class="headerlink" title="getline读入、ssin处理每一个"></a>getline读入、ssin处理每一个</h3><p><strong>读入代码：</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;sstream&gt;</span></span></span><br><span class="line"><span class="type">int</span> cnt;</span><br><span class="line">cin &gt;&gt; cnt;  <span class="comment">//行数</span></span><br><span class="line">string line;  <span class="comment">//每一行</span></span><br><span class="line"><span class="built_in">getline</span>(cin,line); <span class="comment">//忽略掉第1行行尾的回车</span></span><br><span class="line"><span class="comment">//如果有错误，多尝试</span></span><br><span class="line"><span class="keyword">while</span>(cnt--)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">getline</span>(cin,line); <span class="comment">//getline回车也会读入</span></span><br><span class="line">    <span class="function">stringstream <span class="title">ssin</span><span class="params">(line)</span></span>;   <span class="comment">//像cin一样使用ssin</span></span><br><span class="line">    <span class="comment">//ssin是从line这个字符串中读东西</span></span><br><span class="line">    <span class="keyword">while</span>(ssin &gt;&gt; a[n])  n++;</span><br><span class="line">    <span class="built_in">sort</span>(a , a+n);</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="getchar读入"><a href="#getchar读入" class="headerlink" title="getchar读入"></a>getchar读入</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> n;</span><br><span class="line">   <span class="type">char</span> c;</span><br><span class="line">   <span class="type">int</span> i=<span class="number">0</span>;</span><br><span class="line">   <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n);</span><br><span class="line">   <span class="keyword">for</span>(<span class="type">int</span> k=<span class="number">0</span>;k&lt;n;k++)</span><br><span class="line">   &#123;</span><br><span class="line">       <span class="keyword">while</span>(<span class="literal">true</span>)&#123;</span><br><span class="line">           cin &gt;&gt; a[i];</span><br><span class="line">           i++;</span><br><span class="line">           c=<span class="built_in">getchar</span>(); <span class="comment">//吃掉输入数字后的空格 并且作为判断依据</span></span><br><span class="line">           <span class="keyword">if</span>(c!=<span class="string">&#x27; &#x27;</span>)&#123;  <span class="comment">//判断输入的是不是空格 是(\n)回车 则表示下一行即 跳出循环 是空格则继续输入</span></span><br><span class="line">               <span class="keyword">break</span>;</span><br><span class="line">           &#125;</span><br><span class="line">       &#125; </span><br><span class="line">   &#125; </span><br></pre></td></tr></table></figure><h3 id="cin读入"><a href="#cin读入" class="headerlink" title="cin读入"></a>cin读入</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> x, i = <span class="number">0</span>;</span><br><span class="line">cin &gt;&gt; x;<span class="comment">//过滤第一行的行数</span></span><br><span class="line"><span class="keyword">while</span>(cin &gt;&gt; x) a[i++] = x;</span><br><span class="line"><span class="type">int</span> len = i;<span class="comment">//表示数组长度</span></span><br></pre></td></tr></table></figure><h3 id="索引指针读入"><a href="#索引指针读入" class="headerlink" title="索引指针读入"></a>索引指针读入</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//把第一个数（行数n）读取掉</span></span><br><span class="line">cin&gt;&gt;n;</span><br><span class="line"></span><br><span class="line"><span class="comment">//设定数组的索引指针p，从0开始</span></span><br><span class="line"><span class="type">int</span> p=<span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//EOF表示End Of File，就是文件末尾，如果没有读到文件末尾的话，就一直读取。</span></span><br><span class="line"><span class="comment">//也可以写成while(scanf(&quot;%d&quot;,&amp;st[p++])!=EOF)，就不需要循环体了</span></span><br><span class="line"><span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;st[p])!=EOF)</span><br><span class="line">&#123;</span><br><span class="line">    p++;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="字符串"><a href="#字符串" class="headerlink" title="字符串"></a>字符串</h1><h3 id="字符串转数字"><a href="#字符串转数字" class="headerlink" title="字符串转数字"></a>字符串转数字</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">char</span> num = <span class="string">&#x27;9&#x27;</span>;</span><br><span class="line"><span class="type">int</span> intNum = num - <span class="string">&#x27;0&#x27;</span>;</span><br></pre></td></tr></table></figure><h3 id="char的枚举"><a href="#char的枚举" class="headerlink" title="char的枚举"></a>char的枚举</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">char</span> a[N];</span><br><span class="line">cin&gt;&gt;a;<span class="comment">//下标从0开始</span></span><br><span class="line">cin&gt;&gt;a+<span class="number">1</span>;<span class="comment">//下标从1开始</span></span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span> ; a[i] ; i++)  <span class="comment">//因为读入最后是\0 </span></span><br><span class="line">    a[i]</span><br></pre></td></tr></table></figure><h3 id="string的枚举"><a href="#string的枚举" class="headerlink" title="string的枚举"></a>string的枚举</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">string s,res; </span><br><span class="line">cin&gt;&gt;s;  <span class="comment">//遇到空格自动结束</span></span><br><span class="line">str.<span class="built_in">length</span>()</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span> ; i&lt;s.<span class="built_in">size</span>() ; i++)  s[i]</span><br><span class="line"><span class="comment">//对另一个string 操作时</span></span><br><span class="line">res += s[i];</span><br></pre></td></tr></table></figure><h3 id="读入以回车结束"><a href="#读入以回车结束" class="headerlink" title="读入以回车结束"></a>读入以回车结束</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">string s;</span><br><span class="line"><span class="built_in">getlin</span>(cin,s);</span><br></pre></td></tr></table></figure><h3 id="字符逆序"><a href="#字符逆序" class="headerlink" title="字符逆序"></a>字符逆序</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">getline</span>(cin,s);</span><br><span class="line"><span class="built_in">reverse</span> (s.<span class="built_in">begin</span>(),s.<span class="built_in">end</span>());</span><br></pre></td></tr></table></figure><h3 id="按字典序排序"><a href="#按字典序排序" class="headerlink" title="按字典序排序"></a>按字典序排序</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sort</span>(str.<span class="built_in">begin</span>(), str.<span class="built_in">end</span>());</span><br></pre></td></tr></table></figure><p>BABBACAC–&gt;AAABBBCCC</p><h3 id="ASCII码常用知识"><a href="#ASCII码常用知识" class="headerlink" title="ASCII码常用知识"></a>ASCII码常用知识</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&#x27;0&#x27;</span>-<span class="string">&#x27;9&#x27;</span>  对应十进制的<span class="number">48</span><span class="number">-57</span></span><br><span class="line"><span class="string">&#x27;A&#x27;</span>-<span class="string">&#x27;Z&#x27;</span> 对应十进制的<span class="number">65</span><span class="number">-90</span></span><br><span class="line"><span class="string">&#x27;a&#x27;</span>-<span class="string">&#x27;z&#x27;</span>  对应十进制的<span class="number">97</span><span class="number">-122</span></span><br></pre></td></tr></table></figure><h3 id="大小写转换"><a href="#大小写转换" class="headerlink" title="大小写转换"></a>大小写转换</h3><h3 id="字串"><a href="#字串" class="headerlink" title="字串"></a>字串</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">string a = <span class="string">&quot;0123456789&quot;</span>;</span><br><span class="line">cout &lt;&lt; <span class="built_in">substr</span>(<span class="number">3</span>, <span class="number">4</span>) &lt;&lt; endl;</span><br><span class="line"><span class="comment">//如果只写一个参数的话就默认从参数开始到结尾的子串</span></span><br><span class="line">cout &lt;&lt; <span class="built_in">substr</span>(<span class="number">2</span>) &lt;&lt; endl;</span><br></pre></td></tr></table></figure><h3 id="交换"><a href="#交换" class="headerlink" title="交换"></a>交换</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">string a = <span class="string">&quot;0123456789&quot;</span>;</span><br><span class="line">cout &lt;&lt; <span class="built_in">substr</span>(<span class="number">3</span>, <span class="number">4</span>) &lt;&lt; endl;</span><br><span class="line"><span class="comment">//如果只写一个参数的话就默认从参数开始到结尾的子串</span></span><br><span class="line">cout &lt;&lt; <span class="built_in">substr</span>(<span class="number">2</span>) &lt;&lt; endl;</span><br></pre></td></tr></table></figure><h2 id="查找"><a href="#查找" class="headerlink" title="查找"></a>查找</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">string a = <span class="string">&quot;0123456789&quot;</span>, b = <span class="string">&quot;456&quot;</span>;</span><br><span class="line"><span class="type">char</span> c = <span class="string">&#x27;7&#x27;</span>;</span><br><span class="line"><span class="type">char</span> d[] = <span class="string">&quot;234&quot;</span>;</span><br><span class="line"><span class="comment">//这里如果不填pos这个参数的话就默认为从0开始</span></span><br><span class="line">cout &lt;&lt; a.<span class="built_in">find</span>(c) &lt;&lt; endl;</span><br><span class="line"><span class="comment">//从8开始找不到</span></span><br><span class="line">cout &lt;&lt; a.<span class="built_in">find</span>(c, <span class="number">8</span>) &lt;&lt; endl;</span><br></pre></td></tr></table></figure><h1 id="模板"><a href="#模板" class="headerlink" title="模板"></a>模板</h1><h3 id="日期模板"><a href="#日期模板" class="headerlink" title="日期模板"></a>日期模板</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> days[]=&#123;<span class="number">0</span>,<span class="number">31</span>,<span class="number">28</span>,<span class="number">31</span>,<span class="number">30</span>,<span class="number">31</span>,<span class="number">30</span>,<span class="number">31</span>,<span class="number">31</span>,<span class="number">30</span>,<span class="number">31</span>,<span class="number">30</span>,<span class="number">31</span>&#125;; <span class="comment">//开个数组存每个月天数</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">is_leap</span><span class="params">(<span class="type">int</span> year)</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> y%<span class="number">400</span>==<span class="number">0</span>||y%<span class="number">4</span>==<span class="number">0</span>&amp;&amp;y%<span class="number">100</span>!=<span class="number">0</span>; <span class="comment">//闰年 1 非闰年 0</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">daysofMonth</span><span class="params">(<span class="type">int</span> year,<span class="type">int</span> month)</span></span>&#123;  <span class="comment">//具体年月函数</span></span><br><span class="line">    <span class="keyword">if</span>(month==<span class="number">2</span>) <span class="keyword">return</span> <span class="built_in">is_leap</span>(year)+<span class="number">28</span>;  <span class="comment">//如果是闰年 就是1+28天</span></span><br><span class="line">    <span class="keyword">return</span> days[month]; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">bool</span> <span class="title">check</span><span class="params">(<span class="type">int</span> data)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> year = data / <span class="number">10000</span>; <span class="comment">//2001</span></span><br><span class="line">    <span class="type">int</span> month = data % <span class="number">10000</span> / <span class="number">100</span>; <span class="comment">//1002/100=10</span></span><br><span class="line">    <span class="type">int</span> day = data % <span class="number">100</span>;<span class="comment">//02</span></span><br><span class="line"> </span><br><span class="line">    <span class="comment">//data是否符合日期条件</span></span><br><span class="line">    <span class="keyword">if</span>(month&lt;<span class="number">1</span> || month&gt;<span class="number">12</span> ) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">if</span>(day&gt;<span class="number">31</span> || (month!=<span class="number">2</span> &amp;&amp; day&gt;days[month])) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">if</span>(month == <span class="number">2</span>)&#123;</span><br><span class="line">        <span class="type">int</span> leap; <span class="comment">//闰年</span></span><br><span class="line">        <span class="keyword">if</span>(year%<span class="number">100</span> &amp;&amp; year%<span class="number">4</span>==<span class="number">0</span> || year%<span class="number">400</span>==<span class="number">0</span>) leap=<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">if</span>(day&gt;days[<span class="number">2</span>]+leap) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="时间模板"><a href="#时间模板" class="headerlink" title="时间模板"></a>时间模板</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;02d%:02d:%02d&quot;</span>,hour,minute,second); <span class="comment">// 01:07:09 </span></span><br><span class="line"><span class="comment">//秒数转化为 钟表表显示</span></span><br><span class="line">cin&gt;&gt;t;<span class="comment">//输入秒数</span></span><br><span class="line"><span class="type">int</span> hour=t/<span class="number">3600</span>;<span class="comment">//从秒化出的小时数</span></span><br><span class="line">t=t%<span class="number">3600</span>;   <span class="comment">//分、秒只需考虑最后余下的不到1小时内的秒数</span></span><br><span class="line"><span class="type">int</span> minute=t/<span class="number">60</span>; <span class="comment">//分</span></span><br><span class="line"><span class="type">int</span> second=t%<span class="number">60</span>; <span class="comment">//余下的秒</span></span><br></pre></td></tr></table></figure><h3 id="公约数公倍数"><a href="#公约数公倍数" class="headerlink" title="公约数公倍数"></a>公约数公倍数</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">gcd</span><span class="params">(<span class="type">int</span> a,<span class="type">int</span> b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> b==<span class="number">0</span>?a:<span class="built_in">gcd</span>(b , a%b);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">lcm</span><span class="params">(<span class="type">int</span> a,<span class="type">int</span> b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> a*b/<span class="built_in">gcd</span>(a,b);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="10进制转n进制"><a href="#10进制转n进制" class="headerlink" title="10进制转n进制"></a>10进制转n进制</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> n;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">print</span><span class="params">(<span class="type">int</span> x)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(x&gt;n) <span class="built_in">print</span>(x/n);</span><br><span class="line">    cout&lt;&lt;x%n;<span class="comment">//利用递归直接打印逆序的数 </span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="type">int</span> x;</span><br><span class="line">    cin&gt;&gt;x&gt;&gt;n;</span><br><span class="line">    <span class="built_in">print</span>(x);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="n进制转10进制"><a href="#n进制转10进制" class="headerlink" title="n进制转10进制"></a>n进制转10进制</h3><h3 id="凑不出的最大数字"><a href="#凑不出的最大数字" class="headerlink" title="凑不出的最大数字"></a>凑不出的最大数字</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cin &gt;&gt; p &gt;&gt; q;</span><br><span class="line">res = (p<span class="number">-1</span>)*(q<span class="number">-1</span>)<span class="number">-1</span>;</span><br></pre></td></tr></table></figure><h3 id="保留小数"><a href="#保留小数" class="headerlink" title="保留小数"></a>保留小数</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">    <span class="comment">//printf(&quot;%.4lf&quot;,l); //4位小数 </span></span><br><span class="line">    <span class="comment">//printf(&quot;%.6lf&quot;,l); //6位小数 </span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%lf&quot;</span>,l); <span class="comment">//6位小数</span></span><br><span class="line"><span class="type">long</span> <span class="type">double</span> %lf</span><br><span class="line"><span class="type">double</span> <span class="number">8B</span> <span class="number">64b</span>it  %lf</span><br><span class="line"><span class="type">float</span> <span class="number">4B</span> <span class="number">32b</span>it  %f</span><br><span class="line"><span class="type">int</span>  <span class="number">4B</span> <span class="number">32b</span>it <span class="number">2</span>^<span class="number">31</span> <span class="number">10</span>^<span class="number">9</span> %d</span><br><span class="line"><span class="type">long</span> <span class="type">long</span> <span class="number">8B</span> <span class="number">64b</span>it <span class="number">2</span>^<span class="number">62</span> <span class="number">10</span>^<span class="number">18</span> %lld</span><br></pre></td></tr></table></figure><h3 id="负数取模"><a href="#负数取模" class="headerlink" title="负数取模"></a>负数取模</h3><p>((x%a+a))%a</p><h2 id="数组下标转为-x-y"><a href="#数组下标转为-x-y" class="headerlink" title="数组下标转为(x,y)"></a>数组下标转为(x,y)</h2><p><strong>数组中元素和数组下标都从0开始</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">行号: n/w   m/w</span><br><span class="line"></span><br><span class="line">列号：正常情况 ：n%w   m%w</span><br><span class="line"></span><br><span class="line">​  蛇形 <span class="keyword">if</span>(n/w是奇数) w<span class="number">-1</span>-n%w</span><br></pre></td></tr></table></figure><h2 id="内存转换"><a href="#内存转换" class="headerlink" title="内存转换"></a>内存转换</h2><p>Byte：字节(B)<br>bit：位(b)<br><strong>1 Byte = 8 bit</strong><br><strong>int = 4Byte=32bit</strong><br><strong>long = 8Byte=64bit</strong></p><p>基于1024这个数进行换算<br>1TB=1024GB<br>1GB=1024MB<br>1MB=1024KB<br>1KB=1024B<br>1B=8b</p><h2 id="取数位"><a href="#取数位" class="headerlink" title="取数位"></a>取数位</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">while</span>(x!=<span class="number">0</span>)&#123;</span><br><span class="line">    <span class="type">int</span> a=x%<span class="number">10</span>;<span class="comment">//a存的是取出的每一个数位</span></span><br><span class="line">    x/=<span class="number">10</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="数位转为为数字"><a href="#数位转为为数字" class="headerlink" title="数位转为为数字"></a>数位转为为数字</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">cal</span><span class="params">(<span class="type">int</span> a, <span class="type">int</span> b)</span> </span>&#123;</span><br><span class="line">  <span class="type">int</span> res = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">for</span> (<span class="type">int</span> i = a; i &lt;= b; i++) &#123;</span><br><span class="line">    res = res * <span class="number">10</span> + num[i];</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="取出x的每位数字"><a href="#取出x的每位数字" class="headerlink" title="取出x的每位数字"></a>取出x的每位数字</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> t = x % <span class="number">10</span>;</span><br><span class="line">x /= <span class="number">10</span>;</span><br></pre></td></tr></table></figure><h2 id="将字符数字转为数字"><a href="#将字符数字转为数字" class="headerlink" title="将字符数字转为数字"></a>将字符数字转为数字</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> x = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; str.<span class="built_in">size</span>(); i ++ )</span><br><span class="line">    x = x * <span class="number">10</span> + str[i] - <span class="string">&#x27;0&#x27;</span>;</span><br></pre></td></tr></table></figure><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><h2 id="全排列"><a href="#全排列" class="headerlink" title="全排列"></a>全排列</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">do</span>&#123;</span><br><span class="line"><span class="built_in">dfs</span>();</span><br><span class="line">&#125;<span class="keyword">while</span>(<span class="built_in">next_permutation</span>(num+<span class="number">1</span>,num+<span class="number">10</span>));</span><br></pre></td></tr></table></figure><h2 id="位运算用法"><a href="#位运算用法" class="headerlink" title="位运算用法"></a>位运算用法</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//0-32 取出第i位  op &gt;&gt; i &amp; 1</span></span><br><span class="line"><span class="comment">//翻转数组 0变1，1变0 backup[i][j] ^= 1;</span></span><br></pre></td></tr></table></figure><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>;i &lt; <span class="number">5</span>;i++)&#123;</span><br><span class="line">                <span class="keyword">if</span>(op &gt;&gt; i &amp; <span class="number">1</span>)<span class="comment">//对第1行的第i个灯，如果操作为1，就更新步数</span></span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="built_in">turn</span>( <span class="number">0</span> , i );<span class="comment">//0行，i列</span></span><br><span class="line">                    step ++;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="归并排序"><a href="#归并排序" class="headerlink" title="归并排序"></a>归并排序</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">merge_sort</span><span class="params">(<span class="type">int</span> q[], <span class="type">int</span> l, <span class="type">int</span> r)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (l &gt;= r) <span class="keyword">return</span>;</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> mid = l + r &gt;&gt; <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">merge_sort</span>(q, l, mid), <span class="built_in">merge_sort</span>(q, mid + <span class="number">1</span>, r);</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> k = <span class="number">0</span>, i = l, j = mid + <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span> (i &lt;= mid &amp;&amp; j &lt;= r)</span><br><span class="line">        <span class="keyword">if</span> (q[i] &lt;= q[j]) tmp[k ++ ] = q[i ++ ];</span><br><span class="line">        <span class="keyword">else</span> tmp[k ++ ] = q[j ++ ];</span><br><span class="line">    <span class="keyword">while</span> (i &lt;= mid) tmp[k ++ ] = q[i ++ ];</span><br><span class="line">    <span class="keyword">while</span> (j &lt;= r) tmp[k ++ ] = q[j ++ ];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (i = l, j = <span class="number">0</span>; i &lt;= r; i ++, j ++ ) q[i] = tmp[j];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="双指针"><a href="#双指针" class="headerlink" title="双指针"></a>双指针</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>,j = <span class="number">0</span>;i &lt; n;i++)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">while</span>(j &lt; i) j++;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="筛质数"><a href="#筛质数" class="headerlink" title="筛质数"></a>筛质数</h2>]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
          <category> 蓝桥杯 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数据结构 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>算法模板</title>
      <link href="/posts/2cc2fa98/"/>
      <url>/posts/2cc2fa98/</url>
      
        <content type="html"><![CDATA[<h1 id="计算机知识"><a href="#计算机知识" class="headerlink" title="计算机知识"></a>计算机知识</h1><h2 id="内存转换"><a href="#内存转换" class="headerlink" title="内存转换"></a>内存转换</h2><p>Byte：字节(B)<br>bit：位(b)<br><strong>1 Byte = 8 bit</strong><br><strong>int = 4Byte=32bit</strong><br><strong>long = 8Byte=64bit</strong></p><p>基于1024这个数进行换算<br>1TB=1024GB<br>1GB=1024MB<br>1MB=1024KB<br>1KB=1024B<br>1B=8b</p><h2 id="数据范围"><a href="#数据范围" class="headerlink" title="数据范围"></a>数据范围</h2><p>long long  </p><p>int </p><p>double </p><h2 id="任意进制转换"><a href="#任意进制转换" class="headerlink" title="任意进制转换"></a>任意进制转换</h2><h2 id="字符串数字转换"><a href="#字符串数字转换" class="headerlink" title="字符串数字转换"></a>字符串数字转换</h2><h1 id="数论"><a href="#数论" class="headerlink" title="数论"></a>数论</h1><h2 id="日期天数"><a href="#日期天数" class="headerlink" title="日期天数"></a>日期天数</h2><h3 id="星期问题"><a href="#星期问题" class="headerlink" title="星期问题"></a>星期问题</h3><p>已知今天是星期六，请问$20^{22}$后是星期几?</p><p>注意用数字 1 到 7 表示星期一到星期日。</p><p><strong>根据取模的数学公式，我们知道20和-1除以7是一样的结果，所以就是-1的22次方</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># 根据取模的数学公式，我们知道<span class="number">20</span>和<span class="number">-1</span>除以<span class="number">7</span>是一样的结果，所以就是<span class="number">-1</span>的<span class="number">22</span>次方</span><br><span class="line"># 所以也就是一天之后,星期六的一天之后也就是星期天</span><br><span class="line"><span class="built_in">print</span>(<span class="number">7</span>)</span><br></pre></td></tr></table></figure><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 20^22 可以化成 20个20相乘 同时每个20都除7取余 也就是6^22 再变为 11个6*6 再对36取余 为 11个1 相乘，由于是从周六开始的所以加1 为7 */</span>```</span><br></pre></td></tr></table></figure><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//打表找规律</span></span><br><span class="line"><span class="comment">//过x天，为 (6+x)%7</span></span><br><span class="line"><span class="comment">//（6+20^22)%7=6+20^22%7</span></span><br><span class="line"><span class="type">long</span> <span class="type">long</span> n = <span class="built_in">pow</span>(<span class="number">6</span>,<span class="number">22</span>);</span><br><span class="line"><span class="type">int</span> a = (<span class="number">6</span>+n)%<span class="number">7</span>;</span><br><span class="line">  <span class="keyword">if</span>(!a) cout&lt;&lt;<span class="number">7</span>;</span><br><span class="line">  <span class="keyword">else</span> cout &lt;&lt;a;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span> ; </span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><h3 id="多少个星期一"><a href="#多少个星期一" class="headerlink" title="多少个星期一"></a>多少个星期一</h3><p>整个 2020 世纪（1901 年 1 月 1 日至 2000 年 12 月 31日之间），一共有多少个星期一？(2000 年 12 月 31日是星期四)</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">int</span> days[<span class="number">13</span>] = &#123;<span class="number">0</span>,<span class="number">31</span>,<span class="number">28</span>,<span class="number">31</span>,<span class="number">30</span>,<span class="number">31</span>,<span class="number">30</span>,<span class="number">31</span>,<span class="number">31</span>,<span class="number">30</span>,<span class="number">31</span>,<span class="number">30</span>,<span class="number">31</span>&#125;;</span><br><span class="line"><span class="type">int</span> cnt = <span class="number">0</span>;<span class="comment">//相差的天数 </span></span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">check</span><span class="params">(<span class="type">int</span> date)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">int</span> year = date/<span class="number">10000</span>;</span><br><span class="line"><span class="type">int</span> month = date%<span class="number">10000</span>/<span class="number">100</span>;</span><br><span class="line"><span class="type">int</span> day = date%<span class="number">100</span>;</span><br><span class="line"><span class="keyword">if</span>(month&lt;<span class="number">1</span>||month&gt;<span class="number">12</span>) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line"><span class="keyword">if</span>(day&gt;<span class="number">31</span>||day&lt;<span class="number">1</span>) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line"><span class="keyword">if</span>(month!=<span class="number">2</span>&amp;&amp;day&gt;days[month]) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line"><span class="keyword">if</span>(month == <span class="number">2</span>)&#123;</span><br><span class="line"><span class="type">int</span> leap = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span>(year%<span class="number">4</span>==<span class="number">0</span>&amp;&amp;year%<span class="number">100</span>!=<span class="number">0</span> || year%<span class="number">400</span>==<span class="number">0</span>) leap= <span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span>(day&gt;days[<span class="number">2</span>]+leap) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//20001228是周一 </span></span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">19010101</span>;i&lt;=<span class="number">20001228</span>;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(<span class="built_in">check</span>(i)) cnt++; </span><br><span class="line">&#125;</span><br><span class="line">cout&lt;&lt;cnt&lt;&lt;endl;</span><br><span class="line">cout&lt;&lt;cnt/<span class="number">7</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span> ; </span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><p><img src="https://blog-1316756713.cos.ap-shanghai.myqcloud.com/img/202304072302434.webp" alt="image-20230407230213304"></p><p><img src="https://blog-1316756713.cos.ap-shanghai.myqcloud.com/img/202304072303533.webp" alt="image-20230407230336394"></p><p>拿excel求出的天数是少1天的</p><h2 id="时间"><a href="#时间" class="headerlink" title="时间"></a>时间</h2><p>1s = 1000ms</p><p>1min = 60s</p><p>1h = 60min = 3600s =3600000ms </p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="type">long</span> <span class="type">long</span> n;</span><br><span class="line">  cin&gt;&gt;n;</span><br><span class="line">  <span class="type">int</span> hour = n /<span class="number">3600000</span> % <span class="number">24</span>;</span><br><span class="line">  <span class="type">int</span> minute = n % <span class="number">3600000</span> / <span class="number">60000</span>;</span><br><span class="line">  <span class="type">int</span> s = n % <span class="number">3600000</span> % <span class="number">60000</span> /<span class="number">1000</span>;</span><br><span class="line">  <span class="comment">//cout&lt;&lt;46800999/3600000&lt;&lt;endl ;</span></span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">&quot;%02d:%02d:%02d&quot;</span>,hour,minute,s);</span><br><span class="line">  <span class="comment">// 请在此输入您的代码</span></span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="特殊时间"><a href="#特殊时间" class="headerlink" title="特殊时间"></a>特殊时间</h3><p>找规律的题</p><p>2022 年 2 月 22 日 22: 20 是一个很有意义的时间, 年份为 2022 , 由 3 个 2 和 1 个 0 组成, 如果将月和日写成 4 位, 为 0222 , 也是由 3 个 2 和 1 个 0 组 成, 如果将时间中的时和分写成 4 位, 还是由 3 个 2 和 1 个 0 组成。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">  1110    1110年11月10号11点10分</span></span><br><span class="line"><span class="comment">  </span></span><br><span class="line"><span class="comment">  1110    4*4*4</span></span><br><span class="line"><span class="comment">  1112    4*3*4</span></span><br><span class="line"><span class="comment">  1113    4*1*3</span></span><br><span class="line"><span class="comment">  1114    4*1*3</span></span><br><span class="line"><span class="comment">  1115    4*1*3</span></span><br><span class="line"><span class="comment">  1116    4*1*2</span></span><br><span class="line"><span class="comment">  1117    4*1*2</span></span><br><span class="line"><span class="comment">  1118    4*1*2</span></span><br><span class="line"><span class="comment">  1119    4*1*2</span></span><br><span class="line"><span class="comment">  2220    4*1*4</span></span><br><span class="line"><span class="comment">  2221    4*1*4</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line">  <span class="type">int</span> sum=<span class="number">4</span>*<span class="number">4</span>*<span class="number">4</span>+<span class="number">4</span>*<span class="number">3</span>*<span class="number">4</span>+<span class="number">4</span>*<span class="number">1</span>*<span class="number">3</span>*<span class="number">3</span>+<span class="number">4</span>*<span class="number">1</span>*<span class="number">2</span>*<span class="number">4</span>+<span class="number">4</span>*<span class="number">1</span>*<span class="number">4</span>*<span class="number">2</span>;</span><br><span class="line">  cout&lt;&lt;sum&lt;&lt;endl; </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="杨辉三角"><a href="#杨辉三角" class="headerlink" title="杨辉三角"></a>杨辉三角</h2><h2 id="斐波那契"><a href="#斐波那契" class="headerlink" title="斐波那契"></a>斐波那契</h2><h2 id="GCD-最大公约数"><a href="#GCD-最大公约数" class="headerlink" title="GCD 最大公约数"></a>GCD 最大公约数</h2><h2 id="质数筛"><a href="#质数筛" class="headerlink" title="质数筛"></a>质数筛</h2><h2 id="整除性"><a href="#整除性" class="headerlink" title="整除性"></a>整除性</h2><h2 id="快速幂"><a href="#快速幂" class="headerlink" title="快速幂"></a>快速幂</h2><h2 id="Fermat小定理求逆元"><a href="#Fermat小定理求逆元" class="headerlink" title="Fermat小定理求逆元"></a>Fermat小定理求逆元</h2><h2 id="等比数列"><a href="#等比数列" class="headerlink" title="等比数列"></a>等比数列</h2><h2 id="等差数列"><a href="#等差数列" class="headerlink" title="等差数列"></a>等差数列</h2><h2 id="排列数"><a href="#排列数" class="headerlink" title="排列数"></a>排列数</h2><h2 id="组合数"><a href="#组合数" class="headerlink" title="组合数"></a>组合数</h2><h1 id="搜索"><a href="#搜索" class="headerlink" title="搜索"></a>搜索</h1><h2 id="DFS"><a href="#DFS" class="headerlink" title="DFS"></a>DFS</h2><h2 id="BFS"><a href="#BFS" class="headerlink" title="BFS"></a>BFS</h2><h1 id="基础知识"><a href="#基础知识" class="headerlink" title="基础知识"></a>基础知识</h1><h2 id="二分"><a href="#二分" class="headerlink" title="二分"></a>二分</h2><h3 id="整数二分"><a href="#整数二分" class="headerlink" title="整数二分"></a>整数二分</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">while</span>(q--)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;k);</span><br><span class="line"><span class="type">int</span> l =<span class="number">0</span>,r=n<span class="number">-1</span>;</span><br><span class="line">        <span class="comment">//左边界</span></span><br><span class="line"><span class="keyword">while</span>(l &lt; r)</span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> mid = l+r&gt;&gt;<span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span>(a[mid] &gt;= k) r = mid;  <span class="comment">//r = mid 对应 l+r&gt;&gt;1</span></span><br><span class="line"><span class="keyword">else</span> l =mid+<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(a[l]==k) <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>,l); </span><br><span class="line"><span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">&quot;-1 &quot;</span>);</span><br><span class="line">r = n<span class="number">-1</span>;、</span><br><span class="line">                <span class="comment">//右边界</span></span><br><span class="line"><span class="keyword">while</span>(l &lt; r)</span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> mid = l+r+<span class="number">1</span>&gt;&gt;<span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span>(a[mid] &lt;= k) l = mid;</span><br><span class="line"><span class="keyword">else</span> r =mid<span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(a[l]==k) <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>,l); </span><br><span class="line"><span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">&quot;-1&quot;</span>);</span><br><span class="line"><span class="built_in">puts</span>(<span class="string">&quot;&quot;</span>);  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="实数二分"><a href="#实数二分" class="headerlink" title="实数二分"></a>实数二分</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">   <span class="keyword">while</span>(r-l &gt; (<span class="number">1e-7</span>))  <span class="comment">//6位小数的话，这里不能是1e-6，可以是-7，-8</span></span><br><span class="line">   &#123;</span><br><span class="line">   <span class="type">double</span> mid = (l+r)/<span class="number">2</span>;  <span class="comment">//这里必须加括号 </span></span><br><span class="line">   <span class="keyword">if</span>(mid*mid*mid &gt;= n) r = mid;</span><br><span class="line"><span class="keyword">else</span> l =mid;</span><br><span class="line"> </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="前缀和"><a href="#前缀和" class="headerlink" title="前缀和"></a>前缀和</h2><h2 id="差分"><a href="#差分" class="headerlink" title="差分"></a>差分</h2><h2 id="双指针"><a href="#双指针" class="headerlink" title="双指针"></a>双指针</h2><h2 id="哈希"><a href="#哈希" class="headerlink" title="哈希"></a>哈希</h2><h2 id="排序"><a href="#排序" class="headerlink" title="排序"></a>排序</h2><h2 id="sort"><a href="#sort" class="headerlink" title="sort"></a>sort</h2><h3 id="一般用法"><a href="#一般用法" class="headerlink" title="一般用法"></a>一般用法</h3><h3 id="Cmp"><a href="#Cmp" class="headerlink" title="Cmp"></a>Cmp</h3><h3 id="struct"><a href="#struct" class="headerlink" title="struct"></a>struct</h3><h2 id="逆序对"><a href="#逆序对" class="headerlink" title="逆序对"></a>逆序对</h2><h3 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h3><p><img src="https://blog-1316756713.cos.ap-shanghai.myqcloud.com/img/202304071757567.webp" alt="image-20230407175700398"> </p><p><img src="https://blog-1316756713.cos.ap-shanghai.myqcloud.com/img/202304071814583.webp" alt="image-20230407181441433"></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> LL;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">100010</span>;</span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line"><span class="type">int</span> q[N],tmp[N];</span><br><span class="line">LL res;</span><br><span class="line"><span class="function">LL <span class="title">merge_sort</span><span class="params">(<span class="type">int</span> q[], <span class="type">int</span> l,<span class="type">int</span> r)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//if(l&gt;=r) return res;  </span></span><br><span class="line"><span class="keyword">if</span>(l&gt;=r) <span class="keyword">return</span> <span class="number">0</span>;   <span class="comment">//这里必须为return 0</span></span><br><span class="line"><span class="type">int</span> mid = l + r &gt;&gt;<span class="number">1</span>;<span class="comment">//中间位置，归并排序 </span></span><br><span class="line"></span><br><span class="line">res = <span class="built_in">merge_sort</span>(q , l , mid)+<span class="built_in">merge_sort</span>(q ,mid+<span class="number">1</span>,r);<span class="comment">//左右两端的答案 </span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> i=l,j=mid+<span class="number">1</span>;</span><br><span class="line"><span class="type">int</span> k=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span>(i&lt;=mid&amp;&amp;j&lt;=r)&#123;</span><br><span class="line"><span class="keyword">if</span>(q[i]&lt;=q[j]) tmp[k++] = q[i++];</span><br><span class="line"><span class="keyword">else</span> </span><br><span class="line">&#123;</span><br><span class="line">tmp[k++] = q[j++];</span><br><span class="line"><span class="comment">//res+=mid-i;</span></span><br><span class="line">res+=mid-i+<span class="number">1</span>; <span class="comment">//这里一定要注意算个数要+1</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//扫尾</span></span><br><span class="line"><span class="keyword">while</span>(i&lt;=mid) tmp[k++] = q[i++];</span><br><span class="line"><span class="keyword">while</span>(j&lt;=r)   tmp[k++] = q[j++];</span><br><span class="line"></span><br><span class="line"><span class="comment">//恢复原数组</span></span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=l,j=<span class="number">0</span>;i&lt;=r;i++,j++) q[i] = tmp[j];</span><br><span class="line"><span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cin &gt;&gt; n;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++) cin &gt;&gt; q[i];</span><br><span class="line">cout&lt;&lt;<span class="built_in">merge_sort</span>(q ,<span class="number">0</span>,n<span class="number">-1</span>)&lt;&lt;endl;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"> &#125; </span><br></pre></td></tr></table></figure><h2 id="括号配对"><a href="#括号配对" class="headerlink" title="括号配对"></a>括号配对</h2><h1 id="DP"><a href="#DP" class="headerlink" title="DP"></a>DP</h1><h2 id="线性DP"><a href="#线性DP" class="headerlink" title="线性DP"></a>线性DP</h2><h3 id="数字三角形"><a href="#数字三角形" class="headerlink" title="数字三角形"></a>数字三角形</h3><h3 id="最长上升子序列"><a href="#最长上升子序列" class="headerlink" title="最长上升子序列"></a>最长上升子序列</h3><h2 id="背包DP"><a href="#背包DP" class="headerlink" title="背包DP"></a>背包DP</h2><h3 id="01背包"><a href="#01背包" class="headerlink" title="01背包"></a>01背包</h3><h3 id="完全背包"><a href="#完全背包" class="headerlink" title="完全背包"></a>完全背包</h3><h2 id="树形DP"><a href="#树形DP" class="headerlink" title="树形DP"></a>树形DP</h2><h1 id="图论"><a href="#图论" class="headerlink" title="图论"></a>图论</h1><h2 id="最短路"><a href="#最短路" class="headerlink" title="最短路"></a>最短路</h2><h2 id="最小生成树"><a href="#最小生成树" class="headerlink" title="最小生成树"></a>最小生成树</h2><h2 id="拓扑排序"><a href="#拓扑排序" class="headerlink" title="拓扑排序"></a>拓扑排序</h2><h2 id="二分图"><a href="#二分图" class="headerlink" title="二分图"></a>二分图</h2><h1 id="字符串"><a href="#字符串" class="headerlink" title="字符串"></a>字符串</h1><h2 id="读入操作"><a href="#读入操作" class="headerlink" title="读入操作"></a>读入操作</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">char</span> s[N],P[N];</span><br><span class="line">cin&gt;&gt;s+<span class="number">1</span>&gt;&gt;p+<span class="number">1</span>;  <span class="comment">//从1开始读吗？</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="√-Tire树"><a href="#√-Tire树" class="headerlink" title="√ Tire树"></a>√ Tire树</h2><p>用来高效的存储字符串集合的数据结构</p><p><img src="https://blog-1316756713.cos.ap-shanghai.myqcloud.com/img/202304072142463.webp" alt="image-20230407214238219"></p><p>标记每个单词的结尾</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> son[N][<span class="number">26</span>];<span class="comment">//char数组中每个点的所有儿子</span></span><br><span class="line"><span class="type">int</span> cnt[N]<span class="comment">//以当前字母结尾的一共有多少个</span></span><br><span class="line"><span class="type">int</span> idx<span class="comment">//当前用到了哪个下标。下标是0的点，既是根节点，又是空节点    idx 辅助构建前后节点的链式关系</span></span><br><span class="line"><span class="comment">//树最开始是从0开始的，如果这个节点没有就创建，这样就在下一层，所以++idx</span></span><br></pre></td></tr></table></figure><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> n ;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">100010</span>;</span><br><span class="line"><span class="type">int</span> son[N][<span class="number">26</span>];<span class="comment">//把a-z转换成0-25的数字,记录n的对应u的儿子节点的个数 </span></span><br><span class="line"><span class="type">int</span> idx;<span class="comment">//树的层数</span></span><br><span class="line"><span class="type">int</span>  cnt[N];<span class="comment">//以当前单词最后一个字母结尾的数量</span></span><br><span class="line"><span class="type">char</span> str[N]; </span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">insert</span><span class="params">(<span class="type">char</span> str[])</span></span></span><br><span class="line"><span class="function"><span class="comment">//void insert(char *str)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">int</span> p=<span class="number">0</span>;<span class="comment">//从根节点开始插入 </span></span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;str[i];i++)&#123;</span><br><span class="line"><span class="type">int</span> u = str[i]-<span class="string">&#x27;a&#x27;</span>;<span class="comment">//取出新插入的字符 </span></span><br><span class="line"><span class="keyword">if</span>(son[p][u]==<span class="number">0</span>) son[p][u] = ++idx;</span><br><span class="line">p = son[p][u]; </span><br><span class="line">&#125;</span><br><span class="line">cnt[p]++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">query</span><span class="params">(<span class="type">char</span> *str)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">int</span> p=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;str[i];i++)&#123;</span><br><span class="line"><span class="type">int</span> u = str[i]-<span class="string">&#x27;a&#x27;</span>;<span class="comment">//取出查询的字符 </span></span><br><span class="line"><span class="keyword">if</span>(son[p][u]==<span class="number">0</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">p = son[p][u];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> cnt[p];</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cin&gt;&gt;n;</span><br><span class="line"><span class="keyword">while</span>(n--)</span><br><span class="line">&#123;</span><br><span class="line"><span class="type">char</span> op[<span class="number">2</span>];</span><br><span class="line">cin&gt;&gt;op&gt;&gt;str;</span><br><span class="line"><span class="keyword">if</span>(op[<span class="number">0</span>] == <span class="string">&#x27;I&#x27;</span>) <span class="built_in">insert</span>(str);</span><br><span class="line"><span class="keyword">else</span> cout&lt;&lt;<span class="built_in">query</span>(str)&lt;&lt;endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><h2 id="√-KMP（下标从1开始）"><a href="#√-KMP（下标从1开始）" class="headerlink" title="√ KMP（下标从1开始）"></a>√ KMP（下标从1开始）</h2><h3 id="暴力算法（朴素算法）"><a href="#暴力算法（朴素算法）" class="headerlink" title="暴力算法（朴素算法）"></a>暴力算法（朴素算法）</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//S为原串（长串），P为模板串</span></span><br><span class="line"><span class="comment">//S[N]、P[M]</span></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i ++ )<span class="comment">//从起点s[i]开始枚举是否成功</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">bool</span> flag = <span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">1</span>; j &lt;= m; j ++ ) <span class="comment">//枚举长度</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (s[i + j - <span class="number">1</span>] != p[j])</span><br><span class="line">        &#123;</span><br><span class="line">            flag=<span class="literal">false</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="前后缀算法O-n"><a href="#前后缀算法O-n" class="headerlink" title="前后缀算法O(n)"></a>前后缀算法O(n)</h3><h4 id="匹配思路"><a href="#匹配思路" class="headerlink" title="匹配思路"></a>匹配思路</h4><p>ne[i]表示以i为终点的后缀和从1开始的前缀相等，且后缀的长度最长</p><p><img src="https://blog-1316756713.cos.ap-shanghai.myqcloud.com/img/202304071915854.webp" alt="image-20230407191553279"></p><p><img src="https://blog-1316756713.cos.ap-shanghai.myqcloud.com/img/202304071926159.webp" alt="image-20230407192612000"></p><p>试图和$s_i$比较的是$p_{j+1}$</p><p>所以匹配字符串循环的时候s从1开始，p从0开始</p><h4 id="next思路（对模式串）"><a href="#next思路（对模式串）" class="headerlink" title="next思路（对模式串）"></a>next思路（对模式串）</h4><p>当$s_i$和$p_{j+1}$不能匹配的话，把j回退到ne[j]的位置，就是把整个字符串前移。如果不行的话，再求一次,为ne[ne[j]]</p><p><img src="https://blog-1316756713.cos.ap-shanghai.myqcloud.com/img/202304072051761.webp" alt="image-20230407205139540"></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">next[<span class="number">1</span>]=<span class="number">0</span></span><br><span class="line"><span class="comment">//从2开始</span></span><br><span class="line">i=<span class="number">2</span>,j=<span class="number">0</span>;i&lt;=n;i++ <span class="comment">//j是枚举长度</span></span><br><span class="line"><span class="keyword">while</span>(j&amp;&amp;p[i]!=p[j+<span class="number">1</span>]) j=ne[j] <span class="comment">//回退一下</span></span><br><span class="line"><span class="keyword">if</span>(p[i]==p[j+<span class="number">1</span>]) j++;<span class="comment">//p[i]和从开头长度为j+1位置的数字进行比较</span></span><br><span class="line">ne[i]=j;</span><br></pre></td></tr></table></figure><p>跳ne[j]之后的位置：如下图红色框选的2段相同</p><p><img src="https://blog-1316756713.cos.ap-shanghai.myqcloud.com/img/202304072108615.webp" alt="image-20230407210816374"></p><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">100010</span>;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> M = <span class="number">1000010</span>;</span><br><span class="line"><span class="type">int</span> n,m;</span><br><span class="line"><span class="type">char</span> p[N],s[M];</span><br><span class="line"><span class="type">int</span> ne[M];</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//p和s的下标从1开始读入 </span></span><br><span class="line">cin&gt;&gt;n&gt;&gt;p+<span class="number">1</span>&gt;&gt;m&gt;&gt;s+<span class="number">1</span>;</span><br><span class="line"><span class="comment">//对于模式串p，求next 数组</span></span><br><span class="line"><span class="comment">//next[1]=0</span></span><br><span class="line"><span class="comment">//要注意next数组只针对p</span></span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">2</span>,j=<span class="number">0</span>;i&lt;=n;i++)</span><br><span class="line">&#123;<span class="comment">//对于p的每一个位置</span></span><br><span class="line"><span class="keyword">while</span>(j&amp;&amp;p[i] != p[j+<span class="number">1</span>]) j=ne[j];<span class="comment">//如果不匹配的话，回退到ne[j]</span></span><br><span class="line"><span class="keyword">if</span>(p[i] == p[j+<span class="number">1</span>]) j++;<span class="comment">//长度增加</span></span><br><span class="line"><span class="comment">//ne[j] = j;//结束到最后一个匹配的位置 </span></span><br><span class="line">ne[i] = j;<span class="comment">//对于p的第i个位置 前后缀的长度为j</span></span><br><span class="line">&#125; </span><br><span class="line"><span class="comment">//匹配环节</span></span><br><span class="line"><span class="comment">//i针对长串s </span></span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>,j=<span class="number">0</span>;i&lt;=m;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">while</span>(j &amp;&amp; s[i]!=p[j+<span class="number">1</span>]) j=ne[j];<span class="comment">//没有回退到起点，就一直回退</span></span><br><span class="line"><span class="keyword">if</span>(s[i]==p[j+<span class="number">1</span>] ) j++;</span><br><span class="line"><span class="keyword">if</span>(j==n)&#123; <span class="comment">//匹配结束</span></span><br><span class="line">cout &lt;&lt; i-n &lt;&lt; <span class="string">&quot; &quot;</span>;   <span class="comment">//返回的从0开始的下标</span></span><br><span class="line">j=ne[j];<span class="comment">//匹配完成也需要回退 </span></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125; </span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><h2 id="字符串哈希"><a href="#字符串哈希" class="headerlink" title="字符串哈希"></a>字符串哈希</h2><h1 id="数据结构"><a href="#数据结构" class="headerlink" title="数据结构"></a>数据结构</h1><h2 id="并查集"><a href="#并查集" class="headerlink" title="并查集"></a>并查集</h2><h2 id="树状数组（类似于逆序对）"><a href="#树状数组（类似于逆序对）" class="headerlink" title="树状数组（类似于逆序对）"></a>树状数组（类似于逆序对）</h2><h2 id="线段树（几率不大）"><a href="#线段树（几率不大）" class="headerlink" title="线段树（几率不大）"></a>线段树（几率不大）</h2>]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
          <category> 蓝桥杯 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 算法模板 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>十二届B组真题</title>
      <link href="/posts/10f14ed7/"/>
      <url>/posts/10f14ed7/</url>
      
        <content type="html"><![CDATA[<h1 id="A空间"><a href="#A空间" class="headerlink" title="A空间"></a>A空间</h1><p>65536</p><p><img src="https://blog-1316756713.cos.ap-shanghai.myqcloud.com/img/202304041410409.webp" alt="image-20230404141035154"></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//256MB= 256*1024B = 256*1024*8bite</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> LL;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">LL a= <span class="number">256</span>*<span class="number">1024</span>*<span class="number">8</span>/<span class="number">32</span>;</span><br><span class="line">cout&lt;&lt;a;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="B卡片"><a href="#B卡片" class="headerlink" title="B卡片"></a>B卡片</h1><p>答案：3182</p><p><img src="https://blog-1316756713.cos.ap-shanghai.myqcloud.com/img/202304041411899.webp" alt="image-20230404141121718"></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> LL;</span><br><span class="line"><span class="type">int</span> num[<span class="number">10</span>];<span class="comment">//记录0—9用的多少次 </span></span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">check</span><span class="params">(<span class="type">int</span> num[])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;=<span class="number">9</span>;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(num[i]&gt;<span class="number">2021</span>) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line"> &#125; </span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">memset</span>(num,<span class="number">0</span>,<span class="keyword">sizeof</span> num);</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;<span class="number">20210</span>;i++)&#123;</span><br><span class="line"><span class="type">int</span> x = i;</span><br><span class="line"><span class="keyword">while</span>(x)</span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> c = x%<span class="number">10</span>;</span><br><span class="line">num[c]++;</span><br><span class="line">x/=<span class="number">10</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">bool</span> flag = <span class="built_in">check</span>(num);</span><br><span class="line"><span class="keyword">if</span>(!flag) &#123;</span><br><span class="line">cout&lt;&lt;i&lt;&lt;endl;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="C直线"><a href="#C直线" class="headerlink" title="C直线"></a>C直线</h1><h1 id="图论"><a href="#图论" class="headerlink" title="图论"></a>图论</h1><h2 id="发现环"><a href="#发现环" class="headerlink" title="发现环"></a>发现环</h2><h2 id="空间跳跃"><a href="#空间跳跃" class="headerlink" title="空间跳跃"></a>空间跳跃</h2><h1 id="全排列"><a href="#全排列" class="headerlink" title="全排列"></a>全排列</h1><h2 id="带分数"><a href="#带分数" class="headerlink" title="带分数"></a>带分数</h2><h1 id="快速幂"><a href="#快速幂" class="headerlink" title="快速幂"></a>快速幂</h1><h2 id="堆的计数"><a href="#堆的计数" class="headerlink" title="堆的计数"></a>堆的计数</h2><h1 id="矩阵乘法"><a href="#矩阵乘法" class="headerlink" title="矩阵乘法"></a>矩阵乘法</h1><h2 id="灾后重建"><a href="#灾后重建" class="headerlink" title="灾后重建"></a>灾后重建</h2><h1 id="矩阵快速幂"><a href="#矩阵快速幂" class="headerlink" title="矩阵快速幂"></a>矩阵快速幂</h1><h2 id="斐波那契"><a href="#斐波那契" class="headerlink" title="斐波那契"></a>斐波那契</h2><h1 id="字符串"><a href="#字符串" class="headerlink" title="字符串"></a>字符串</h1><p><img src="https://blog-1316756713.cos.ap-shanghai.myqcloud.com/img/202304070120773.webp" alt="image-20230407012054481"></p><h1 id="二叉树"><a href="#二叉树" class="headerlink" title="二叉树"></a>二叉树</h1><h2 id="完全二叉树的权值"><a href="#完全二叉树的权值" class="headerlink" title="完全二叉树的权值"></a>完全二叉树的权值</h2><h1 id="平衡树"><a href="#平衡树" class="headerlink" title="平衡树"></a>平衡树</h1><h2 id="压缩变换"><a href="#压缩变换" class="headerlink" title="压缩变换"></a>压缩变换</h2><h1 id="并查集"><a href="#并查集" class="headerlink" title="并查集"></a>并查集</h1><h2 id="修改数组"><a href="#修改数组" class="headerlink" title="修改数组"></a>修改数组</h2><h1 id="树状数组"><a href="#树状数组" class="headerlink" title="树状数组"></a>树状数组</h1><h2 id="小朋友排队"><a href="#小朋友排队" class="headerlink" title="小朋友排队"></a>小朋友排队</h2><h1 id="线段树"><a href="#线段树" class="headerlink" title="线段树"></a>线段树</h1><h2 id="双向排序"><a href="#双向排序" class="headerlink" title="双向排序"></a>双向排序</h2><h2 id="灾后重建-1"><a href="#灾后重建-1" class="headerlink" title="灾后重建"></a>灾后重建</h2><h2 id="油漆面积"><a href="#油漆面积" class="headerlink" title="油漆面积"></a>油漆面积</h2><h2 id="晚会节目单"><a href="#晚会节目单" class="headerlink" title="晚会节目单"></a>晚会节目单</h2><h1 id="暴力"><a href="#暴力" class="headerlink" title="暴力"></a>暴力</h1><p>超级多</p><h1 id="十三届"><a href="#十三届" class="headerlink" title="十三届"></a>十三届</h1><h2 id="刷题统计-10分"><a href="#刷题统计-10分" class="headerlink" title="刷题统计(10分)"></a>刷题统计(10分)</h2><p>暴力60%</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="comment">//2:18</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">long</span> n ;</span><br><span class="line"><span class="type">long</span> a,b;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cin &gt;&gt; a &gt;&gt; b &gt;&gt;n;</span><br><span class="line"><span class="type">int</span> cnt;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i =<span class="number">1</span>;i&lt;=<span class="number">1e8</span>;i++)  <span class="comment">//O(n)最多取1e8   //枚举题目数目</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(i%<span class="number">7</span>&lt;=<span class="number">5</span>&amp;&amp;i%<span class="number">7</span>&gt;<span class="number">0</span>) cnt+=a;</span><br><span class="line"><span class="keyword">if</span>(i%<span class="number">7</span>==<span class="number">6</span> ||i%<span class="number">7</span>==<span class="number">0</span>) cnt+=b;</span><br><span class="line"><span class="keyword">if</span>(cnt&gt;=n)&#123;</span><br><span class="line">cout&lt;&lt;i;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"> &#125; </span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"> &#125; </span><br></pre></td></tr></table></figure><p>先计算几周,再计算几天</p><p>每7天 </p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> LL;</span><br><span class="line"></span><br><span class="line"><span class="comment">//2:18</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line">LL n ;</span><br><span class="line">LL a,b;</span><br><span class="line"></span><br><span class="line">LL s[<span class="number">8</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cin &gt;&gt; a &gt;&gt; b &gt;&gt;n;</span><br><span class="line">LL week ;</span><br><span class="line">LL day;</span><br><span class="line">LL t =a*<span class="number">5</span>+b*<span class="number">2</span>;</span><br><span class="line"></span><br><span class="line">week = n/t;</span><br><span class="line">LL c = n%t;</span><br><span class="line">    LL d[<span class="number">8</span>]=&#123;<span class="number">0</span>,a,a,a,a,a,b,b&#125;;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">7</span>;i++)</span><br><span class="line">&#123;</span><br><span class="line">    s[i]=s[i<span class="number">-1</span>]+d[i];  </span><br><span class="line">&#125;</span><br><span class="line">    <span class="keyword">if</span>(c)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">7</span>;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(s[i]&gt;=c)&#123;</span><br><span class="line">            day = i;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;   </span><br><span class="line">    &#125;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        day = <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line"></span><br><span class="line">cout&lt;&lt;week*<span class="number">7</span>+day;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"> &#125; </span><br></pre></td></tr></table></figure><h2 id="修剪灌木"><a href="#修剪灌木" class="headerlink" title="修剪灌木"></a>修剪灌木</h2>]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
          <category> 蓝桥杯 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 十二届B组真题 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>图论</title>
      <link href="/posts/10f14ed7/"/>
      <url>/posts/10f14ed7/</url>
      
        <content type="html"><![CDATA[<p>z</p><p>DP时没有环存在的最短路问题</p><p>边权都是1的时候，才会用BFS求最短路</p>]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
          <category> 蓝桥杯 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 图论 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>数论</title>
      <link href="/posts/c98af52b/"/>
      <url>/posts/c98af52b/</url>
      
        <content type="html"><![CDATA[<h1 id="筛法求素数"><a href="#筛法求素数" class="headerlink" title="筛法求素数"></a>筛法求素数</h1><p>线性筛法求素数 $O(n)$</p><p>求1 ~ n中所有质数以及每个数的最小质因子</p><p>bool st[N]  0:没有被筛过  1：被筛过的话，说明它是某个数的倍数</p><ol><li>筛掉的一定是合数，且一定是用其最小质因子筛</li><li>$P_j$  i $P_j$一定不大于i的最小质因子</li></ol><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> prime[N],cnt;                                    <span class="comment">//质数和质数的个数</span></span><br><span class="line"><span class="type">bool</span> st[N];                                             <span class="comment">//记录筛的合数</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">get_primes</span><span class="params">(<span class="type">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">2</span>;i&lt;=n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(!st[i]) prime[cnt++] = i;                <span class="comment">//如果没有被筛过，就记录为质数</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">0</span>;prime[j]*i&lt;=n;j++)          <span class="comment">//合数，直属的倍数</span></span><br><span class="line">        &#123;</span><br><span class="line">            st[prime[j]*i] = <span class="literal">true</span>;                    <span class="comment">//合数记为被筛过</span></span><br><span class="line">            <span class="keyword">if</span>(i%prime[j] == <span class="number">0</span>) <span class="keyword">break</span>;           <span class="comment">//如果i是某个质数的倍数，就break</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>求最小质因子minp[N]</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">get_primes</span><span class="params">(<span class="type">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">//质数最小是2</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">2</span>;i &lt;= n;i ++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(!st[i]) </span><br><span class="line">        &#123;</span><br><span class="line">        minp[i] = i;<span class="comment">//质数的最小质因子是它本身</span></span><br><span class="line">            prime[cnt++] = i;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">0</span>; prime[j] * i &lt;= n; j++)&#123;</span><br><span class="line">            <span class="type">int</span> t = prime[j] * i;</span><br><span class="line">            st[t] = <span class="literal">true</span>;     <span class="comment">//筛掉这个数字</span></span><br><span class="line">            minp[t] = prime[j];  <span class="comment">//记录这个合数的最小质因子为prime[j]</span></span><br><span class="line">            <span class="keyword">if</span>(i % prime[j] == <span class="number">0</span>) <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="GCD最大公约数"><a href="#GCD最大公约数" class="headerlink" title="GCD最大公约数"></a>GCD最大公约数</h1><p>欧几里得算法 gcd(a,b) 也可记为(a,b)</p><p>辗转相除法：</p><p>a和b的最大公约数，等于b和（a mod b）的最大公约数<br>$$<br>gcd(a,b) = gcd(b,a\ mod\ b)<br>$$</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">gcd</span><span class="params">(<span class="type">int</span> a,<span class="type">int</span> b)</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> b ? <span class="built_in">gcd</span>(b , a%b) : a;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="ACW1246等差数列"><a href="#ACW1246等差数列" class="headerlink" title="ACW1246等差数列"></a><a href="https://www.acwing.com/problem/content/1248/">ACW1246等差数列</a></h2><p>等差数列的性质：项数 = （末项-首项） / 公差 +1 </p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">const</span> <span class="type">int</span> N =  <span class="number">100010</span>;</span><br><span class="line"><span class="type">int</span> a[N];</span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">gcd</span><span class="params">(<span class="type">int</span> a,<span class="type">int</span> b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> b ? <span class="built_in">gcd</span>(b,a%b) : a; <span class="comment">//辗转相除法求最大公约数</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cin &gt;&gt; n;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++) <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;a[i]);</span><br><span class="line"><span class="built_in">sort</span>(a,a+n);</span><br><span class="line"><span class="comment">//思路：求项数  = 末项-首项 / 公差 +1 </span></span><br><span class="line"><span class="comment">//最大公约数</span></span><br><span class="line"><span class="type">int</span> d=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i+<span class="number">1</span>&lt;n;i++)</span><br><span class="line">&#123;</span><br><span class="line">d = <span class="built_in">gcd</span>(d,a[i+<span class="number">1</span>]-a[i]);  <span class="comment">//0和a的最大公约数为a</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> res=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span>(d&gt;<span class="number">0</span>)&#123;</span><br><span class="line">res = (a[n<span class="number">-1</span>]-a[<span class="number">0</span>])/d+<span class="number">1</span>;   <span class="comment">//由等差数列的性质可知</span></span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">res = n;        <span class="comment">//d=0，为n个相同的数组成的数列</span></span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; res;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"> &#125; </span><br></pre></td></tr></table></figure><h1 id="算术基本定理"><a href="#算术基本定理" class="headerlink" title="算术基本定理"></a>算术基本定理</h1><p>算术基本定理是整个数论的基础<br>$$<br>N=P_1^{d_1}*P_2^{d_2}*P_3^{d_3}*···P_k^{d_k}<br>$$<br>其中：$P_1$为质数，$d_i$为大于0的整数</p><h1 id="约数"><a href="#约数" class="headerlink" title="约数"></a>约数</h1><p>算术基本定理<br>$$<br>N=P_1^{d_1}*P_2^{d_2}<em>P_3^{d_3}<em>···P_k^{d_k}<br>$$<br><strong>约数个数：</strong><br>$$<br>(d_1+1)(d_2+1)(d_3+1)···(d_k+1)<br>$$<br><strong>约数之和:</strong><br>$$<br>S=(1+p_1+p_1^{2}+···+p_1^{d_1})</em>(1+p_2+p_2^{2}+···+p_2^{d_2})···</em>(1+p_k+p_k^{2}+···+p_k^{d_k})<br>$$</p><h2 id="ACW1296-聪明的燕姿"><a href="#ACW1296-聪明的燕姿" class="headerlink" title="ACW1296 聪明的燕姿"></a><a href="https://www.acwing.com/problem/content/1298/">ACW1296 聪明的燕姿</a></h2><p>样例解释S=42</p><p>输出个数3 值为20 26 41</p><p>20：1、2、4、5、10、20  和为42</p><p>26: 1、2、13、26       和为42</p><p>41：1、41             和为42   </p> <figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"> <span class="keyword">for</span>（p:<span class="number">2</span>,<span class="number">3</span>,<span class="number">5</span>,<span class="number">7</span>)     枚举到S,小于S的质数为s/<span class="function">logn   </span></span><br><span class="line"><span class="function">     <span class="title">for</span><span class="params">(d:<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>)</span></span></span><br><span class="line"><span class="function">         <span class="keyword">if</span> s <span class="title">mod</span> <span class="params">(<span class="number">1</span>+p1+p1^<span class="number">2</span>+···+p1^d)</span> </span>== <span class="number">0</span></span><br><span class="line">             <span class="built_in">dfs</span>()</span><br><span class="line">特判d1=<span class="number">1</span>时，S=<span class="number">1</span>+p_i,即为S<span class="number">-1</span>,质数 </span><br></pre></td></tr></table></figure><p><img src="https://blog-1316756713.cos.ap-shanghai.myqcloud.com/img/202304052250404.webp" alt="image-20230405225038181"></p><p>此时for(p:2,3,5,7,···，sqrt(S))  </p>]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
          <category> 蓝桥杯 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数论 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>贪心</title>
      <link href="/posts/34811d5f/"/>
      <url>/posts/34811d5f/</url>
      
        <content type="html"><![CDATA[<h1 id="贪心基本思路"><a href="#贪心基本思路" class="headerlink" title="贪心基本思路"></a>贪心基本思路</h1><ol><li>最优</li><li>短视</li></ol><h1 id="股票买卖问题"><a href="#股票买卖问题" class="headerlink" title="股票买卖问题"></a>股票买卖问题</h1><h2 id="ACW1055-股票买卖"><a href="#ACW1055-股票买卖" class="headerlink" title="ACW1055 股票买卖"></a><a href="https://www.acwing.com/problem/content/1057/">ACW1055 股票买卖</a></h2><h3 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h3><p>相邻2天：后&gt;前，则交易一次</p><p>任何一个跨度超过一天的交易= 若干个跨度一天的交易</p><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">100010</span>;</span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line"><span class="type">int</span> a[N];</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> cnt = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i ++ ) <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;a[i]);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i+<span class="number">1</span> &lt; n; i ++ )&#123;</span><br><span class="line">        <span class="keyword">if</span>(a[i+<span class="number">1</span>] &gt; a[i])&#123;         <span class="comment">//后一天的股票 &gt; 前一天的股票</span></span><br><span class="line">            <span class="type">int</span> dt = a[i+<span class="number">1</span>]-a[i]; </span><br><span class="line">            cnt+=dt;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; cnt;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="线性问题"><a href="#线性问题" class="headerlink" title="线性问题"></a>线性问题</h1><h2 id="ACW104-货仓选址"><a href="#ACW104-货仓选址" class="headerlink" title="ACW104 货仓选址"></a><a href="https://www.acwing.com/problem/content/106/">ACW104 货仓选址</a></h2><h3 id="思路-1"><a href="#思路-1" class="headerlink" title="思路"></a>思路</h3><p><img src="/.top//Users\cjy\AppData\Roaming\Typora\typora-user-images\image-20230405002712451.png" alt="image-20230405002712451"></p><ol><li>偶数个商店，选在商店的中间</li><li>奇数个商店，选在商店的中位数的位置，可保证距离不会重复计算</li><li>下标从0开始</li></ol><p> n=3 0 1 2   mid = n/2 = 1</p><p> n=4 0 1 2 3 mid = n/2 = 2</p><h3 id="代码-1"><a href="#代码-1" class="headerlink" title="代码"></a>代码</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> LL;</span><br><span class="line">LL cnt;</span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">100010</span>;</span><br><span class="line"><span class="type">int</span> a[N];</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i ++ ) <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;a[i]);</span><br><span class="line">    <span class="built_in">sort</span>(a,a+n);   <span class="comment">//首先排序</span></span><br><span class="line">    <span class="type">int</span> x = n/<span class="number">2</span>;    <span class="comment">//确定货仓的位置下标</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i ++ )&#123;</span><br><span class="line">        <span class="type">int</span> dt = <span class="built_in">abs</span>(a[x] - a[i]);</span><br><span class="line">        cnt += dt;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%lld&quot;</span>,cnt);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="ACW122-糖果传递"><a href="#ACW122-糖果传递" class="headerlink" title="ACW122 糖果传递"></a><a href="https://www.acwing.com/problem/content/124/">ACW122 糖果传递</a></h2><h3 id="思路-2"><a href="#思路-2" class="headerlink" title="思路"></a>思路</h3><p>等价于在实轴上找一个点$x_1$使其到$C_1$~$C_n$的距离和最小</p><p>即转换为上一题的思路：</p><p><strong>$x_1$取值：</strong>奇数：取中位数，偶数：取两个数中间的位置</p><p>求$C_1$~$C_n$：其中$a$为平均数<br>$$<br>C_n = a-a_n<br>$$<br>$$<br>C_{n-1} = C_n + a-a_{n-1}<br>$$<br>$$<br>C_i = C_{i+1}+a-a_i<br>$$</p><p>求C的过程时间复杂度为O(n),排序O(logn),然后像上把一样求一下距离之和O(n)就可以了，总的时间复杂度为$O(nlog_2n)$ </p><ol start="3"><li></li></ol><h1 id="区间贪心问题"><a href="#区间贪心问题" class="headerlink" title="区间贪心问题"></a>区间贪心问题</h1><h2 id="ACW112-雷达设备"><a href="#ACW112-雷达设备" class="headerlink" title="ACW112 雷达设备"></a><a href="https://www.acwing.com/problem/content/114/">ACW112 雷达设备</a></h2><h3 id="思路-3"><a href="#思路-3" class="headerlink" title="思路"></a>思路</h3><p>给定若干区间，最少选多少个点，可使每个区间上最少选1个点</p><p>把圆的问题处理成线的问题，取交集</p><p><img src="/.top//Users\cjy\AppData\Roaming\Typora\typora-user-images\image-20230405004556283.png" alt="image-20230405004556283"></p><ol><li>找每个小岛对应的雷达范围</li><li>雷达区间按<strong>右端点</strong>排序</li><li>合并雷达区间<ol><li>令last = 上一个右端点</li><li>如果last &lt; 下一个区间的左端点，则2个区间独立，增加下一个区间的右端点</li><li>如果last &gt; 下一个区间的左端点，说明2个区间有重合部分，不需要增加新的点</li></ol></li></ol><h3 id="思路证明"><a href="#思路证明" class="headerlink" title="思路证明"></a>思路证明</h3><p>cnt：算法得到的结果（某一个解）</p><p>opt: 最优解（所有解的最小值）</p><ol><li>opt &lt;= cnt</li><li>opt &gt;= cnt 证明所有可行解&gt;=cnt,选择的点所在的区间是完全不相交的，存在cnt个互不相交的区间，每个区间至少选一个点</li><li>可证得opt = cnt</li></ol><h3 id="代码-2"><a href="#代码-2" class="headerlink" title="代码"></a>代码</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> cnt; <span class="comment">//雷达数目</span></span><br><span class="line"><span class="type">int</span> n,d;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">1010</span>;</span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">node</span>&#123;</span><br><span class="line">    <span class="type">double</span> l,r;</span><br><span class="line">    <span class="type">bool</span> <span class="keyword">operator</span> &lt;(<span class="type">const</span> node &amp;t) <span class="type">const</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> r &lt; t.r;<span class="comment">//按右端点从小到大排序</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;a[N]; <span class="comment">//区间范围</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d %d&quot;</span>, &amp;n , &amp;d);</span><br><span class="line">    <span class="type">int</span> x , y;</span><br><span class="line">    <span class="type">bool</span> fail = <span class="literal">false</span>;   <span class="comment">//无解的判断条件</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i ++ ) &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d %d&quot;</span>, &amp;x, &amp;y);</span><br><span class="line">        <span class="keyword">if</span>(y &gt; d) &#123;</span><br><span class="line">            fail = <span class="literal">true</span>;  <span class="comment">//无解</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="type">double</span> len = <span class="built_in">sqrt</span>(d*d - y*y);  <span class="comment">//勾股定理</span></span><br><span class="line">            a[i] = &#123;x-len,x+len&#125;;               <span class="comment">//区间范围</span></span><br><span class="line">        &#125;</span><br><span class="line">           </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(fail)&#123;</span><br><span class="line">        <span class="built_in">puts</span>(<span class="string">&quot;-1&quot;</span>); <span class="comment">//带回车的</span></span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="built_in">sort</span>(a,a+n);<span class="comment">//右端点排序</span></span><br><span class="line">        <span class="type">double</span> last = <span class="number">-1e8</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i ++ )&#123;</span><br><span class="line">            <span class="keyword">if</span>(last &lt; a[i].l)&#123;</span><br><span class="line">                cnt++;</span><br><span class="line">                last = a[i].r;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>,cnt);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="ACW905-区间选点"><a href="#ACW905-区间选点" class="headerlink" title="ACW905 区间选点"></a><a href="https://www.acwing.com/problem/content/907/">ACW905 区间选点</a></h2><h3 id="代码-3"><a href="#代码-3" class="headerlink" title="代码"></a>代码</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">  <span class="type">const</span> <span class="type">int</span> N = <span class="number">100010</span>;</span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">node</span>&#123;</span><br><span class="line">    <span class="type">int</span> l,r;</span><br><span class="line">    <span class="type">bool</span> <span class="keyword">operator</span> &lt;(<span class="type">const</span> node &amp;t) <span class="type">const</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> r &lt; t.r;<span class="comment">//右端点从小到大排序</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;a[N];</span><br><span class="line"><span class="type">int</span> cnt;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i ++ )&#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d %d&quot;</span>, &amp;a[i].l, &amp;a[i].r);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">sort</span>(a,a+n);<span class="comment">//排序</span></span><br><span class="line">    <span class="type">int</span> last = <span class="number">-1e9</span><span class="number">-10</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i ++ )</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(last &lt; a[i].l)&#123;</span><br><span class="line">            cnt++;</span><br><span class="line">            last = a[i].r;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>,cnt);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="蓝桥杯真题"><a href="#蓝桥杯真题" class="headerlink" title="蓝桥杯真题"></a>蓝桥杯真题</h1><h2 id="ACW1235-付账问题"><a href="#ACW1235-付账问题" class="headerlink" title="ACW1235 付账问题"></a><a href="https://www.acwing.com/problem/content/1237/">ACW1235 付账问题</a></h2><p>假设每一个$a_i&gt;=s/n$,则取$b_i=s/n$</p><p>若$a_i&lt;s/n$,则付全部，$b_i=a_i$,少付的部分其他多的人分摊。</p><p><strong>没有考虑到加了多的部分，有人的钱包就不够了</strong></p><p>通过10%</p><h3 id="贪心策略"><a href="#贪心策略" class="headerlink" title="贪心策略"></a>贪心策略</h3><ol><li>$a_1$~$a_n$从小到大排序</li><li>所有的$a_i&gt;=s/n$,直接取平均数</li><li>$a_1&lt;s/n$ ,此时$b_1=a_1$，用s-所有小于$x&lt;s/n$的数,得到大于平均数的人需要交的费用和</li></ol><p>$$<br>s-a_1=b_2+b_3+···+b_n<br>$$</p><p>​    若$a_2&lt;(s-a_1)/(n-1)$,有多少出多少，依次类推</p><h3 id="代码-4"><a href="#代码-4" class="headerlink" title="代码"></a>代码</h3><p>自己写的，10%</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> n,s;</span><br><span class="line"><span class="type">double</span> x;<span class="comment">//平均值</span></span><br><span class="line"><span class="type">double</span> cnt;</span><br><span class="line"><span class="type">int</span> a[N];</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d %d&quot;</span>, &amp;n, &amp;s);</span><br><span class="line">    x = (<span class="type">double</span>)(s/n);</span><br><span class="line">    <span class="type">int</span> bignum = <span class="number">0</span>; <span class="comment">//大于平均值的数字个数</span></span><br><span class="line">    <span class="type">int</span> num = <span class="number">0</span>;</span><br><span class="line">    <span class="type">double</span> dt = <span class="number">0</span>;<span class="comment">//小于平均值部分的差值</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i ++ ) &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;a[i]);</span><br><span class="line">        <span class="keyword">if</span>(a[i] &gt; x) &#123;</span><br><span class="line">            bignum++;</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(a[i]==x) &#123;</span><br><span class="line">            num++;</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            dt += (<span class="type">double</span>)<span class="built_in">abs</span>(a[i] - x);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">double</span> fenzi=<span class="number">0</span>;</span><br><span class="line">    <span class="type">double</span> duo = (<span class="type">double</span>)(dt/bignum);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span>(bignum+num &gt;= n) <span class="built_in">printf</span>(<span class="string">&quot;0.0000&quot;</span>);</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i ++ )&#123;</span><br><span class="line">            <span class="keyword">if</span>(a[i] &lt;= x) &#123;</span><br><span class="line">                <span class="type">double</span> t = (<span class="type">double</span>)(x-a[i]);</span><br><span class="line">                fenzi +=t*t;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> fenzi += duo*duo;</span><br><span class="line">        &#125;</span><br><span class="line">        cnt = <span class="built_in">sqrt</span>((<span class="type">double</span>)(fenzi/n));</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%.4lf&quot;</span>,cnt);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>听Y总思路后写的 70%</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">500010</span>;</span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line"><span class="type">double</span> s;<span class="comment">//用double精度不够</span></span><br><span class="line"><span class="type">double</span> cnt; <span class="comment">//方差</span></span><br><span class="line"><span class="type">int</span> a[N];<span class="comment">//每个人的钱数</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//或者采用long double  %.4Lf </span></span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d %lf&quot;</span>, &amp;n, &amp;s);</span><br><span class="line">    <span class="type">double</span> avg = (<span class="type">double</span>)s/n;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i ++ )  <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;a[i]); </span><br><span class="line">    <span class="built_in">sort</span>(a,a+n);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">    <span class="type">double</span> x = (<span class="type">double</span>)s/(n-i);  <span class="comment">//当前剩余人的平均值 </span></span><br><span class="line">    <span class="comment">//cout&lt;&lt;x&lt;&lt;endl;</span></span><br><span class="line">    <span class="keyword">if</span>(a[i] &lt; x) x = a[i];  <span class="comment">//此人有多少拿多少 </span></span><br><span class="line">    <span class="comment">//a[i] &gt; x的时候，付平均值</span></span><br><span class="line">cnt += (x-avg)*(x-avg);</span><br><span class="line">s -= x; <span class="comment">//减去已经付的钱 </span></span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%.4lf&quot;</span>,<span class="built_in">sqrt</span>(cnt/n));</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>改成long double %Lf后，AC</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> n;</span><br><span class="line"><span class="type">long</span> <span class="type">double</span> s;</span><br><span class="line"><span class="type">long</span> <span class="type">double</span> cnt;</span><br><span class="line"><span class="type">int</span> a[N];</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//或者采用long double  %.4Lf </span></span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d %Lf&quot;</span>, &amp;n, &amp;s);</span><br><span class="line">    <span class="type">long</span> <span class="type">double</span> avg = (<span class="type">long</span> <span class="type">double</span>)s/n;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i ++ ) <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;a[i]); </span><br><span class="line">    <span class="built_in">sort</span>(a,a+n);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">    <span class="type">double</span> x = s/(n-i);  <span class="comment">//当前剩余人的平均值 </span></span><br><span class="line">    <span class="comment">//cout&lt;&lt;x&lt;&lt;endl;</span></span><br><span class="line">    <span class="keyword">if</span>(a[i] &lt; x) x = a[i];  <span class="comment">//此人有多少拿多少 </span></span><br><span class="line">    <span class="comment">//a[i] &gt; x的时候，付平均值</span></span><br><span class="line">cnt += (x-avg)*(x-avg);</span><br><span class="line">s -= x; <span class="comment">//减去已经付的钱 </span></span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%.4Lf&quot;</span>,<span class="built_in">sqrt</span>(cnt/n));</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="精确度"><a href="#精确度" class="headerlink" title="精确度"></a>精确度</h3><p>本题对于精确度要求较高，总结如下提升准确度的方法</p><ol><li>long long提升整数的准确度</li><li>double可以承接18位左右有效数字</li><li>long double %Lf</li><li>尽量减少除法，转换成乘法</li><li>尽量减少会导致误差的计算的次数</li></ol>]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
          <category> 蓝桥杯 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 贪心 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>基础图论</title>
      <link href="/posts/694da243/"/>
      <url>/posts/694da243/</url>
      
        <content type="html"><![CDATA[<h1 id="ACW1224-交换瓶子"><a href="#ACW1224-交换瓶子" class="headerlink" title="ACW1224 交换瓶子"></a>ACW1224 交换瓶子</h1><h1 id="树和图的存储"><a href="#树和图的存储" class="headerlink" title="树和图的存储"></a>树和图的存储</h1><p>树是一种无环连通图。</p><h2 id="有向图（边是有方向的）"><a href="#有向图（边是有方向的）" class="headerlink" title="有向图（边是有方向的）"></a>有向图（边是有方向的）</h2><h3 id="邻接矩阵g-a-b"><a href="#邻接矩阵g-a-b" class="headerlink" title="邻接矩阵g[a,b]"></a>邻接矩阵g[a,b]</h3><p>有权值的话，g[a,b]=权值</p><p>无权值，g[a,b]为bool，true表示有边</p><h3 id="邻接表（单链表）"><a href="#邻接表（单链表）" class="headerlink" title="邻接表（单链表）"></a>邻接表（单链表）</h3><p>n个节点，就是n个单链表</p><p><img src="https://blog-1316756713.cos.ap-shanghai.myqcloud.com/img/202304070049300.webp" alt="image-20230407004910132"></p><p>插入新的边是在头的位置插入</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> h[N];<span class="comment">//存储每个节点的头</span></span><br><span class="line"><span class="type">int</span>  e[M]; <span class="comment">//每个节点的值</span></span><br><span class="line"><span class="type">int</span> ne[M];<span class="comment">//每个节点的next值</span></span><br><span class="line"><span class="type">int</span> idx;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">add</span><span class="params">(<span class="type">int</span> a,<span class="type">int</span> b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">//在a的里面插入b ;a--&gt;b</span></span><br><span class="line">    e[idx] = b;</span><br><span class="line">    ne[idx] = h[a];   </span><br><span class="line">    h[a] = idx++; </span><br><span class="line">&#125; </span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">memset</span>(h,<span class="number">-1</span>,<span class="keyword">sizeof</span> h); <span class="comment">//把头节点都初始化为-1</span></span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="无向图（a到b-b到a"><a href="#无向图（a到b-b到a" class="headerlink" title="无向图（a到b,b到a)"></a>无向图（a到b,b到a)</h2><h1 id="树和图的遍历"><a href="#树和图的遍历" class="headerlink" title="树和图的遍历"></a>树和图的遍历</h1><p>时间复杂度O(n+m)</p><h2 id="DFS"><a href="#DFS" class="headerlink" title="DFS"></a>DFS</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> h[N],e[M],ne[M],idx;</span><br><span class="line"><span class="type">bool</span> st[N];<span class="comment">//记录是否被遍历过了</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">add</span><span class="params">(<span class="type">int</span> a,<span class="type">int</span> b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    e[idx] = b;</span><br><span class="line">    ne[idx] = h[a];</span><br><span class="line">    h[a] = idx++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">dfs</span><span class="params">(<span class="type">int</span> u)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    st[u] = <span class="literal">true</span>;  <span class="comment">//标记一下，已经被搜过了</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = h[u];i != <span class="number">-1</span>;i = ne[i])</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> j = e[i];  <span class="comment">//j为在图中的编号</span></span><br><span class="line">        <span class="keyword">if</span>(!st[j]) <span class="built_in">dfs</span>(j);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">memset</span>(h.<span class="number">-1</span>,<span class="keyword">sizeof</span> <span class="number">-1</span>);</span><br><span class="line">    <span class="built_in">dfs</span>(<span class="number">1</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>应用：求出树的每一个子树的点的数量</p><p><img src="https://blog-1316756713.cos.ap-shanghai.myqcloud.com/img/202304070113765.webp" alt="image-20230407011348623"></p><h2 id="BFS"><a href="#BFS" class="headerlink" title="BFS"></a>BFS</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="树和图的DFS"><a href="#树和图的DFS" class="headerlink" title="树和图的DFS"></a>树和图的DFS</h1><p>给定一颗树，树中包含 n 个结点（编号 1∼n）和 n−1 条无向边。</p><p>请你找到树的重心，并输出将重心删除后，剩余各个连通块中点数的最大值。</p><p>重心定义：重心是指树中的一个结点，如果将这个点删除后，剩余各个连通块中点数的最大值最小，那么这个节点被称为树的重心。<br><strong>输入格式</strong><br>第一行包含整数 n，表示树的结点数。</p><p>接下来 n−1 行，每行包含两个整数 a 和 b，表示点 a 和点 b 之间存在一条边。</p><p><strong>输出格式</strong><br>输出一个整数 m，表示将重心删除后，剩余各个连通块中点数的最大值。</p><p><strong>数据范围</strong><br>1≤n≤105<br><strong>输入样例</strong><br>9<br>1 2<br>1 7<br>1 4<br>2 8<br>2 5<br>4 3<br>3 9<br>4 6<br><strong>输出样例：</strong><br>4</p><p><img src="https://blog-1316756713.cos.ap-shanghai.myqcloud.com/img/202304070111959.webp" alt="image-20230407011120829"></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"> </span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="树和图的BFS"><a href="#树和图的BFS" class="headerlink" title="树和图的BFS"></a>树和图的BFS</h1><h1 id="拓扑排序"><a href="#拓扑排序" class="headerlink" title="拓扑排序"></a>拓扑排序</h1><h1 id="Dikstra求最短路"><a href="#Dikstra求最短路" class="headerlink" title="Dikstra求最短路"></a>Dikstra求最短路</h1><p>输入输出在1000000时，才必须用scanf</p>]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
          <category> 蓝桥杯 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 基础图论 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>BFS</title>
      <link href="/posts/d81e6871/"/>
      <url>/posts/d81e6871/</url>
      
        <content type="html"><![CDATA[<h1 id="BFS宽搜"><a href="#BFS宽搜" class="headerlink" title="BFS宽搜"></a>BFS宽搜</h1><p>队列：先进先出 –&gt;bfs</p><p>栈：先进后出   –&gt;递归、dfs</p><p>所有的BFS和DFS都能对应1棵树</p><p><strong>思路：</strong>每次取出队头元素，将扩展出的所有元素放在队尾</p><p><img src="https://blog-1316756713.cos.ap-shanghai.myqcloud.com/img/202304030059144.webp" alt="image-20230401234927822"></p><ol><li><p>判重数组 st[] <strong>入队时判重</strong> 保证每个点只会入队1次</p></li><li><p>队列queue</p></li><li><p>模板</p></li></ol><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">queue&lt;--初始状态</span><br><span class="line"><span class="keyword">while</span> ( queue 非空 )</span><br><span class="line">&#123;</span><br><span class="line">    t&lt;--队头</span><br><span class="line">    <span class="keyword">for</span>(扩展t)</span><br><span class="line">    &#123;</span><br><span class="line">        所有新节点插入队尾ver</span><br><span class="line">        <span class="keyword">if</span>( !st[ver] )&#123;  //判重</span><br><span class="line">            ver 放到队尾</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>2种类型：</p><ol><li>从一个状态拓展到另一个状态</li><li>八数码问题、数独问题，整个是一个状态</li></ol><h1 id="第一类"><a href="#第一类" class="headerlink" title="第一类"></a>第一类</h1><h2 id="ACW1101-献给阿尔吉的花束"><a href="#ACW1101-献给阿尔吉的花束" class="headerlink" title="ACW1101 献给阿尔吉的花束"></a>ACW1101 献给阿尔吉的花束</h2><p><strong>属于第一类：从一个状态拓展到另一个状态</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;utility&gt;</span>      <span class="comment">// pair</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;queue&gt;</span>        <span class="comment">//queue</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">//#define first x</span></span><br><span class="line"><span class="comment">//#define second y</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> x first</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> y second</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">typedef</span> pair&lt;<span class="type">int</span>,<span class="type">int</span>&gt; PII;</span><br><span class="line"></span><br><span class="line">PII start,End;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">210</span>;</span><br><span class="line"><span class="type">int</span> t;</span><br><span class="line"><span class="type">int</span> r,c; </span><br><span class="line"><span class="type">char</span> m[N][N];  <span class="comment">//记录原始地图</span></span><br><span class="line"><span class="type">int</span> ss[N][N];  <span class="comment">//记录每个位置的当前距离 </span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> dx[<span class="number">4</span>]=&#123;<span class="number">-1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>&#125;;</span><br><span class="line"><span class="type">int</span> dy[<span class="number">4</span>]=&#123;<span class="number">0</span>,<span class="number">-1</span>,<span class="number">0</span>,<span class="number">1</span>&#125;; </span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">bfs</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">queue&lt;PII&gt; q;</span><br><span class="line"><span class="built_in">memset</span>(ss,<span class="number">-1</span>,<span class="keyword">sizeof</span> ss);<span class="comment">//初始化距离数组</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">//q.push_back(start);  //vector是push_back</span></span><br><span class="line">ss[start.x][start.y]=<span class="number">0</span>; <span class="comment">//更新起点的距离为0 </span></span><br><span class="line">q.<span class="built_in">push</span>(start); <span class="comment">// 放入起始元素 </span></span><br><span class="line"></span><br><span class="line"><span class="comment">//while(!q.empty())//队列非空   //或者q.size()不为0</span></span><br><span class="line"><span class="keyword">while</span> (q.<span class="built_in">size</span>())</span><br><span class="line">&#123;</span><br><span class="line">PII a = q.<span class="built_in">front</span>();<span class="comment">//取出此时的队头元素 </span></span><br><span class="line"><span class="comment">//auto a = q.front();</span></span><br><span class="line">q.<span class="built_in">pop</span>();<span class="comment">//弹出队头元素 </span></span><br><span class="line"><span class="comment">//循环4个位置 </span></span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i &lt; <span class="number">4</span>;i++)&#123;</span><br><span class="line"><span class="type">int</span> x = a.x + dx[i];</span><br><span class="line"><span class="type">int</span> y = a.y + dy[i];</span><br><span class="line"><span class="keyword">if</span>(x&lt;<span class="number">0</span> || x&gt;=r || y&lt;<span class="number">0</span> ||y&gt;=c) <span class="keyword">continue</span>;<span class="comment">//跳出循环  //出界</span></span><br><span class="line"><span class="keyword">if</span>(m[x][y] == <span class="string">&#x27;#&#x27;</span>) <span class="keyword">continue</span>;<span class="comment">//如果碰到墙，就跳出   //障碍物</span></span><br><span class="line"><span class="keyword">if</span> (ss[x][y] != <span class="number">-1</span>) <span class="keyword">continue</span>;  <span class="comment">// 之前已经遍历过 //之前已经遍历过</span></span><br><span class="line"></span><br><span class="line">ss[x][y] = ss[a.x][a.y]+<span class="number">1</span>;</span><br><span class="line"><span class="comment">//q.push(make_pair(x,y));//应该放在下面</span></span><br><span class="line"><span class="keyword">if</span>(End == <span class="built_in">make_pair</span>(x,y)) <span class="keyword">return</span> ss[x][y];</span><br><span class="line"></span><br><span class="line">q.<span class="built_in">push</span>(<span class="built_in">make_pair</span>(x,y)); <span class="comment">//如果没有到终点，更新队头</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//return -1;  //这个位置不对</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">-1</span>;<span class="comment">//应当是当队列为空，所有的点出队后仍然没有到达终点，则返回-1</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;t);</span><br><span class="line"><span class="comment">//scanf(&quot;%d %d&quot;,&amp;r,&amp;c);</span></span><br><span class="line"><span class="keyword">while</span>(t--)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d %d&quot;</span>,&amp;r,&amp;c); <span class="comment">//开始读入错误了，造成答案错误</span></span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;r;i++)  <span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>,&amp;m[i]);</span><br><span class="line"><span class="comment">//for(int i=0;i&lt;r;i++)  printf(&quot;%s&quot;,m[i]);</span></span><br><span class="line"><span class="comment">//找到起点和终点 </span></span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;r;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">0</span>;j&lt;c;j++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(m[i][j]==<span class="string">&#x27;S&#x27;</span>) start = &#123;i,j&#125;;<span class="comment">//make_pair(i,j);</span></span><br><span class="line"><span class="keyword">if</span>(m[i][j]==<span class="string">&#x27;E&#x27;</span>) End = &#123;i,j&#125;;<span class="comment">//make_pair(i,j);</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//printf(&quot;起点：%d %d&quot;,start.x,start.y);</span></span><br><span class="line"><span class="comment">//printf(&quot;终点：%d %d&quot;,End.x,End.y);</span></span><br><span class="line"><span class="type">int</span> cnt = <span class="built_in">bfs</span>();</span><br><span class="line">        <span class="keyword">if</span> (cnt == <span class="number">-1</span>) <span class="built_in">puts</span>(<span class="string">&quot;oop!&quot;</span>);</span><br><span class="line">        <span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, cnt);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="ACW1096-地牢大师"><a href="#ACW1096-地牢大师" class="headerlink" title="ACW1096 地牢大师"></a>ACW1096 地牢大师</h2><p>BFS+三维数组+struct</p><p><strong>注意：</strong>三维数组怎么读入的就怎么处理</p><p>与1101的思路完全一致</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;queue&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">110</span>;</span><br><span class="line"><span class="type">int</span> l;<span class="comment">//地牢层数</span></span><br><span class="line"><span class="type">int</span> r,c;</span><br><span class="line"><span class="type">char</span> m[N][N][N];<span class="comment">//原始地图</span></span><br><span class="line"><span class="type">int</span> ss[N][N][N]; <span class="comment">//记录距离的数组 </span></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">point</span>&#123;  <span class="comment">//名字为s的类型 </span></span><br><span class="line"><span class="type">int</span> x,y,z;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">//偏移量</span></span><br><span class="line"><span class="comment">//int dx[6]=&#123;0,0,0,0,1,-1&#125;;</span></span><br><span class="line"><span class="comment">//int dy[6]=&#123;0,-1,0,1,0,0&#125;; </span></span><br><span class="line"><span class="comment">//int dz[6]=&#123;-1,0,1,0,0,0&#125;;  </span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> dx[<span class="number">6</span>] = &#123;<span class="number">1</span>, <span class="number">-1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>&#125;;</span><br><span class="line"><span class="type">int</span> dy[<span class="number">6</span>] = &#123;<span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">-1</span>, <span class="number">0</span>, <span class="number">0</span>&#125;;</span><br><span class="line"><span class="type">int</span> dz[<span class="number">6</span>] = &#123;<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">-1</span>&#125;;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">bfs</span><span class="params">(point start,point endd)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">queue&lt;point&gt; q;</span><br><span class="line"><span class="built_in">memset</span>(ss,<span class="number">-1</span>,<span class="keyword">sizeof</span> ss); <span class="comment">//初始化距离数组</span></span><br><span class="line"></span><br><span class="line">ss[start.x][start.y][start.z] =<span class="number">0</span>;<span class="comment">//更新起点的距离为0 </span></span><br><span class="line">q.<span class="built_in">push</span>(start);<span class="comment">//加入队头</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span>(q.<span class="built_in">size</span>())</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">auto</span> a = q.<span class="built_in">front</span>();</span><br><span class="line"><span class="comment">//point a = q.front();</span></span><br><span class="line">q.<span class="built_in">pop</span>();</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;<span class="number">6</span>;i++)    <span class="comment">//这里必须从0开始哈，仔细一点</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> x = a.x+dx[i],y=a.y+dy[i],z=a.z+dz[i];</span><br><span class="line"><span class="keyword">if</span>(x&lt;<span class="number">0</span>||x&gt;=l||y&lt;<span class="number">0</span>||y&gt;=r||z&lt;<span class="number">0</span>||z&gt;=c) <span class="keyword">continue</span>; <span class="comment">//边界</span></span><br><span class="line"><span class="keyword">if</span>(m[x][y][z] == <span class="string">&#x27;#&#x27;</span>) <span class="keyword">continue</span>;               <span class="comment">//墙</span></span><br><span class="line"><span class="keyword">if</span>(ss[x][y][z] != <span class="number">-1</span>) <span class="keyword">continue</span>;   <span class="comment">//未到过</span></span><br><span class="line"></span><br><span class="line">ss[x][y][z]=ss[a.x][a.y][a.z] + <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(endd.x==x &amp;&amp; endd.y==y &amp;&amp; endd.z==z) <span class="keyword">return</span> ss[x][y][z]; <span class="comment">//到达终点</span></span><br><span class="line"></span><br><span class="line">q.<span class="built_in">push</span>(&#123;x,y,z&#125;);   <span class="comment">//如果没有到达终点，就让&#123;x,y,z&#125;入队</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">while</span>(cin&gt;&gt;l&gt;&gt;r&gt;&gt;c &amp;&amp; l &amp;&amp; r &amp;&amp; c)</span><br><span class="line">&#123;</span><br><span class="line">    point start,endd;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;l;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">0</span>;j&lt;r;j++)&#123;</span><br><span class="line">cin&gt;&gt;m[i][j];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;l;i++)</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">0</span>;j&lt;r;j++)</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> t=<span class="number">0</span>;t&lt;c;t++)&#123;</span><br><span class="line"><span class="keyword">if</span>(m[i][j][t] == <span class="string">&#x27;S&#x27;</span>)&#123;</span><br><span class="line">start=&#123;i,j,t&#125;;</span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span>(m[i][j][t] == <span class="string">&#x27;E&#x27;</span>)&#123;</span><br><span class="line">endd=&#123;i,j,t&#125;;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> cnt = <span class="built_in">bfs</span>(start,endd);</span><br><span class="line"><span class="keyword">if</span>(cnt==<span class="number">-1</span>)&#123;</span><br><span class="line"><span class="built_in">puts</span>(<span class="string">&quot;Trapped!&quot;</span>);</span><br><span class="line"><span class="comment">//cout&lt;&lt;endl;</span></span><br><span class="line">&#125;<span class="keyword">else</span> cout&lt;&lt;<span class="string">&quot;Escaped in &quot;</span>&lt;&lt;cnt&lt;&lt;<span class="string">&quot; minute(s).&quot;</span>&lt;&lt;endl;</span><br><span class="line"><span class="comment">//for(int i=0;i&lt;l;i++)</span></span><br><span class="line"><span class="comment">//for(int j=0;j&lt;r;j++)</span></span><br><span class="line"><span class="comment">//for(int t=0;t&lt;c;t++)</span></span><br><span class="line"><span class="comment">//cout &lt;&lt; m[i][j][t]&lt;&lt;&quot; &quot;;</span></span><br><span class="line">    <span class="comment">//cout &lt;&lt; start.x &lt;&lt; start.y &lt;&lt; start.z &lt;&lt; endl;</span></span><br><span class="line">        <span class="comment">//cout &lt;&lt; endd.x &lt;&lt; endd.y &lt;&lt; endd.z;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="模板题：走迷宫"><a href="#模板题：走迷宫" class="headerlink" title="模板题：走迷宫"></a>模板题：走迷宫</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">typedef</span> pair&lt;<span class="type">int</span>,<span class="type">int</span>&gt; PII;</span><br><span class="line"><span class="type">int</span> n,m;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">110</span>;</span><br><span class="line"><span class="type">int</span> g[N][N];</span><br><span class="line"><span class="type">int</span> s[N][N];<span class="comment">//走过的步数</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">bfs</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">queue&lt;PII&gt; q;</span><br><span class="line"><span class="built_in">memset</span>(s,<span class="number">-1</span>,<span class="keyword">sizeof</span> s);</span><br><span class="line">s[<span class="number">0</span>][<span class="number">0</span>] = <span class="number">0</span>;  <span class="comment">//起点距离为0</span></span><br><span class="line">q.<span class="built_in">push</span>(&#123;<span class="number">0</span>, <span class="number">0</span>&#125;);</span><br><span class="line"><span class="type">int</span> dx[<span class="number">4</span>]=&#123;<span class="number">-1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>&#125;;</span><br><span class="line"><span class="type">int</span> dy[<span class="number">4</span>]=&#123;<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">-1</span>&#125;;</span><br><span class="line"><span class="keyword">while</span>(q.<span class="built_in">size</span>())</span><br><span class="line">&#123;</span><br><span class="line">PII a = q.<span class="built_in">front</span>();</span><br><span class="line">cout&lt;&lt;a.x&lt;&lt;<span class="string">&quot; &quot;</span>&lt;&lt;a.y&lt;&lt;endl;</span><br><span class="line">q.<span class="built_in">pop</span>();</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;<span class="number">4</span>;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> nx=a.x+dx[i];</span><br><span class="line"><span class="type">int</span> ny=a.y+dy[i];</span><br><span class="line">cout&lt;&lt;nx&lt;&lt;<span class="string">&#x27; &#x27;</span>&lt;&lt;ny&lt;&lt;endl;</span><br><span class="line"><span class="keyword">if</span>(nx&gt;=<span class="number">0</span> &amp;&amp; nx&lt;n &amp;&amp; ny&lt;m &amp;&amp; ny&gt;=<span class="number">0</span> &amp;&amp; g[nx][ny]==<span class="number">0</span> &amp;&amp; s[nx][ny]==<span class="number">-1</span> )</span><br><span class="line">&#123;</span><br><span class="line">    s[nx][ny] = s[a.x][a.y]+<span class="number">1</span>;</span><br><span class="line">    q.<span class="built_in">push</span>(<span class="built_in">make_pair</span>(nx,ny));</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> s[n<span class="number">-1</span>][m<span class="number">-1</span>];</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"></span><br><span class="line">cin &gt;&gt; n &gt;&gt; m;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">0</span>;j&lt;m;j++)&#123;</span><br><span class="line">cin &gt;&gt; g[i][j];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">memset</span>(s,<span class="number">-1</span>,<span class="keyword">sizeof</span> s);</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">0</span>;j&lt;m;j++)&#123;</span><br><span class="line">cout&lt;&lt; s[i][j]&lt;&lt;<span class="string">&#x27; &#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">puts</span>(<span class="string">&quot;&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">cout&lt;&lt;<span class="built_in">bfs</span>();</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><h1 id="Flood-Fill"><a href="#Flood-Fill" class="headerlink" title="Flood Fill"></a>Flood Fill</h1><p>主要针对网格图来做  <strong>求连通块</strong></p><p><img src="https://blog-1316756713.cos.ap-shanghai.myqcloud.com/img/202304031528452.webp" alt="image-20230403152802230"></p><p>bfs搜的话，从左上角开始搜，依次遍历上下左右4个鸽子，哪个鸽子</p><h2 id="BFS思路"><a href="#BFS思路" class="headerlink" title="BFS思路"></a>BFS思路</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">while</span> 队列为空</span><br><span class="line">&#123;</span><br><span class="line">    取出队头 t</span><br><span class="line">    枚举 t 的<span class="number">4</span>个邻格</span><br><span class="line">        <span class="keyword">if</span> 格子是陆地 且 未被开发</span><br><span class="line">            标记为正被开发</span><br><span class="line">            插入队列</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>时间复杂度：每个格子只会入队一次，所以为O(n*m)</p><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><p>注意：更新地图的方式不同于原来的距离数组</p><p>连通图的更新：直接更新已经遍历过的位置为墙”#”</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;algorithm&gt;</span><span class="comment">// pair</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;queue&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> x first</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> y second</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">typedef</span> pair&lt;<span class="type">int</span>,<span class="type">int</span>&gt; PII;</span><br><span class="line"><span class="type">int</span> h,w;</span><br><span class="line"><span class="type">char</span> m[<span class="number">25</span>][<span class="number">25</span>];</span><br><span class="line"><span class="comment">//连通图问题，遍历过的地方直接变原数组</span></span><br><span class="line"><span class="type">int</span> dx[<span class="number">4</span>]=&#123;<span class="number">-1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>&#125;;</span><br><span class="line"><span class="type">int</span> dy[<span class="number">4</span>]=&#123;<span class="number">0</span>,<span class="number">0</span>,<span class="number">-1</span>,<span class="number">1</span>&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">bfs</span><span class="params">(PII start)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">queue&lt;PII&gt; q;</span><br><span class="line">q.<span class="built_in">push</span>(start);</span><br><span class="line"><span class="type">int</span> res = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span>(q.<span class="built_in">size</span>())</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">auto</span> a = q.<span class="built_in">front</span>();</span><br><span class="line">    q.<span class="built_in">pop</span>();</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">4</span>; i ++ )</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> nx=a.x+dx[i] , ny=a.y+dy[i];</span><br><span class="line">        <span class="keyword">if</span>(nx&lt;<span class="number">0</span>||nx&gt;=h||ny&lt;<span class="number">0</span>||ny&gt;=w) <span class="keyword">continue</span>;<span class="comment">//边界</span></span><br><span class="line">        <span class="keyword">if</span>(m[nx][ny]==<span class="string">&#x27;#&#x27;</span>) <span class="keyword">continue</span>;<span class="comment">//墙</span></span><br><span class="line">        q.<span class="built_in">push</span>(&#123;nx,ny&#125;);</span><br><span class="line">        m[nx][ny] = <span class="string">&#x27;#&#x27;</span>;</span><br><span class="line">        res++;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> res;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">while</span>(cin&gt;&gt;w&gt;&gt;h &amp;&amp; w&amp;&amp; h)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;h;i++)  cin&gt;&gt;m[i];</span><br><span class="line">PII start;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;h;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">0</span>;j&lt;w;j++)&#123;</span><br><span class="line"><span class="keyword">if</span>(m[i][j]==<span class="string">&#x27;@&#x27;</span>) start=&#123;i,j&#125;;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> cnt = <span class="built_in">bfs</span>(start);</span><br><span class="line"><span class="keyword">if</span>(cnt) cout&lt;&lt;cnt&lt;&lt;endl;</span><br><span class="line"><span class="keyword">else</span> cout &lt;&lt; <span class="string">&quot;1&quot;</span>&lt;&lt;endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="DFS思路"><a href="#DFS思路" class="headerlink" title="DFS思路"></a>DFS思路</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">dfs</span>(x , y)</span><br><span class="line">&#123;</span><br><span class="line">    将(x , y)标记为已开发</span><br><span class="line">    枚举(x , y)的四个邻格</span><br><span class="line">        <span class="keyword">if</span>（邻格可走）</span><br><span class="line">        <span class="built_in">dfs</span>(邻格)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="代码-1"><a href="#代码-1" class="headerlink" title="代码"></a>代码</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">dfs</span><span class="params">(PII start)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">//退出条件是啥</span></span><br><span class="line">    <span class="type">int</span> res = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">auto</span> a = start;</span><br><span class="line">    m[a.x][a.y] = <span class="string">&#x27;#&#x27;</span>;  <span class="comment">//标记为已开发</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">4</span>; i ++ )</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> nx=a.x+dx[i],ny=a.y+dy[i];</span><br><span class="line">        <span class="keyword">if</span>(nx&lt;<span class="number">0</span>||nx&gt;=h||ny&lt;<span class="number">0</span>||ny&gt;=w) <span class="keyword">continue</span>;</span><br><span class="line">        <span class="keyword">if</span>(m[nx][ny]==<span class="string">&#x27;.&#x27;</span>) &#123;</span><br><span class="line">            <span class="comment">//m[nx][ny] = &#x27;#&#x27;;</span></span><br><span class="line">            <span class="comment">//res+=1;</span></span><br><span class="line">            <span class="comment">//dfs(make_pair(nx,ny));//这肯定不对，返回值是res</span></span><br><span class="line">            res+=<span class="built_in">dfs</span>(<span class="built_in">make_pair</span>(nx,ny));</span><br><span class="line">            <span class="comment">//m[nx][ny] = &#x27;.&#x27;; //恢复现场   </span></span><br><span class="line">            <span class="comment">//res-=1;</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="AcW1233全球变暖"><a href="#AcW1233全球变暖" class="headerlink" title="AcW1233全球变暖"></a>AcW1233全球变暖</h2><p>没有思路</p><ol><li>如何记录每一个陆地</li><li>如何遍历整块陆地的上下左右</li></ol><h3 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h3><ol><li>考虑有多少个连通块cnt</li></ol><p>dfs或者bfs</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">bool</span> st[N][N];<span class="comment">//记录这个位置是否已经被遍历过了</span></span><br><span class="line"><span class="comment">//找连通块 陆地部分 </span></span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">0</span>;j&lt;n;j++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(m[i][j]==<span class="string">&#x27;#&#x27;</span> &amp;&amp; !st[i][j])&#123;</span><br><span class="line"><span class="comment">//int aa=dfs(i , j);</span></span><br><span class="line"><span class="comment">//cout &lt;&lt; aa &lt;&lt; endl; 每个连通块的陆地数目 </span></span><br><span class="line"><span class="built_in">dfs</span>(i , j); </span><br><span class="line">cnt ++;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"> &#125; </span><br><span class="line"><span class="comment">//dfs部分为Flood Fill 的常规思路</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">dfs</span><span class="params">(<span class="type">int</span> x,<span class="type">int</span> y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">st[x][y] = <span class="literal">true</span>; <span class="comment">//标记</span></span><br><span class="line"><span class="type">int</span> res=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;<span class="number">4</span>;i++) </span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> nx=x+dx[i],ny=y+dy[i];</span><br><span class="line"><span class="keyword">if</span>(nx&lt;<span class="number">0</span>||nx&gt;=n||ny&lt;<span class="number">0</span>||ny&gt;=n) <span class="keyword">continue</span>;</span><br><span class="line"><span class="keyword">if</span>(m[nx][ny]==<span class="string">&#x27;#&#x27;</span>&amp;&amp; !st[nx][ny]) res+=<span class="built_in">dfs</span>(nx,ny);  <span class="comment">//当下一个数为陆地，且未能遍历过 </span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="2"><li>统计多少个连通块会被完全淹没掉</li></ol><p>判断连通块是否被淹没，搜的时候，记录这个连通块一共有多少个单元，同时记录有多少个单元在边界上</p><p>total：</p><p>bound：如果当前这个陆地四周有海的话，就++</p><p>total = bound 则证明岛屿会被淹没，让答案++</p><ol start="3"><li>还可以用并查集</li></ol><h3 id="代码-2"><a href="#代码-2" class="headerlink" title="代码"></a>代码</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="keyword">define</span> x first</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> y second</span></span><br><span class="line"><span class="keyword">typedef</span> pair&lt;<span class="type">int</span>,<span class="type">int</span>&gt; PII;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">1010</span>;</span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line"><span class="type">char</span> m[N][N];</span><br><span class="line"><span class="type">bool</span> st[N][N];</span><br><span class="line"><span class="type">int</span> dx[<span class="number">4</span>] = &#123;<span class="number">-1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>&#125;, dy[<span class="number">4</span>] = &#123;<span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">-1</span>&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">bfs</span><span class="params">(<span class="type">int</span> x,<span class="type">int</span> y,<span class="type">int</span> &amp;total,<span class="type">int</span> &amp;bound)</span><span class="comment">//这里必须写成传引用</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    queue&lt;PII&gt; q;</span><br><span class="line">    q.<span class="built_in">push</span>(&#123;x,y&#125;);</span><br><span class="line">    st[x][y] = <span class="literal">true</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">while</span>(q.<span class="built_in">size</span>())</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">auto</span> a = q.<span class="built_in">front</span>();</span><br><span class="line">        q.<span class="built_in">pop</span>();</span><br><span class="line">        </span><br><span class="line">        total++;</span><br><span class="line">        </span><br><span class="line">        <span class="type">int</span> flag=<span class="number">0</span>;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">4</span>; i ++ )</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">//int nx = x+dx[i],ny = y+dy[i];//这里写错了</span></span><br><span class="line">            <span class="type">int</span> nx = a.x+dx[i],ny = a.y+dy[i];</span><br><span class="line">            <span class="keyword">if</span>(nx&lt;<span class="number">0</span>||nx&gt;=n||ny&lt;<span class="number">0</span>||ny&gt;=n) <span class="keyword">continue</span>;</span><br><span class="line">            <span class="keyword">if</span>(st[nx][ny]) <span class="keyword">continue</span>;<span class="comment">//开始忘记写了</span></span><br><span class="line">            <span class="keyword">if</span>(m[nx][ny]==<span class="string">&#x27;.&#x27;</span>) <span class="comment">//flag = 1;//这里也需要continue</span></span><br><span class="line">            &#123;</span><br><span class="line">                flag =<span class="number">1</span>;</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            q.<span class="built_in">push</span>(&#123;nx,ny&#125;);</span><br><span class="line">            st[nx][ny] = <span class="literal">true</span>;</span><br><span class="line">         </span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(flag) bound++;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    <span class="type">int</span> cnt = <span class="number">0</span>;<span class="comment">//被完全淹没的岛屿数量</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>;i &lt; n;i++) cin &gt;&gt; m[i];</span><br><span class="line">    <span class="comment">//for(int i = 0;i &lt; n;i++) cout &lt;&lt; m[i] &lt;&lt;endl;</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i ++ )&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; n; j ++ )</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(m[i][j]==<span class="string">&#x27;#&#x27;</span> &amp;&amp; !st[i][j])&#123;</span><br><span class="line">                <span class="type">int</span> total=<span class="number">0</span>,bound=<span class="number">0</span>;</span><br><span class="line">                <span class="built_in">bfs</span>(i,j,total,bound);</span><br><span class="line">                <span class="comment">//cout &lt;&lt; total&lt;&lt;&quot; &quot;&lt;&lt;bound&lt;&lt;endl;</span></span><br><span class="line">                <span class="keyword">if</span>(total == bound) cnt++;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; cnt;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="第二类"><a href="#第二类" class="headerlink" title="第二类"></a>第二类</h1><h2 id="八数码"><a href="#八数码" class="headerlink" title="八数码"></a>八数码</h2><p> 每一个3*3的状态作为一个节点，节点之间权值为1，可用BFS</p><p>状态表示复杂。</p><ol><li><p>状态表示复杂，如何把状态存到队列里</p></li><li><p>如何记录每一个状态的距离dist</p></li></ol><h3 id="思路-1"><a href="#思路-1" class="headerlink" title="思路"></a>思路</h3><p>C++哈希表</p><p>状态表示：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//用一个字符串表示状态</span></span><br><span class="line">queue&lt;string&gt; queue</span><br><span class="line">unordered_map&lt;string,<span class="type">int</span>&gt; dist;</span><br></pre></td></tr></table></figure><p>如何判断一个状态”1234x5678”可以变成其他几种状态</p><ol><li>string 转换成3*3的矩阵</li><li>移动x</li><li>3*3的矩阵恢复成string</li></ol><h3 id="常用技巧"><a href="#常用技巧" class="headerlink" title="常用技巧"></a>常用技巧</h3><ol><li><strong>(下标必须从0开始存储）</strong>一维数组下标转换为二维数组下标</li></ol><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//一维数组下标k</span></span><br><span class="line"><span class="type">int</span> x = k / n;</span><br><span class="line"><span class="type">int</span> y = k%n;</span><br></pre></td></tr></table></figure><ol start="2"><li>二维数组下标转换为一维数组下标</li></ol><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">k = x*n+y;</span><br></pre></td></tr></table></figure><h3 id="代码-3"><a href="#代码-3" class="headerlink" title="代码"></a>代码</h3><h2 id="数字华容道"><a href="#数字华容道" class="headerlink" title="数字华容道"></a>数字华容道</h2><h2 id="你好世界"><a href="#你好世界" class="headerlink" title="你好世界"></a>你好世界</h2>]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
          <category> 蓝桥杯 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> BFS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>双指针</title>
      <link href="/posts/91a7e4d1/"/>
      <url>/posts/91a7e4d1/</url>
      
        <content type="html"><![CDATA[<h1 id="基本思想"><a href="#基本思想" class="headerlink" title="基本思想"></a>基本思想</h1><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>,j = <span class="number">0</span>;i &lt; n;i++)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">while</span>(j &lt; i) j++;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>i和j一共只会增加1，所以从$n^2$的时间复杂度优化为$O(n)$</p><h1 id="ACW1238-日志统计"><a href="#ACW1238-日志统计" class="headerlink" title="ACW1238 日志统计"></a>ACW1238 日志统计</h1><h2 id="暴力思路"><a href="#暴力思路" class="headerlink" title="暴力思路"></a>暴力思路</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span>( 时间段 )<span class="comment">//注意这个时间段位为左闭右开区间</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//初始化每个id出现的次数都为0</span></span><br><span class="line">    <span class="built_in">memset</span>(cnt , <span class="number">0</span> , <span class="keyword">sizeof</span> cnt);</span><br><span class="line">    <span class="keyword">for</span> ( id )  <span class="comment">//从小到大的每个id  ,循环这个时间段内的是所有id </span></span><br><span class="line">    &#123;</span><br><span class="line">        cnt[ id ]++;</span><br><span class="line">        <span class="keyword">if</span> ( cnt[id] &gt;= k ) st[id] = <span class="literal">true</span>;<span class="comment">//更新这个id的状态为热点</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>( <span class="type">int</span> i =<span class="number">1</span> ; i &lt;= <span class="number">100000</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span>( st[i] )</span><br><span class="line">        cout &lt;&lt; i &lt;&lt; endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>时间复杂度</strong>：$N*D$，大概为$10^9$，超时了</p><h2 id="双指针优化"><a href="#双指针优化" class="headerlink" title="双指针优化"></a>双指针优化</h2><p><img src="/.top//Users\cjy\AppData\Roaming\Typora\typora-user-images\image-20230401231711906.png" alt="image-20230401231711906"></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span>( 时间段 )</span><br><span class="line">&#123;</span><br><span class="line">    cnt[ id[i]  ] --;</span><br><span class="line">    cnt[ id[j]  ] ++;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="pair用法"><a href="#pair用法" class="headerlink" title="pair用法"></a>pair用法</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> x first</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> y second</span></span><br><span class="line"><span class="keyword">typedef</span> pair&lt;<span class="type">int</span>, <span class="type">int</span>&gt; PII;</span><br><span class="line">PII logs[N];  <span class="comment">//log数组</span></span><br><span class="line"><span class="type">int</span> cnt[N];</span><br><span class="line"><span class="type">bool</span> st[N];   <span class="comment">//记录每个帖子是否是热帖</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>;i &lt; n;i++) <span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span> , &amp;logs[i].x, &amp;logs[i].y);</span><br><span class="line"><span class="comment">//sort默认按第一个关键字排序</span></span><br><span class="line"><span class="built_in">sort</span>(log,log+n);</span><br><span class="line"></span><br><span class="line"><span class="comment">//时间段</span></span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span> , j = <span class="number">0</span> ; i &lt; n ; i++)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> id = logs[i].y; <span class="comment">// 新加入的id记录</span></span><br><span class="line">    cnt[id] ++;</span><br><span class="line">     <span class="keyword">while</span>(logs[i].x  -  logs[j].x &gt;= d)</span><br><span class="line">     &#123;</span><br><span class="line">         cnt[logs[j].y] --;  <span class="comment">//去掉开头</span></span><br><span class="line">         j++;   <span class="comment">//为啥？？？</span></span><br><span class="line">     &#125;</span><br><span class="line">    <span class="keyword">if</span>(cnt[id] &gt;= k) st[id] = <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
          <category> 蓝桥杯 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 双指针 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>特殊的读入输出</title>
      <link href="/posts/4f0df4cc/"/>
      <url>/posts/4f0df4cc/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
          <category> 蓝桥杯 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 读入输出技巧 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>距离</title>
      <link href="/posts/ae5b627f/"/>
      <url>/posts/ae5b627f/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
          <category> 蓝桥杯 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 距离计算 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>数组</title>
      <link href="/posts/340249a9/"/>
      <url>/posts/340249a9/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
          <category> 蓝桥杯 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数组计算 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>树状数组与线段树</title>
      <link href="/posts/53af87d2/"/>
      <url>/posts/53af87d2/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
          <category> 蓝桥杯 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 树状数组 </tag>
            
            <tag> 线段树 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>模拟排序</title>
      <link href="/posts/9a222836/"/>
      <url>/posts/9a222836/</url>
      
        <content type="html"><![CDATA[<h1 id="字符串处理"><a href="#字符串处理" class="headerlink" title="字符串处理"></a>字符串处理</h1><h1 id="ACW1204-错误票据"><a href="#ACW1204-错误票据" class="headerlink" title="ACW1204 错误票据"></a>ACW1204 错误票据</h1><h2 id="读入方式"><a href="#读入方式" class="headerlink" title="读入方式"></a>读入方式</h2><p>咋每行读入不同多的数字呀？？</p><p>输入模板</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">2</span>                  <span class="comment">//n行</span></span><br><span class="line"><span class="number">5</span> <span class="number">6</span> <span class="number">8</span> <span class="number">11</span> <span class="number">9</span> </span><br><span class="line"><span class="number">10</span> <span class="number">12</span> <span class="number">9</span></span><br></pre></td></tr></table></figure><h3 id="getline读入、ssin处理每一个"><a href="#getline读入、ssin处理每一个" class="headerlink" title="getline读入、ssin处理每一个"></a>getline读入、ssin处理每一个</h3><p><strong>函数用法：</strong></p><p><strong>读入代码：</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;sstream&gt;</span></span></span><br><span class="line"><span class="type">int</span> cnt;</span><br><span class="line">cin &gt;&gt; cnt;  <span class="comment">//行数</span></span><br><span class="line">string line;  <span class="comment">//每一行</span></span><br><span class="line"><span class="built_in">getline</span>(cin,line); <span class="comment">//忽略掉第1行行尾的回车</span></span><br><span class="line"><span class="comment">//如果有错误，多尝试</span></span><br><span class="line"><span class="keyword">while</span>(cnt--)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">getline</span>(cin,line); <span class="comment">//getline回车也会读入</span></span><br><span class="line">    <span class="function">stringstream <span class="title">ssin</span><span class="params">(line)</span></span>;   <span class="comment">//像cin一样使用ssin</span></span><br><span class="line">    <span class="comment">//ssin是从line这个字符串中读东西</span></span><br><span class="line">    <span class="keyword">while</span>(ssin &gt;&gt; a[n])  n++;</span><br><span class="line">    <span class="built_in">sort</span>(a , a+n);</span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="getchar读入"><a href="#getchar读入" class="headerlink" title="getchar读入"></a>getchar读入</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> n;</span><br><span class="line">   <span class="type">int</span> q,w;</span><br><span class="line">   <span class="type">char</span> c;</span><br><span class="line">   <span class="type">int</span> i=<span class="number">0</span>;</span><br><span class="line">   <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n);</span><br><span class="line">   <span class="keyword">for</span>(<span class="type">int</span> k=<span class="number">0</span>;k&lt;n;k++)</span><br><span class="line">   &#123;</span><br><span class="line">       <span class="keyword">while</span>(<span class="literal">true</span>)&#123;</span><br><span class="line">           cin &gt;&gt; a[i];</span><br><span class="line">           i++;</span><br><span class="line">           c=<span class="built_in">getchar</span>(); <span class="comment">//吃掉输入数字后的空格 并且作为判断依据</span></span><br><span class="line">           <span class="keyword">if</span>(c!=<span class="string">&#x27; &#x27;</span>)&#123;  <span class="comment">//判断输入的是不是空格 是(\n)回车 则表示下一行即 跳出循环 是空格则继续输入</span></span><br><span class="line">               <span class="keyword">break</span>;</span><br><span class="line">           &#125;</span><br><span class="line">       &#125; </span><br><span class="line">   &#125; </span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="cin读入"><a href="#cin读入" class="headerlink" title="cin读入"></a>cin读入</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> x, i = <span class="number">0</span>;</span><br><span class="line">cin &gt;&gt; x;<span class="comment">//过滤第一行的行数</span></span><br><span class="line"><span class="keyword">while</span>(cin &gt;&gt; x) a[i++] = x;</span><br><span class="line"><span class="type">int</span> len = i;<span class="comment">//表示数组长度</span></span><br></pre></td></tr></table></figure><h3 id="索引指针读入"><a href="#索引指针读入" class="headerlink" title="索引指针读入"></a>索引指针读入</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//把第一个数（行数n）读取掉</span></span><br><span class="line">cin&gt;&gt;n;</span><br><span class="line"></span><br><span class="line"><span class="comment">//设定数组的索引指针p，从0开始</span></span><br><span class="line"><span class="type">int</span> p=<span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//EOF表示End Of File，就是文件末尾，如果没有读到文件末尾的话，就一直读取。</span></span><br><span class="line"><span class="comment">//也可以写成while(scanf(&quot;%d&quot;,&amp;st[p++])!=EOF)，就不需要循环体了</span></span><br><span class="line"><span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;st[p])!=EOF)</span><br><span class="line">&#123;</span><br><span class="line">    p++;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>cin.getline</p><p>字符串读入方式</p><p>sstream</p><p>while(~scanf(“%d”,&amp;x))</p><p>vector输入</p><p>用while(cin&gt;&gt;x)存到vector上</p><p>multiset判重+vector判断</p><p>set动态维护的有序序列，副作用：统计每个数是否出现过</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><h3 id="前缀和-通过67-7"><a href="#前缀和-通过67-7" class="headerlink" title="前缀和 通过67.7%"></a>前缀和 通过67.7%</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">110</span>;</span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line"><span class="type">int</span> a[N][N];</span><br><span class="line"><span class="type">int</span> p[N];<span class="comment">//记录每个票据的数目的数组</span></span><br><span class="line"><span class="type">int</span> s[N]; <span class="comment">// 前缀和数组</span></span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cin &gt;&gt; n;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">0</span>;j&lt;N;j++)</span><br><span class="line">&#123;</span><br><span class="line">cin &gt;&gt; a[i][j];</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> len=<span class="number">0</span>;</span><br><span class="line"><span class="type">int</span> Max = <span class="number">-10000000</span>; </span><br><span class="line"><span class="type">int</span> chong =<span class="number">0</span>,duan=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">0</span>;a[i][j]!=<span class="number">0</span>;j++)</span><br><span class="line">&#123;</span><br><span class="line">p[a[i][j]]++;</span><br><span class="line">len++;  <span class="comment">//p数组里面有几个数</span></span><br><span class="line">Max = <span class="built_in">max</span>(Max,a[i][j]) ;<span class="comment">//p数组里面最大的数 </span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=Max;i++)</span><br><span class="line">&#123;</span><br><span class="line">s[i]=s[i<span class="number">-1</span>]+p[i];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=Max;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(p[i]==<span class="number">2</span>) chong = i;</span><br><span class="line"><span class="keyword">if</span>(s[i]-s[i<span class="number">-1</span>]==<span class="number">0</span> &amp;&amp; s[i]!=<span class="number">0</span>) duan = i;   </span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=Max;i++)</span><br><span class="line">&#123;</span><br><span class="line">cout&lt;&lt;p[i]&lt;&lt;<span class="string">&quot; &quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">puts</span>(<span class="string">&quot;&quot;</span>);</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=Max;i++)</span><br><span class="line">&#123;</span><br><span class="line">cout&lt;&lt;s[i]&lt;&lt;<span class="string">&quot; &quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">puts</span>(<span class="string">&quot;&quot;</span>);</span><br><span class="line">cout &lt;&lt; Max&lt;&lt;endl;</span><br><span class="line">cout &lt;&lt; duan &lt;&lt;<span class="string">&quot; &quot;</span>&lt;&lt;chong;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"> &#125; </span><br></pre></td></tr></table></figure><h3 id="正确代码"><a href="#正确代码" class="headerlink" title="正确代码"></a>正确代码</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># <span class="keyword">include</span> <span class="string">&lt;sstream&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">10010</span>;</span><br><span class="line"><span class="type">int</span> cnt;<span class="comment">//行数</span></span><br><span class="line"><span class="type">int</span> n;<span class="comment">//数组序号</span></span><br><span class="line"><span class="type">int</span> b[N];</span><br><span class="line"><span class="type">int</span> m1,nn1;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    cin &gt;&gt; cnt;</span><br><span class="line">    string line;</span><br><span class="line">    <span class="built_in">getline</span>(cin , line); <span class="comment">//读入第一行行末空格</span></span><br><span class="line">    <span class="keyword">while</span>(cnt--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">getline</span>(cin , line); <span class="comment">//读入第一行</span></span><br><span class="line">        <span class="function">stringstream <span class="title">ssin</span><span class="params">(line)</span></span>;  </span><br><span class="line">        <span class="keyword">while</span>(ssin &gt;&gt; b[n]) n++;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line"><span class="built_in">sort</span>(b,b+n);</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;n;i++)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span>(b[i]-b[i<span class="number">-1</span>]&gt;<span class="number">1</span>) m1 =b[i]<span class="number">-1</span>; <span class="comment">//断号</span></span><br><span class="line">    <span class="keyword">if</span>(b[i]-b[i<span class="number">-1</span>]==<span class="number">0</span>) nn1 =b[i];<span class="comment">//重号</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt;m1&lt;&lt;<span class="string">&quot; &quot;</span>&lt;&lt;nn1;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"> &#125; </span><br></pre></td></tr></table></figure><h1 id="回文日期"><a href="#回文日期" class="headerlink" title="回文日期"></a>回文日期</h1><h2 id="判断闰年"><a href="#判断闰年" class="headerlink" title="判断闰年"></a>判断闰年</h2><p>四年一闰，百年不闰，四百年又闰</p><p>一个年份是闰年当且仅当它满足下列两种情况其中的一种：</p><ol><li>这个年份是 4 的整数倍，但不是 100 的整数倍；</li><li>这个年份是 400 的整数倍。</li></ol><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(year%<span class="number">100</span> &amp;&amp; year%<span class="number">4</span>==<span class="number">0</span> || year%<span class="number">400</span>==<span class="number">0</span>)</span><br></pre></td></tr></table></figure><p>月份技巧</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> days[<span class="number">13</span>]=&#123;<span class="number">0</span>,<span class="number">31</span>,<span class="number">28</span>,<span class="number">31</span>,<span class="number">30</span>,<span class="number">31</span>,<span class="number">30</span>,<span class="number">31</span>,<span class="number">31</span>,<span class="number">30</span>,<span class="number">31</span>,<span class="number">30</span>,<span class="number">31</span>&#125;;</span><br><span class="line"><span class="type">int</span> leap； <span class="comment">//闰年判断</span></span><br><span class="line"><span class="comment">//闰年的二月加一天</span></span><br></pre></td></tr></table></figure><h2 id="代码-1"><a href="#代码-1" class="headerlink" title="代码"></a>代码</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="type">int</span> data1,data2;</span><br><span class="line"><span class="type">int</span> res;</span><br><span class="line"><span class="type">int</span> days[<span class="number">13</span>]=&#123;<span class="number">0</span>,<span class="number">31</span>,<span class="number">28</span>,<span class="number">31</span>,<span class="number">30</span>,<span class="number">31</span>,<span class="number">30</span>,<span class="number">31</span>,<span class="number">31</span>,<span class="number">30</span>,<span class="number">31</span>,<span class="number">30</span>,<span class="number">31</span>&#125;;</span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">check</span><span class="params">(<span class="type">int</span> data)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> year = data / <span class="number">10000</span>; <span class="comment">//2001</span></span><br><span class="line">    <span class="type">int</span> month = data % <span class="number">10000</span> / <span class="number">100</span>; <span class="comment">//1002/100=10</span></span><br><span class="line">    <span class="type">int</span> day = data % <span class="number">100</span>;<span class="comment">//02</span></span><br><span class="line"> </span><br><span class="line">    <span class="comment">//data是否符合日期条件</span></span><br><span class="line">    <span class="keyword">if</span>(month&lt;<span class="number">1</span> || month&gt;<span class="number">12</span> ) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">if</span>(day&gt;<span class="number">31</span> || (month!=<span class="number">2</span> &amp;&amp; day&gt;days[month])) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">if</span>(month == <span class="number">2</span>)&#123;</span><br><span class="line">        <span class="type">int</span> leap; <span class="comment">//闰年</span></span><br><span class="line">        <span class="keyword">if</span>(year%<span class="number">100</span> &amp;&amp; year%<span class="number">4</span>==<span class="number">0</span> || year%<span class="number">400</span>==<span class="number">0</span>) leap=<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">if</span>(day&gt;days[<span class="number">2</span>]+leap) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> a=<span class="number">0</span>;</span><br><span class="line">    cin &gt;&gt; data1 &gt;&gt; data2;</span><br><span class="line">    <span class="comment">//枚举回文数字</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1000</span>;i&lt;=<span class="number">9999</span>;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> data = i;</span><br><span class="line">        <span class="type">int</span> x=i; <span class="comment">//前四位的值</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; <span class="number">4</span>; j ++ ) &#123;</span><br><span class="line">            data = data*<span class="number">10</span> + x%<span class="number">10</span>;</span><br><span class="line">            x /= <span class="number">10</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span>(data&gt;=data1 &amp;&amp; data&lt;= data2 &amp;&amp; <span class="built_in">check</span>(data)) res++;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    cout &lt;&lt; res;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="ACW2867-回文日期"><a href="#ACW2867-回文日期" class="headerlink" title="ACW2867 回文日期"></a>ACW2867 回文日期</h1><p>通过90%</p><p>因为没有注意到条件：</p><ol><li>下一个回文日期和下一个 <code>ABABBABA</code> 型的回文日期可能是同一天。</li></ol><p><code>ABABBABA</code> 型的回文日期，需要满足 A≠BA≠B。</p><ol start="2"><li>data不可以作为变量使用，否则会编译错误</li><li>因为ABABABAB型只取了前2位，所以需要额外的判断，否则会错误答案</li></ol><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> date;</span><br><span class="line"><span class="type">int</span> days[<span class="number">13</span>]=&#123;<span class="number">0</span>,<span class="number">31</span>,<span class="number">28</span>,<span class="number">31</span>,<span class="number">30</span>,<span class="number">31</span>,<span class="number">30</span>,<span class="number">31</span>,<span class="number">31</span>,<span class="number">30</span>,<span class="number">31</span>,<span class="number">30</span>,<span class="number">31</span>&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">//判断构造出来的日期是否符合条件 </span></span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">check</span><span class="params">(<span class="type">int</span> a)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="type">int</span> year = a / <span class="number">10000</span>;</span><br><span class="line">  <span class="type">int</span> month = a % <span class="number">10000</span> / <span class="number">100</span>;</span><br><span class="line">  <span class="type">int</span> day = a % <span class="number">100</span>;</span><br><span class="line">  <span class="type">int</span> oyear = date / <span class="number">10000</span>;</span><br><span class="line">  <span class="type">int</span> omonth = date % <span class="number">10000</span> / <span class="number">100</span>;</span><br><span class="line">  <span class="type">int</span> oday = date % <span class="number">100</span>;</span><br><span class="line">  <span class="keyword">if</span>(year&lt;oyear) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">  <span class="keyword">if</span>(month&lt;<span class="number">1</span> || month&gt;<span class="number">12</span>) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">if</span>((month!=<span class="number">2</span> &amp;&amp; day&gt;days[month]) || day &gt;<span class="number">31</span>) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">if</span>(month == <span class="number">2</span>)&#123;</span><br><span class="line">    <span class="type">int</span> leap;</span><br><span class="line">    <span class="keyword">if</span>((year%<span class="number">100</span> &amp;&amp; year%<span class="number">4</span>==<span class="number">0</span>) || year%<span class="number">400</span>==<span class="number">0</span>) leap=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">if</span>(day &gt; days[<span class="number">2</span>]+leap) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span>(year == oyear)&#123;</span><br><span class="line">      <span class="keyword">if</span>(month&lt;omonth) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">      <span class="keyword">if</span>(month=omonth &amp;&amp; day&lt;oday) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">  &#125; </span><br><span class="line">  </span><br><span class="line">  <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  cin &gt;&gt; date;</span><br><span class="line">  <span class="type">int</span> year1 = date / <span class="number">10000</span>;</span><br><span class="line">  <span class="comment">//构造第一个回文日期</span></span><br><span class="line">  <span class="keyword">for</span>(<span class="type">int</span> i = year1;i&lt;=<span class="number">9999</span>;i++)</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="type">int</span> data1 = i;<span class="comment">//构造的日期</span></span><br><span class="line">    <span class="type">int</span> x = i;<span class="comment">//保留原始的i</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">0</span>;j&lt;<span class="number">4</span>;j++)&#123;</span><br><span class="line">      data1 = data1*<span class="number">10</span> + x%<span class="number">10</span>;</span><br><span class="line">      x/=<span class="number">10</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//cout &lt;&lt; data1&lt;&lt;&quot; &quot;;</span></span><br><span class="line">    <span class="keyword">if</span>(<span class="built_in">check</span>(data1)&amp;&amp;data1!=date) &#123;</span><br><span class="line">    cout &lt;&lt; data1 &lt;&lt;endl;</span><br><span class="line">    <span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">//构造第二个回文日期</span></span><br><span class="line">  <span class="type">int</span> t = date / <span class="number">1000000</span>;</span><br><span class="line">  <span class="keyword">for</span>(<span class="type">int</span> i = t;i&lt;=<span class="number">99</span>;i++)</span><br><span class="line">  &#123;</span><br><span class="line">  <span class="type">int</span> data2 = i;<span class="comment">//构造的日期</span></span><br><span class="line">  data2 = data2*<span class="number">100</span>+data2; </span><br><span class="line">    <span class="type">int</span> x = data2;<span class="comment">//保留原始的i</span></span><br><span class="line">   </span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">0</span>;j&lt;<span class="number">4</span>;j++)&#123;</span><br><span class="line">      data2 = data2*<span class="number">10</span> + x%<span class="number">10</span>;</span><br><span class="line">      x/=<span class="number">10</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">int</span> c1 = data2%<span class="number">10</span>,c2 = data2/<span class="number">10</span>%<span class="number">10</span>;</span><br><span class="line">    <span class="keyword">if</span>(<span class="built_in">check</span>(data2) &amp;&amp; data2!=date &amp;&amp; c1!=c2) &#123;</span><br><span class="line">    cout &lt;&lt; data2 &lt;&lt;endl;</span><br><span class="line">    <span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="日期问题"><a href="#日期问题" class="headerlink" title="日期问题"></a>日期问题</h1><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//11:05-11:49</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;sstream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">100000000</span>;</span><br><span class="line"><span class="type">char</span> p[<span class="number">8</span>];</span><br><span class="line"><span class="type">int</span> days[<span class="number">13</span>] = &#123;<span class="number">0</span>,<span class="number">31</span>,<span class="number">28</span>,<span class="number">31</span>,<span class="number">30</span>,<span class="number">31</span>,<span class="number">30</span>,<span class="number">31</span>,<span class="number">31</span>,<span class="number">30</span>,<span class="number">31</span>,<span class="number">30</span>,<span class="number">31</span>&#125;;</span><br><span class="line"><span class="type">int</span> cnt[<span class="number">6</span>];</span><br><span class="line"><span class="type">int</span> st[N];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">check</span><span class="params">(<span class="type">int</span> year ,<span class="type">int</span> month ,<span class="type">int</span> day,<span class="type">int</span> date)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(date&lt;<span class="number">19600101</span> || date&gt;<span class="number">20591231</span>) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line"><span class="comment">//月份</span></span><br><span class="line"><span class="keyword">if</span>(month&lt;<span class="number">1</span> || month&gt;<span class="number">12</span>)  <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line"><span class="keyword">if</span>(day&gt;<span class="number">31</span> ||day&lt;<span class="number">1</span>|| (month!=<span class="number">2</span>&amp;&amp;day&gt;days[month]))  <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line"><span class="keyword">if</span>(month == <span class="number">2</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> leap;</span><br><span class="line"><span class="keyword">if</span>((year%<span class="number">100</span>&amp;&amp;year%<span class="number">4</span>==<span class="number">0</span>)||year%<span class="number">400</span>==<span class="number">0</span>) leap=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span>(day&gt;days[<span class="number">2</span>]+leap) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line">st[date]++;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">print</span><span class="params">(<span class="type">int</span> date)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">int</span> x = date;</span><br><span class="line"><span class="keyword">if</span>(x%<span class="number">100</span>&lt;<span class="number">10</span> &amp;&amp; x%<span class="number">10000</span>/<span class="number">100</span>&lt;<span class="number">10</span>)&#123;</span><br><span class="line">cout&lt;&lt;x/<span class="number">10000</span>&lt;&lt;<span class="string">&quot;-&quot;</span>&lt;&lt;<span class="string">&quot;0&quot;</span>&lt;&lt;x%<span class="number">10000</span>/<span class="number">100</span>&lt;&lt;<span class="string">&quot;-&quot;</span>&lt;&lt;<span class="string">&quot;0&quot;</span>&lt;&lt;x%<span class="number">100</span>&lt;&lt;endl;</span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span>(x%<span class="number">100</span>&lt;<span class="number">10</span> &amp;&amp; x%<span class="number">10000</span>/<span class="number">100</span>&gt;<span class="number">10</span>)&#123;</span><br><span class="line">cout&lt;&lt;x/<span class="number">10000</span>&lt;&lt;<span class="string">&quot;-&quot;</span>&lt;&lt;x%<span class="number">10000</span>/<span class="number">100</span>&lt;&lt;<span class="string">&quot;-&quot;</span>&lt;&lt;<span class="string">&quot;0&quot;</span>&lt;&lt;x%<span class="number">100</span>&lt;&lt;endl;</span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span>(x%<span class="number">100</span>&gt;<span class="number">10</span> &amp;&amp; x%<span class="number">10000</span>/<span class="number">100</span>&lt;<span class="number">10</span>)&#123;</span><br><span class="line">cout&lt;&lt;x/<span class="number">10000</span>&lt;&lt;<span class="string">&quot;-&quot;</span>&lt;&lt;<span class="string">&quot;0&quot;</span>&lt;&lt;x%<span class="number">10000</span>/<span class="number">100</span>&lt;&lt;<span class="string">&quot;-&quot;</span>&lt;&lt;x%<span class="number">100</span>&lt;&lt;endl;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">cout&lt;&lt;x/<span class="number">10000</span>&lt;&lt;<span class="string">&quot;-&quot;</span>&lt;&lt;x%<span class="number">10000</span>/<span class="number">100</span>&lt;&lt;<span class="string">&quot;-&quot;</span>&lt;&lt;x%<span class="number">100</span>&lt;&lt;endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">string line;</span><br><span class="line"></span><br><span class="line"><span class="built_in">getline</span>(cin,line);</span><br><span class="line"><span class="function">stringstream <span class="title">ssin</span><span class="params">(line)</span></span>;<span class="comment">//读入1行</span></span><br><span class="line"><span class="type">int</span> n=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span>(ssin&gt;&gt;p[n]) n++;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> a=<span class="number">0</span>,b=<span class="number">0</span>,c=<span class="number">0</span>;</span><br><span class="line"><span class="comment">//转换成数字</span></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">2</span>; i ++ )</span><br><span class="line">a=a*<span class="number">10</span>+p[i]-<span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">  <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">3</span>; i &lt; <span class="number">5</span>; i ++ )</span><br><span class="line">b=b*<span class="number">10</span>+p[i]-<span class="string">&#x27;0&#x27;</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">6</span>; i &lt; <span class="number">8</span>; i ++ )</span><br><span class="line">c=c*<span class="number">10</span>+p[i]-<span class="string">&#x27;0&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> num[<span class="number">3</span>];</span><br><span class="line">num[<span class="number">0</span>]=a,num[<span class="number">1</span>]=b,num[<span class="number">2</span>]=c;</span><br><span class="line"></span><br><span class="line"><span class="comment">//年/月/日</span></span><br><span class="line"><span class="type">int</span> year = <span class="number">2000</span>+num[<span class="number">0</span>];<span class="type">int</span> month = num[<span class="number">1</span>];<span class="type">int</span> day = num[<span class="number">2</span>];</span><br><span class="line"><span class="type">int</span> date = year*<span class="number">10000</span> + month*<span class="number">100</span> + day;</span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">check</span>(year,month,day,date)&amp;&amp;st[date]==<span class="number">1</span>)&#123;</span><br><span class="line">cnt[<span class="number">0</span>] = date;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//月/日/年</span></span><br><span class="line">year = <span class="number">2000</span>+num[<span class="number">2</span>];month = num[<span class="number">0</span>];day = num[<span class="number">1</span>];</span><br><span class="line">date = year*<span class="number">10000</span> + month*<span class="number">100</span> + day;</span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">check</span>(year,month,day,date)&amp;&amp;st[date]==<span class="number">1</span>)&#123;</span><br><span class="line">cnt[<span class="number">1</span>] =date;</span><br><span class="line">&#125;</span><br><span class="line">    <span class="comment">//日/月/年</span></span><br><span class="line">    year = <span class="number">2000</span>+num[<span class="number">2</span>];month = num[<span class="number">1</span>];day = num[<span class="number">0</span>];</span><br><span class="line">    date = year*<span class="number">10000</span> + month*<span class="number">100</span> + day;</span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">check</span>(year,month,day,date)&amp;&amp;st[date]==<span class="number">1</span>)&#123;</span><br><span class="line">cnt[<span class="number">2</span>] =date;</span><br><span class="line"><span class="comment">//cout&lt;&lt;year&lt;&lt;&quot;-&quot;&lt;&lt;month&lt;&lt;&quot;-&quot;&lt;&lt;day&lt;&lt;endl;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//年/月/日</span></span><br><span class="line">year = <span class="number">1900</span>+num[<span class="number">0</span>];month = num[<span class="number">1</span>];day = num[<span class="number">2</span>];</span><br><span class="line">date = year*<span class="number">10000</span> + month*<span class="number">100</span> + day;</span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">check</span>(year,month,day,date)&amp;&amp;st[date]==<span class="number">1</span>)&#123;</span><br><span class="line">cnt[<span class="number">3</span>] = date;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//月/日/年</span></span><br><span class="line">year = <span class="number">1900</span>+num[<span class="number">2</span>];month = num[<span class="number">0</span>];day = num[<span class="number">1</span>];</span><br><span class="line">date = year*<span class="number">10000</span> + month*<span class="number">100</span> + day;</span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">check</span>(year,month,day,date)&amp;&amp;st[date]==<span class="number">1</span>)&#123;</span><br><span class="line">cnt[<span class="number">4</span>] =date;</span><br><span class="line">&#125;</span><br><span class="line">    <span class="comment">//日/月/年</span></span><br><span class="line">    year = <span class="number">1900</span>+num[<span class="number">2</span>];month = num[<span class="number">1</span>];day = num[<span class="number">0</span>];</span><br><span class="line">    date = year*<span class="number">10000</span> + month*<span class="number">100</span> + day;</span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">check</span>(year,month,day,date)&amp;&amp;st[date]==<span class="number">1</span>)&#123;</span><br><span class="line">cnt[<span class="number">5</span>] =date;</span><br><span class="line"><span class="comment">//cout&lt;&lt;year&lt;&lt;&quot;-&quot;&lt;&lt;month&lt;&lt;&quot;-&quot;&lt;&lt;day&lt;&lt;endl;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">sort</span>(cnt,cnt+<span class="number">5</span>);</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;<span class="number">5</span>;i++)&#123;</span><br><span class="line"><span class="keyword">if</span>(cnt[i] ) <span class="built_in">print</span>(cnt[i]);</span><br><span class="line">&#125; </span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>67.6%</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//11:05-11:49</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;sstream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">char</span> p[<span class="number">8</span>];</span><br><span class="line"><span class="type">int</span> days[<span class="number">13</span>] = &#123;<span class="number">0</span>,<span class="number">31</span>,<span class="number">28</span>,<span class="number">31</span>,<span class="number">30</span>,<span class="number">31</span>,<span class="number">30</span>,<span class="number">31</span>,<span class="number">31</span>,<span class="number">30</span>,<span class="number">31</span>,<span class="number">30</span>,<span class="number">31</span>&#125;;</span><br><span class="line"><span class="type">int</span> cnt[<span class="number">3</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">check</span><span class="params">(<span class="type">int</span> year ,<span class="type">int</span> month ,<span class="type">int</span> day,<span class="type">int</span> date)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(date&lt;<span class="number">19600101</span> || date&gt;<span class="number">20591231</span>) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line"><span class="comment">//月份</span></span><br><span class="line"><span class="keyword">if</span>(month&lt;<span class="number">1</span> || month&gt;<span class="number">12</span>)  <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line"><span class="keyword">if</span>(day&gt;<span class="number">31</span> ||day&lt;<span class="number">1</span>|| (month!=<span class="number">2</span>&amp;&amp;day&gt;days[month]))  <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line"><span class="keyword">if</span>(month == <span class="number">2</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> leap;</span><br><span class="line"><span class="keyword">if</span>((year%<span class="number">100</span>&amp;&amp;year%<span class="number">4</span>==<span class="number">0</span>)||year%<span class="number">400</span>==<span class="number">0</span>) leap=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span>(day&gt;days[<span class="number">2</span>]+leap) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">print</span><span class="params">(<span class="type">int</span> date)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">int</span> x = date;</span><br><span class="line"><span class="keyword">if</span>(x%<span class="number">100</span>&lt;<span class="number">10</span> &amp;&amp; x%<span class="number">10000</span>/<span class="number">100</span>&lt;<span class="number">10</span>)&#123;</span><br><span class="line">cout&lt;&lt;x/<span class="number">10000</span>&lt;&lt;<span class="string">&quot;-&quot;</span>&lt;&lt;<span class="string">&quot;0&quot;</span>&lt;&lt;x%<span class="number">10000</span>/<span class="number">100</span>&lt;&lt;<span class="string">&quot;-&quot;</span>&lt;&lt;<span class="string">&quot;0&quot;</span>&lt;&lt;x%<span class="number">100</span>&lt;&lt;endl;</span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span>(x%<span class="number">100</span>&lt;<span class="number">10</span> &amp;&amp; x%<span class="number">10000</span>/<span class="number">100</span>&gt;<span class="number">10</span>)&#123;</span><br><span class="line">cout&lt;&lt;x/<span class="number">10000</span>&lt;&lt;<span class="string">&quot;-&quot;</span>&lt;&lt;x%<span class="number">10000</span>/<span class="number">100</span>&lt;&lt;<span class="string">&quot;-&quot;</span>&lt;&lt;<span class="string">&quot;0&quot;</span>&lt;&lt;x%<span class="number">100</span>&lt;&lt;endl;</span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span>(x%<span class="number">100</span>&gt;<span class="number">10</span> &amp;&amp; x%<span class="number">10000</span>/<span class="number">100</span>&lt;<span class="number">10</span>)&#123;</span><br><span class="line">cout&lt;&lt;x/<span class="number">10000</span>&lt;&lt;<span class="string">&quot;-&quot;</span>&lt;&lt;<span class="string">&quot;0&quot;</span>&lt;&lt;x%<span class="number">10000</span>/<span class="number">100</span>&lt;&lt;<span class="string">&quot;-&quot;</span>&lt;&lt;x%<span class="number">100</span>&lt;&lt;endl;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">cout&lt;&lt;x/<span class="number">10000</span>&lt;&lt;<span class="string">&quot;-&quot;</span>&lt;&lt;x%<span class="number">10000</span>/<span class="number">100</span>&lt;&lt;<span class="string">&quot;-&quot;</span>&lt;&lt;x%<span class="number">100</span>&lt;&lt;endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">string line;</span><br><span class="line"></span><br><span class="line"><span class="built_in">getline</span>(cin,line);</span><br><span class="line"><span class="function">stringstream <span class="title">ssin</span><span class="params">(line)</span></span>;<span class="comment">//读入1行</span></span><br><span class="line"><span class="type">int</span> n=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span>(ssin&gt;&gt;p[n]) n++;</span><br><span class="line"><span class="type">int</span> a=<span class="number">0</span>,b=<span class="number">0</span>,c=<span class="number">0</span>;</span><br><span class="line"><span class="comment">//转换成数字</span></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">2</span>; i ++ )</span><br><span class="line">a=a*<span class="number">10</span>+p[i]-<span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">  <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">3</span>; i &lt; <span class="number">5</span>; i ++ )</span><br><span class="line">b=b*<span class="number">10</span>+p[i]-<span class="string">&#x27;0&#x27;</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">6</span>; i &lt; <span class="number">8</span>; i ++ )</span><br><span class="line">c=c*<span class="number">10</span>+p[i]-<span class="string">&#x27;0&#x27;</span>;</span><br><span class="line"><span class="comment">//cout &lt;&lt; a &lt;&lt;&quot; &quot;&lt;&lt; b &lt;&lt;&quot; &quot;&lt;&lt; c &lt;&lt;&quot; &quot;;</span></span><br><span class="line"><span class="comment">//a,b,c;a,c,b;b,a,c;b,c,a;c,a,b;</span></span><br><span class="line"><span class="type">int</span> num[<span class="number">3</span>];</span><br><span class="line">num[<span class="number">0</span>]=a,num[<span class="number">1</span>]=b,num[<span class="number">2</span>]=c;</span><br><span class="line"></span><br><span class="line"><span class="comment">//年/月/日</span></span><br><span class="line"><span class="type">int</span> year = <span class="number">2000</span>+num[<span class="number">0</span>];<span class="type">int</span> month = num[<span class="number">1</span>];<span class="type">int</span> day = num[<span class="number">2</span>];</span><br><span class="line"><span class="type">int</span> date = year*<span class="number">10000</span> + month*<span class="number">100</span> + day;</span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">check</span>(year,month,day,date))&#123;</span><br><span class="line">cnt[<span class="number">0</span>] = date;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//月/日/年</span></span><br><span class="line">year = <span class="number">2000</span>+num[<span class="number">2</span>];month = num[<span class="number">0</span>];day = num[<span class="number">1</span>];</span><br><span class="line">date = year*<span class="number">10000</span> + month*<span class="number">100</span> + day;</span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">check</span>(year,month,day,date))&#123;</span><br><span class="line">cnt[<span class="number">1</span>] =date;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">cnt[<span class="number">1</span>] =<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">    <span class="comment">//日/月/年</span></span><br><span class="line">    year = <span class="number">2000</span>+num[<span class="number">2</span>];month = num[<span class="number">1</span>];day = num[<span class="number">0</span>];</span><br><span class="line">    date = year*<span class="number">10000</span> + month*<span class="number">100</span> + day;</span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">check</span>(year,month,day,date))&#123;</span><br><span class="line">cnt[<span class="number">2</span>] =date;</span><br><span class="line"><span class="comment">//cout&lt;&lt;year&lt;&lt;&quot;-&quot;&lt;&lt;month&lt;&lt;&quot;-&quot;&lt;&lt;day&lt;&lt;endl;</span></span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">cnt[<span class="number">2</span>]=<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">sort</span>(cnt,cnt+<span class="number">3</span>);</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;<span class="number">3</span>;i++)&#123;</span><br><span class="line"><span class="keyword">if</span>(cnt[i]) <span class="built_in">print</span>(cnt[i]);</span><br><span class="line">&#125; </span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Y总思路"><a href="#Y总思路" class="headerlink" title="Y总思路"></a>Y总思路</h2><p> 枚举顺序，19600101 和 20591231</p><ol><li>判断是否合法</li><li>判断是否是给定的表示</li><li>时间复杂度$10^6*10$</li><li>注意输入输出</li></ol><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d/%d/%d&quot;</span>,&amp;a,&amp;b,&amp;c);<span class="comment">//格式化输入02/03/04</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d-%02d-%02d\n&quot;</span>,year,month,day);<span class="comment">//格式化输出，不满2位补前导0</span></span><br></pre></td></tr></table></figure><ol start="5"><li>反推法虽然时间效率高O(1)，很麻烦，自己写的反推法，试下set? </li></ol><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">int</span> days[<span class="number">13</span>] = &#123;<span class="number">0</span>,<span class="number">31</span>,<span class="number">28</span>,<span class="number">31</span>,<span class="number">30</span>,<span class="number">31</span>,<span class="number">30</span>,<span class="number">31</span>,<span class="number">31</span>,<span class="number">30</span>,<span class="number">31</span>,<span class="number">30</span>,<span class="number">31</span>&#125;;</span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">check</span><span class="params">(<span class="type">int</span> year,<span class="type">int</span> month,<span class="type">int</span> day)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(month&lt;<span class="number">1</span> || month&gt;<span class="number">12</span>) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">if</span>(day&lt;<span class="number">1</span> || day&gt;<span class="number">31</span>) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">if</span>(month!=<span class="number">2</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(day&gt;days[month]) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="type">int</span> leap=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">if</span>((year%<span class="number">100</span>&amp;&amp;year%<span class="number">4</span>==<span class="number">0</span>) || year%<span class="number">400</span>==<span class="number">0</span>) leap=<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">if</span>(day&gt;days[<span class="number">2</span>]+leap) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//和字符串相关的，一般使用printf和scanf读入输出</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> a,b,c;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d/%d/%d&quot;</span>,&amp;a,&amp;b,&amp;c);<span class="comment">//格式化输入02/03/04</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">19600101</span>; i &lt;= <span class="number">20591231</span>; i ++ )</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> year = i/<span class="number">10000</span>,month=i%<span class="number">10000</span>/<span class="number">100</span>,day=i%<span class="number">100</span>;</span><br><span class="line">        <span class="keyword">if</span>(<span class="built_in">check</span>(year,month,day))</span><br><span class="line">        &#123;   <span class="comment">//年/月/日的，有采用月/日/年的，还有采用日/月/年的</span></span><br><span class="line">            <span class="keyword">if</span>(year%<span class="number">100</span>==a&amp;&amp;month==b&amp;&amp;day==c ||</span><br><span class="line">               month==a&amp;&amp;day==b&amp;&amp;year%<span class="number">100</span>==c ||</span><br><span class="line">               day==a&amp;month==b&amp;&amp;year%<span class="number">100</span>==c)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;%d-%02d-%02d\n&quot;</span>,year,month,day);   </span><br><span class="line">            &#125; </span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="ACW1219-移动距离"><a href="#ACW1219-移动距离" class="headerlink" title="ACW1219 移动距离"></a>ACW1219 移动距离</h1><h2 id="自己写"><a href="#自己写" class="headerlink" title="自己写"></a>自己写</h2><p>过了蓝桥的数据</p><p>过不了ACW</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">10010</span>;</span><br><span class="line"><span class="type">int</span> w,m,n;</span><br><span class="line"><span class="type">int</span> cnt;</span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">a</span>&#123;</span><br><span class="line">    <span class="type">int</span> x;</span><br><span class="line">    <span class="type">int</span> y;</span><br><span class="line">    <span class="type">int</span> value;</span><br><span class="line">&#125;a[N];</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    cin &gt;&gt; w &gt;&gt; m &gt;&gt; n;</span><br><span class="line">    <span class="type">int</span> Max = <span class="number">-11010</span>;</span><br><span class="line">    Max=<span class="built_in">max</span>(m,n);</span><br><span class="line">    <span class="type">int</span> len = Max/w+<span class="number">1</span>;</span><br><span class="line">    <span class="type">int</span> c=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= len; i ++ )&#123;</span><br><span class="line">        <span class="keyword">if</span>(i%<span class="number">2</span>)&#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">1</span>; j &lt;= w; j ++ )&#123;</span><br><span class="line">                a[c].x=i;</span><br><span class="line">                a[c].y=j;</span><br><span class="line">                a[c].value=c;</span><br><span class="line">                c++;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> j = w; j &gt;=<span class="number">1</span>; j -- )&#123;</span><br><span class="line">                a[c].x=i;</span><br><span class="line">                a[c].y=j;</span><br><span class="line">                a[c].value=c;</span><br><span class="line">                c++;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">int</span> x1,x2,y1,y2;</span><br><span class="line">   <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=c;i++)</span><br><span class="line">   &#123;</span><br><span class="line">       </span><br><span class="line">       <span class="keyword">if</span>(a[i].value==m) &#123;</span><br><span class="line">           x1 = a[i].x;</span><br><span class="line">           y1 = a[i].y;</span><br><span class="line">       &#125;</span><br><span class="line">       <span class="keyword">if</span>(a[i].value==n) &#123;</span><br><span class="line">           x2 = a[i].x;</span><br><span class="line">           y2 = a[i].y;</span><br><span class="line">       &#125;</span><br><span class="line">       <span class="comment">//cout &lt;&lt;a[i].x&lt;&lt;&quot; &quot;&lt;&lt;a[i].y&lt;&lt;&quot; &quot;&lt;&lt;a[i].value&lt;&lt;endl;</span></span><br><span class="line">   &#125;</span><br><span class="line">    cnt = <span class="built_in">abs</span>(x2-x1)+<span class="built_in">abs</span>(y2-y1);</span><br><span class="line"></span><br><span class="line">    cout &lt;&lt; cnt;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="学Y总思路"><a href="#学Y总思路" class="headerlink" title="学Y总思路"></a>学Y总思路</h2><p>曼哈顿距离  折线距离<br>$$<br>\lvert x_1-x_2\rvert-\lvert y_1-y_2\rvert<br>$$</p><p>欧几里得距离<br>$$<br>\sqrt{(x_1-x_2)^2+(y_1-y_2)^2}<br>$$<br><img src="https://blog-1316756713.cos.ap-shanghai.myqcloud.com/img/202303312317016.webp" alt="image-20230331231652655"></p><p><img src="https://blog-1316756713.cos.ap-shanghai.myqcloud.com/img/202303312327442.webp" alt="image-20230331232716258"></p><p><strong>每个数据都减1</strong></p><p>不然行号需要加特判，自己的思路开始被特判杀死了，用结构体的话会空间超限。</p><p>行号: n/w   m/w</p><p>列号：正常情况 ：n%w   m%w</p><p>​      蛇形 if(n/w是奇数) w-1-n%w</p><p>时间复杂度O(1)</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">int</span> w,m,n;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    cin &gt;&gt; w &gt;&gt; m &gt;&gt; n;</span><br><span class="line">    <span class="comment">//记得我们这里所有数据都减了1</span></span><br><span class="line">    m = m<span class="number">-1</span>;</span><br><span class="line">    n = n<span class="number">-1</span>;</span><br><span class="line">    <span class="type">int</span> mx,my;</span><br><span class="line">    <span class="type">int</span> nx,ny;</span><br><span class="line">    mx = m/w;</span><br><span class="line">    <span class="keyword">if</span>(mx%<span class="number">2</span>) my = w<span class="number">-1</span>-m%w;</span><br><span class="line">    <span class="keyword">else</span> my = m%w;</span><br><span class="line">    nx = n/w;</span><br><span class="line">    <span class="keyword">if</span>(nx%<span class="number">2</span>) ny = w<span class="number">-1</span>-n%w;</span><br><span class="line">    <span class="keyword">else</span> ny = n%w;</span><br><span class="line">    <span class="comment">//int x1= m/w,x2=n/w;</span></span><br><span class="line">    <span class="comment">//int y1= m%w,y2=n%w;</span></span><br><span class="line">    <span class="comment">//if(x1%2) y1= w-1-y1;</span></span><br><span class="line">    <span class="comment">//if(x2%2) y2= w-1-y2;</span></span><br><span class="line">    <span class="type">int</span> res = <span class="built_in">abs</span>(mx-nx)+<span class="built_in">abs</span>(my-ny);</span><br><span class="line">    <span class="comment">//cout &lt;&lt; x &lt;&lt; y &lt;&lt;endl;</span></span><br><span class="line">    cout &lt;&lt; res;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="ACW1231-航班时间"><a href="#ACW1231-航班时间" class="headerlink" title="ACW1231 航班时间"></a>ACW1231 航班时间</h1><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><p>类似于流水行船</p><p><img src="https://blog-1316756713.cos.ap-shanghai.myqcloud.com/img/202304011107504.webp" alt="image-20230401110716288"></p><h1 id="归并排序"><a href="#归并排序" class="headerlink" title="归并排序"></a>归并排序</h1><h2 id="思路-1"><a href="#思路-1" class="headerlink" title="思路"></a>思路</h2><ol><li>确定分界点：mid = (l+r)/2</li><li>递归排序left,right</li><li>归并，合二为一</li><li>时间复杂度：O(nlogn)</li></ol><p><img src="https://blog-1316756713.cos.ap-shanghai.myqcloud.com/img/202304040044787.webp" alt="image-20230404004457538"></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">100010</span>;</span><br><span class="line"><span class="type">int</span> q[N],tmp[N];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">merge_sort</span><span class="params">(<span class="type">int</span> q[], <span class="type">int</span> l, <span class="type">int</span> r)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (l &gt;= r) <span class="keyword">return</span>;</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> mid = l + r &gt;&gt; <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">merge_sort</span>(q, l, mid), <span class="built_in">merge_sort</span>(q, mid + <span class="number">1</span>, r);</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> k = <span class="number">0</span>, i = l, j = mid + <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span> (i &lt;= mid &amp;&amp; j &lt;= r)</span><br><span class="line">        <span class="keyword">if</span> (q[i] &lt;= q[j]) tmp[k ++ ] = q[i ++ ];</span><br><span class="line">        <span class="keyword">else</span> tmp[k ++ ] = q[j ++ ];</span><br><span class="line">    <span class="keyword">while</span> (i &lt;= mid) tmp[k ++ ] = q[i ++ ];</span><br><span class="line">    <span class="keyword">while</span> (j &lt;= r) tmp[k ++ ] = q[j ++ ];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (i = l, j = <span class="number">0</span>; i &lt;= r; i ++, j ++ ) q[i] = tmp[j];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// void merge_sort(int q[],int l,int r)</span></span><br><span class="line"><span class="comment">// &#123;</span></span><br><span class="line"><span class="comment">//     if(l &gt;= r) return;//如果q中没有数字或者只有1个数字</span></span><br><span class="line"><span class="comment">//     int mid = l+r &gt;&gt; 1;</span></span><br><span class="line"><span class="comment">//     merge_sort(q,l,mid);</span></span><br><span class="line"><span class="comment">//     merge_sort(q,mid+1,r);</span></span><br><span class="line"><span class="comment">//     int k=0,i=l,j=mid+1;</span></span><br><span class="line"><span class="comment">//     while(i&lt;=l &amp;&amp; j&lt;=r)&#123;</span></span><br><span class="line"><span class="comment">//         if(q[i]&lt;=q[j]) tmp[k++] = q[i++];</span></span><br><span class="line"><span class="comment">//         else tmp[k++] = q[j++];</span></span><br><span class="line"><span class="comment">//     &#125;</span></span><br><span class="line"><span class="comment">//     while(i&lt;= mid) tmp[k++] = q[i++]; //这里是&lt;=</span></span><br><span class="line"><span class="comment">//     while(j&lt;= r) tmp[k++] = q[j++];</span></span><br><span class="line">    </span><br><span class="line"><span class="comment">//     for (int i = l,j=0; i &lt;= r; i ++,j++ ) q[i]=tmp[j]; </span></span><br><span class="line">    </span><br><span class="line"><span class="comment">// &#125;</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i ++ ) cin &gt;&gt; q[i];</span><br><span class="line">    <span class="built_in">merge_sort</span>(q,<span class="number">0</span>,n<span class="number">-1</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i ++ ) cout &lt;&lt; q[i] &lt;&lt;<span class="string">&quot; &quot;</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="逆序对"><a href="#逆序对" class="headerlink" title="逆序对"></a>逆序对</h1>]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
          <category> 蓝桥杯 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 模拟 </tag>
            
            <tag> 排序 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>枚举</title>
      <link href="/posts/633a03ca/"/>
      <url>/posts/633a03ca/</url>
      
        <content type="html"><![CDATA[<h2 id="AcW1210连号区间数（第4届蓝桥杯）"><a href="#AcW1210连号区间数（第4届蓝桥杯）" class="headerlink" title="AcW1210连号区间数（第4届蓝桥杯）"></a>AcW1210连号区间数（第4届蓝桥杯）</h2><p>思路：递增的子序列，<strong>最大值-最小值=序列长度</strong></p><h2 id="纯枚举，过80-的数据"><a href="#纯枚举，过80-的数据" class="headerlink" title="纯枚举，过80%的数据"></a>纯枚举，过80%的数据</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">10010</span>; </span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line"><span class="type">int</span> p[N],s[N];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cin &gt;&gt; n;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>;i &lt;= n;i++) cin &gt;&gt; p[i];</span><br><span class="line"><span class="comment">//  sort(p+4,p+6); //第4位和第5位</span></span><br><span class="line"><span class="comment">//  for(int i = 1;i &lt;= n;i++) cout &lt;&lt; p[i] &lt;&lt; &quot; &quot;;</span></span><br><span class="line"><span class="comment">//  puts(&quot;&quot;);</span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> res = <span class="number">0</span>;</span><br><span class="line"><span class="comment">//左端点 </span></span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>;i &lt;= n;i++)&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> j = i ;j &lt;= n;j++)&#123; <span class="comment">//长度 </span></span><br><span class="line">   </span><br><span class="line"><span class="keyword">if</span> ( j== i) res ++;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="built_in">memcpy</span>(s,p,<span class="keyword">sizeof</span> p);</span><br><span class="line">    <span class="built_in">sort</span>(s+i,s+j+<span class="number">1</span>);</span><br><span class="line">    <span class="keyword">if</span>((j-i) == (s[j]-s[i])) res++;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; res ;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="最大值，最小值枚举（过100-）"><a href="#最大值，最小值枚举（过100-）" class="headerlink" title="最大值，最小值枚举（过100%）"></a>最大值，最小值枚举（过100%）</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cin &gt;&gt; n;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>;i &lt;= n;i++) cin &gt;&gt; p[i];</span><br><span class="line"><span class="type">int</span> res = <span class="number">0</span>;</span><br><span class="line"><span class="comment">//左端点 </span></span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>;i &lt;= n;i++)&#123;</span><br><span class="line">        <span class="type">int</span> maxa = p[i];</span><br><span class="line">        <span class="type">int</span> mina = p[i];</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> j = i ;j &lt;= n;j++)&#123; <span class="comment">//长度 </span></span><br><span class="line">            maxa = <span class="built_in">max</span>(maxa,p[j]);</span><br><span class="line">            mina = <span class="built_in">min</span>(mina,p[j]);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> ( j== i) res ++;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">if</span>((j-i) == (maxa-mina)) res++;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; res ;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>上述代码中更改</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">const</span> <span class="type">int</span> INF = <span class="number">100000000</span>;</span><br><span class="line">maxa = -INF;  <span class="comment">//最大值初始化为无穷小</span></span><br><span class="line">mina = INF;</span><br></pre></td></tr></table></figure><h1 id="AcW1236递增三元组"><a href="#AcW1236递增三元组" class="headerlink" title="AcW1236递增三元组"></a>AcW1236递增三元组</h1><h2 id="暴力"><a href="#暴力" class="headerlink" title="暴力"></a>暴力</h2><p>纯暴力（过75%）</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> n;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N =<span class="number">100010</span>;</span><br><span class="line"><span class="type">int</span> a[N],b[N],c[N];</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cin &gt;&gt; n;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++) cin &gt;&gt; a[i];</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++) cin &gt;&gt; b[i];</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++) cin &gt;&gt; c[i];</span><br><span class="line"><span class="type">int</span> res = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">0</span>;j&lt;n;j++)</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> k=<span class="number">0</span>;k&lt;n;k++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(a[i]&lt;b[j]&amp;&amp;b[j]&lt;c[k])</span><br><span class="line">res++; </span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; res;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"> &#125; </span><br></pre></td></tr></table></figure><h2 id="思想"><a href="#思想" class="headerlink" title="思想"></a>思想</h2><p><img src="https://blog-1316756713.cos.ap-shanghai.myqcloud.com/img/202303291454049.webp" alt="image-20230329145416830"></p><h2 id="二分-排序"><a href="#二分-排序" class="headerlink" title="二分+排序"></a>二分+排序</h2><h3 id="手撕二分"><a href="#手撕二分" class="headerlink" title="手撕二分"></a>手撕二分</h3><p>注意：int的范围为$2*10^9$,超过的用long long </p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> LL;</span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N =<span class="number">100010</span>;</span><br><span class="line"><span class="type">int</span> a[N],b[N],c[N];</span><br><span class="line"><span class="comment">//int res = 0; //答案可能为10的五次乘以10的五次</span></span><br><span class="line">LL res;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cin &gt;&gt; n;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++) cin &gt;&gt; a[i];</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++) cin &gt;&gt; b[i];</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++) cin &gt;&gt; c[i];</span><br><span class="line"></span><br><span class="line"><span class="built_in">sort</span>(a,a+n); </span><br><span class="line"><span class="built_in">sort</span>(b,b+n); </span><br><span class="line"><span class="built_in">sort</span>(c,c+n); </span><br><span class="line"><span class="comment">//找出a中第一个小于b[i]的数   b[i]的左边界  a[mid]&gt;=x     求个数 </span></span><br><span class="line"><span class="comment">//找出c中第一个大于b[i]的数   b[i]的右边界  a[mid]&lt;=x     求个数</span></span><br><span class="line"><span class="comment">//2个个数相乘 </span></span><br><span class="line"><span class="type">int</span> t1=<span class="number">0</span>,t2=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> x = b[i];</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> l=<span class="number">0</span>,r=n<span class="number">-1</span>;</span><br><span class="line"><span class="comment">//找出a中最后1个小于b[i]的数   b[i]的左边界</span></span><br><span class="line"><span class="keyword">while</span>(l &lt; r)</span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> mid = l+r+<span class="number">1</span>&gt;&gt;<span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span>(a[mid] &lt; x) l = mid;</span><br><span class="line"><span class="keyword">else</span> r = mid<span class="number">-1</span>; </span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(a[l] &gt;= x) t1=<span class="number">0</span>;   <span class="comment">//不存在 </span></span><br><span class="line"><span class="keyword">else</span> t1=l+<span class="number">1</span>;</span><br><span class="line"><span class="comment">//找出c中第一个大于b[i]的数   b[i]的右边界</span></span><br><span class="line">    l=<span class="number">0</span>;</span><br><span class="line">r=n<span class="number">-1</span>;</span><br><span class="line"><span class="keyword">while</span>(l &lt; r)</span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> mid = l+r&gt;&gt;<span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span>(c[mid] &gt; x) r = mid;</span><br><span class="line"><span class="keyword">else</span> l = mid+<span class="number">1</span>; </span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(c[l] &lt;= x) t2=<span class="number">0</span>;  <span class="comment">//不存在 </span></span><br><span class="line"><span class="keyword">else</span> t2=n-l;</span><br><span class="line"></span><br><span class="line">res += (LL)t1*t2;</span><br><span class="line"><span class="comment">// cout&lt;&lt;t1&lt;&lt;&quot; &quot;&lt;&lt;t2&lt;&lt;&quot; &quot;;</span></span><br><span class="line"><span class="comment">// puts(&quot;&quot;);</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; res;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"> &#125; </span><br></pre></td></tr></table></figure><h3 id="二分查找函数"><a href="#二分查找函数" class="headerlink" title="二分查找函数"></a>二分查找函数</h3><h2 id="前缀和"><a href="#前缀和" class="headerlink" title="前缀和"></a>前缀和</h2><p><strong>前缀和表示个数的特殊用法</strong>：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="AcW1245-特别数的和"><a href="#AcW1245-特别数的和" class="headerlink" title="AcW1245 特别数的和"></a>AcW1245 特别数的和</h1><p>常用小技巧：关于取出x的每位数字 和 将字符数字转为数字</p><h2 id="取出x的每位数字"><a href="#取出x的每位数字" class="headerlink" title="取出x的每位数字"></a>取出x的每位数字</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> t = x % <span class="number">10</span>;</span><br><span class="line">x /= <span class="number">10</span>;</span><br></pre></td></tr></table></figure><h2 id="将字符数字转为数字"><a href="#将字符数字转为数字" class="headerlink" title="将字符数字转为数字"></a>将字符数字转为数字</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> x = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; str.<span class="built_in">size</span>(); i ++ )</span><br><span class="line">    x = x * <span class="number">10</span> + str[i] - <span class="string">&#x27;0&#x27;</span>;</span><br></pre></td></tr></table></figure><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><p><strong>写在主函数中：</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line">cin &gt;&gt; n;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> x =i;   <span class="comment">//下面还要用到i的原始值，而且不加这行的话改变了i的值，会陷入死循环</span></span><br><span class="line">    <span class="keyword">while</span>(x)&#123;</span><br><span class="line">        <span class="type">int</span> c = x%<span class="number">10</span>;</span><br><span class="line">        <span class="keyword">if</span>(c==<span class="number">2</span> || c==<span class="number">0</span> || c==<span class="number">1</span> || c==<span class="number">9</span> ) &#123;</span><br><span class="line">            <span class="comment">//res++;</span></span><br><span class="line">            res+=i;  <span class="comment">//计算的是这些数字的和</span></span><br><span class="line">            <span class="keyword">break</span>;   <span class="comment">//不加break时，如果一个数字有2个特征值会计算2遍</span></span><br><span class="line">        &#125;</span><br><span class="line">        x /= <span class="number">10</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; res;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>单独写一个函数：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">bool check(int a)</span><br><span class="line">&#123;</span><br><span class="line">while(a)&#123;</span><br><span class="line">int c = a%10;</span><br><span class="line">if(c == 2 || c == 0 || c == 1 || c == 9 ) return true;</span><br><span class="line">a /= 10;</span><br><span class="line">&#125;</span><br><span class="line">return false;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">cin &gt;&gt; n;</span><br><span class="line">for(int i=1; i&lt;=n; i++)&#123;</span><br><span class="line">if(check(i)) &#123;</span><br><span class="line">res += i;</span><br><span class="line">//cout &lt;&lt; i &lt;&lt; &quot; &quot;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">//puts(&quot;&quot;);</span><br><span class="line">cout &lt;&lt; res;</span><br><span class="line">return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="debug"><a href="#debug" class="headerlink" title="debug"></a>debug</h2><p>如果没有break,会出现计算2次</p><p>例如1-40的数据输出为</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span> <span class="number">2</span> <span class="number">9</span> <span class="number">10</span> <span class="number">10</span> <span class="number">11</span> <span class="number">11</span> <span class="number">12</span> <span class="number">12</span> <span class="number">13</span> <span class="number">14</span> <span class="number">15</span> <span class="number">16</span> <span class="number">17</span> <span class="number">18</span> <span class="number">19</span> <span class="number">19</span> <span class="number">20</span> <span class="number">20</span> <span class="number">21</span> <span class="number">21</span> <span class="number">22</span> <span class="number">22</span> <span class="number">23</span> <span class="number">24</span> <span class="number">25</span> <span class="number">26</span> <span class="number">27</span> <span class="number">28</span> <span class="number">29</span> <span class="number">29</span> <span class="number">30</span> <span class="number">31</span> <span class="number">32</span> <span class="number">39</span> <span class="number">40</span></span><br><span class="line"><span class="number">718</span></span><br></pre></td></tr></table></figure><p>有break时计算正确</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">40</span></span><br><span class="line"><span class="number">1</span> <span class="number">2</span> <span class="number">9</span> <span class="number">10</span> <span class="number">11</span> <span class="number">12</span> <span class="number">13</span> <span class="number">14</span> <span class="number">15</span> <span class="number">16</span> <span class="number">17</span> <span class="number">18</span> <span class="number">19</span> <span class="number">20</span> <span class="number">21</span> <span class="number">22</span> <span class="number">23</span> <span class="number">24</span> <span class="number">25</span> <span class="number">26</span> <span class="number">27</span> <span class="number">28</span> <span class="number">29</span> <span class="number">30</span> <span class="number">31</span> <span class="number">32</span> <span class="number">39</span> <span class="number">40</span></span><br><span class="line"><span class="number">574</span></span><br></pre></td></tr></table></figure><p>如果实在搞不清break啥时候用，就别写在主函数了，分开写，就没这破事了</p>]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
          <category> 蓝桥杯 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 枚举 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>数学知识</title>
      <link href="/posts/374e1302/"/>
      <url>/posts/374e1302/</url>
      
        <content type="html"><![CDATA[<h1 id="互质"><a href="#互质" class="headerlink" title="互质"></a>互质</h1><h1 id="蓝桥杯原题"><a href="#蓝桥杯原题" class="headerlink" title="蓝桥杯原题"></a>蓝桥杯原题</h1><h2 id="ACW1216-饮料换购"><a href="#ACW1216-饮料换购" class="headerlink" title="ACW1216. 饮料换购"></a>ACW1216. 饮料换购</h2><a class="btn-beautify outline blue larger" href="https://www.acwing.com/problem/content/1218/" title="原题链接"><i class="far fa-hand-point-right"></i><span>原题链接</span></a><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    <span class="type">int</span> res = n;</span><br><span class="line">    <span class="keyword">while</span>(n&gt;=<span class="number">3</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> c = n%<span class="number">3</span>;</span><br><span class="line">        <span class="type">int</span> a = n/<span class="number">3</span>;</span><br><span class="line">        n = a+c;</span><br><span class="line">        res += a;</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; res;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="1205-买不到的数目"><a href="#1205-买不到的数目" class="headerlink" title="1205. 买不到的数目"></a>1205. 买不到的数目</h2><div class="tabs" id="test4"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#test4-1">dfs暴力打表</button></li><li class="tab"><button type="button" data-href="#test4-2">数学推导公式</button></li><li class="tab"><button type="button" data-href="#test4-3">dp</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="test4-1"><p>只能过1/3</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> p,q;</span><br><span class="line"><span class="type">int</span> res;</span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">dfs</span><span class="params">(<span class="type">int</span> m,<span class="type">int</span> p, <span class="type">int</span> q)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">if</span>(m == <span class="number">0</span>) <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">  <span class="keyword">if</span>(m &gt;= p &amp;&amp; <span class="built_in">dfs</span>(m-p , p , q)) <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">  <span class="keyword">if</span>(m &gt;= q &amp;&amp; <span class="built_in">dfs</span>(m-q , p , q)) <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">  <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  cin &gt;&gt; p &gt;&gt; q;</span><br><span class="line">  <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>;i&lt;=<span class="number">1000</span>;i++)&#123;</span><br><span class="line">    <span class="keyword">if</span>(!<span class="built_in">dfs</span>(i,p,q))&#123;</span><br><span class="line">        res = i;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  cout&lt;&lt;res;</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test4-2"><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> p,q;</span><br><span class="line"><span class="type">int</span> res;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  cin &gt;&gt; p &gt;&gt; q;</span><br><span class="line">  res = (p<span class="number">-1</span>)*(q<span class="number">-1</span>)<span class="number">-1</span>;</span><br><span class="line">  cout&lt;&lt;res;</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test4-3"><p>引理：给定a,b,</p><p>引理：给定a，ba，b，若d=gcd(a,b)&gt;1 d=gcd(a,b)&gt;1,则一定不能凑出最大数</p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div>]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
          <category> 蓝桥杯 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数学知识 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>DP</title>
      <link href="/posts/bea7c90a/"/>
      <url>/posts/bea7c90a/</url>
      
        <content type="html"><![CDATA[<h1 id="背包问题"><a href="#背包问题" class="headerlink" title="背包问题"></a>背包问题</h1><p><img src="https://blog-1316756713.cos.ap-shanghai.myqcloud.com/img/202303261415589.webp" alt="image-20230326141510257"></p><p>dp的优化：对dp的代码，方程进行等价变形</p><h2 id="01背包问题"><a href="#01背包问题" class="headerlink" title="01背包问题"></a>01背包问题</h2><h3 id="朴素方法"><a href="#朴素方法" class="headerlink" title="朴素方法"></a>朴素方法</h3><p><strong>每件物品最多只用1次</strong></p><p>体积&lt;=V的情况下的最大价值</p><p><strong>状态表示：</strong>   </p><p>​    集合：所有选法</p><p>​        条件:</p><p>​        1.只从前i个物品中选</p><p>​        2.总体积&lt;=j</p><p>​    属性：Max</p><p><strong>状态计算：</strong>集合的划分</p><p>  <img src="https://blog-1316756713.cos.ap-shanghai.myqcloud.com/img/202304071113931.webp" alt="image-20230407111253719"></p><p><strong>状态转移方程：</strong></p><p>不选i：f(i-1,j)</p><p>选i:  f(i-1,j-$v_i$)+$w_i$</p><p>f(i,j) = max(f(i-1,j),f(i-1,j-$v_i$)+$w_i$)</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> n,m;   <span class="comment">//物品数目，背包容量</span></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N=<span class="number">1010</span>;</span><br><span class="line"><span class="type">int</span> v[N],w[N];</span><br><span class="line"><span class="type">int</span> f[N][N];</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cin&gt;&gt;n&gt;&gt;m;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++) cin&gt;&gt;v[i]&gt;&gt;w[i];</span><br><span class="line"><span class="comment">//f[0][0-m] = 0,所以下面从1开始枚举</span></span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)      <span class="comment">//选的物品个数从1开始枚举</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">0</span>;j&lt;=m;j++)  <span class="comment">//背包容量从0开始枚举</span></span><br><span class="line">&#123;</span><br><span class="line">f[i][j] = f[i<span class="number">-1</span>][j];  <span class="comment">//左边一定存在</span></span><br><span class="line"><span class="keyword">if</span>(j &gt;= v[i])&#123;  <span class="comment">//只有当装的下的时候才存在 </span></span><br><span class="line">f[i][j]=<span class="built_in">max</span>(f[i][j],f[i<span class="number">-1</span>][j-v[i]]+w[i]);</span><br><span class="line">&#125; </span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">cout&lt;&lt;f[n][m];</span><br><span class="line"> &#125; </span><br></pre></td></tr></table></figure><h3 id="一维优化"><a href="#一维优化" class="headerlink" title="一维优化"></a>一维优化</h3><p>不选i：f(i-1,j)</p><p>选i:  f(i-1,j-$v_i$)+$w_i$</p><p>f(i,j) = max(f(i-1,j),f(i-1,j-$v_i$)+$w_i$)</p><p>f(i,j)层只用到了f(i-1)这一层，这一层是上个状态，所以只需要使得j从大到小遍历即可</p><p>f(j) = max(f(j),f(j-$v_i$)+$w_i$)</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> n,m;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N=<span class="number">1010</span>;</span><br><span class="line"><span class="type">int</span> v[N],w[N];</span><br><span class="line"><span class="type">int</span> f[N];</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cin&gt;&gt;n&gt;&gt;m;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++) cin&gt;&gt;v[i]&gt;&gt;w[i];</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> j=m;j&gt;=v[i];j--) </span><br><span class="line">f[j]=<span class="built_in">max</span>(f[j],f[j-v[i]]+w[i]);</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; f[m];</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"> &#125; </span><br></pre></td></tr></table></figure><h2 id="完全背包问题"><a href="#完全背包问题" class="headerlink" title="完全背包问题"></a>完全背包问题</h2><p><strong>每件物品有无限个</strong>，可以用无限次</p><p><strong>状态表示：</strong>   </p><p>​    集合：所有只考虑前i个物品，且总体积不大于j的所有选法</p><p>​    属性：Max</p><p><strong>状态计算：</strong>按第i个物品选多少个来分</p><p><img src="https://blog-1316756713.cos.ap-shanghai.myqcloud.com/img/202304071153672.webp" alt="image-20230407115308494"></p><p><img src="https://blog-1316756713.cos.ap-shanghai.myqcloud.com/img/202304071152270.webp" alt="image-20230407115256060"></p><p>合并：当k=0时，</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">f[i<span class="number">-1</span>][j-k*v[i]+k*w[i]] = f[i<span class="number">-1</span>][j]</span><br></pre></td></tr></table></figure><h3 id="三重代码"><a href="#三重代码" class="headerlink" title="三重代码"></a>三重代码</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> n,m;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N=<span class="number">1010</span>;</span><br><span class="line"><span class="type">int</span> v[N],w[N];</span><br><span class="line"><span class="type">int</span> f[N][N];</span><br><span class="line"><span class="comment">//int f[N];</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cin&gt;&gt;n&gt;&gt;m;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++) cin&gt;&gt;v[i]&gt;&gt;w[i];</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">0</span>;j&lt;=m;j++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> k=<span class="number">0</span>;k*v[i]&lt;=j;k++)&#123;</span><br><span class="line">f[i][j] = <span class="built_in">max</span>(f[i][j],f[i<span class="number">-1</span>][j-k*v[i]]+k*w[i]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125; </span><br><span class="line">cout&lt;&lt;f[n][m];</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"> &#125; </span><br></pre></td></tr></table></figure><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">f[i][j] = <span class="built_in">max</span>(f[i][j],f[i<span class="number">-1</span>][j-k*v[i]]+k*w[i]);</span><br><span class="line"><span class="comment">//上面这种包含了f[i-1][j]</span></span><br><span class="line">优化后</span><br><span class="line">f[i][j] = <span class="built_in">max</span>(f[i<span class="number">-1</span>][j],f[i][j-v]+w)</span><br><span class="line"> j 从大到小枚举</span><br><span class="line">f[j]= <span class="built_in">max</span>(f[j],f[j-v]+w)</span><br></pre></td></tr></table></figure><h3 id="二重循环-优化-j-v"><a href="#二重循环-优化-j-v" class="headerlink" title="二重循环 优化 j-v"></a>二重循环 优化 j-v</h3><p><img src="https://blog-1316756713.cos.ap-shanghai.myqcloud.com/img/202303261430438.webp" alt="image-20230326143054285"></p><p><img src="https://blog-1316756713.cos.ap-shanghai.myqcloud.com/img/202303261432921.webp" alt="image-20230326143211802"></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> n,m;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N=<span class="number">1010</span>;</span><br><span class="line"><span class="type">int</span> v[N],w[N];</span><br><span class="line"><span class="type">int</span> f[N][N];</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cin&gt;&gt;n&gt;&gt;m;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++) cin&gt;&gt;v[i]&gt;&gt;w[i];</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">0</span>;j&lt;=m;j++)</span><br><span class="line">&#123;</span><br><span class="line">f[i][j] = f[i<span class="number">-1</span>][j];</span><br><span class="line"><span class="keyword">if</span>(j&gt;=v[i]) f[i][j] = <span class="built_in">max</span>(f[i][j],f[i][j-v[i]]+w[i]);</span><br><span class="line">&#125;</span><br><span class="line">&#125; </span><br><span class="line">cout&lt;&lt;f[n][m];</span><br><span class="line"><span class="comment">//cout&lt;&lt;f[m];</span></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"> &#125; </span><br></pre></td></tr></table></figure><h3 id="一维优化-1"><a href="#一维优化-1" class="headerlink" title="一维优化"></a>一维优化</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">0</span>;j&lt;=m;j++)</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(j&gt;=v[i]) f[j] = <span class="built_in">max</span>(f[j],f[j-v[i]]+w[i]);</span><br><span class="line">&#125;</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><h3 id="和01背包的区别"><a href="#和01背包的区别" class="headerlink" title="和01背包的区别"></a>和01背包的区别</h3><p><img src="https://blog-1316756713.cos.ap-shanghai.myqcloud.com/img/202304071307738.webp" alt="image-20230407130756368"></p><h2 id="多重背包问题朴素版"><a href="#多重背包问题朴素版" class="headerlink" title="多重背包问题朴素版"></a>多重背包问题朴素版</h2><p><strong>每件物品有$s_i$个</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cin&gt;&gt;n&gt;&gt;m;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++) cin&gt;&gt;v[i]&gt;&gt;w[i]&gt;&gt;s[i];</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">0</span>;j&lt;=m;j++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> k=<span class="number">0</span>;k&lt;=s[i];k++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(k*v[i]&lt;=j) f[i][j]=<span class="built_in">max</span>(f[i][j],f[i<span class="number">-1</span>][j-v[i]*k]+w[i]*k);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"> &#125; </span><br><span class="line">cout&lt;&lt;f[n][m];</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"> &#125; </span><br></pre></td></tr></table></figure><h2 id="多重背包问题优化版"><a href="#多重背包问题优化版" class="headerlink" title="多重背包问题优化版"></a>多重背包问题优化版</h2><h3 id="分析"><a href="#分析" class="headerlink" title="分析"></a><strong>分析</strong></h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">f[i][j]=max(f[i][j],f[i-1][j-v[i]*k]+w[i]*k);</span><br><span class="line">f[i][j]=max(f[i-1][j]，f[i-1][j-v]+w，f[i-1][j-2v]+2w，···f[i-1][j-sv]+sw)</span><br><span class="line">f[i][j-v]=max(         f[i][j-v]、f[i-1][j]、f[i-1][j-2v]+w、f[i-1][j-3v]+2w、f[i-1][j-sv]+(s-1)w),f[i-1][j-(s+1)v]+sw)</span><br><span class="line">//所以不能用完全背包问题的方式来优化</span><br></pre></td></tr></table></figure><h3 id="二进制优化-nvlogs"><a href="#二进制优化-nvlogs" class="headerlink" title="二进制优化 nvlogs"></a>二进制优化 nvlogs</h3><p>把若干个第i个物品打包成几组（倍增、快速幂）</p><p>每个打包起来的数据，可以看成01背包问题</p><p><img src="https://blog-1316756713.cos.ap-shanghai.myqcloud.com/img/202304071332913.webp"></p>  <figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> n,m;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N=<span class="number">25000</span>;</span><br><span class="line"><span class="type">int</span> v[N],w[N];</span><br><span class="line"><span class="type">int</span> f[N];</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cin&gt;&gt;n&gt;&gt;m;</span><br><span class="line"><span class="type">int</span> cnt = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span>(n--)&#123;</span><br><span class="line"><span class="type">int</span> a,b,s;<span class="comment">//体积、价值和数量</span></span><br><span class="line">cin&gt;&gt;a&gt;&gt;b&gt;&gt;s;</span><br><span class="line"><span class="type">int</span> k=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span>(k&lt;=s)&#123;</span><br><span class="line">    cnt++;</span><br><span class="line">v[cnt] = k*a;</span><br><span class="line">w[cnt] = k*b;</span><br><span class="line">s -= k;   <span class="comment">//把前k个物品打包成第cnt组</span></span><br><span class="line">k *= <span class="number">2</span>;     <span class="comment">//2^k次方 </span></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(s &gt; <span class="number">0</span>)&#123;  <span class="comment">//最后剩余的数打包成一组 </span></span><br><span class="line">    cnt++;</span><br><span class="line">v[cnt] = s*a;</span><br><span class="line">w[cnt] = s*b;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">n=cnt;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++) </span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> j=m;j &gt;= v[i];j--)</span><br><span class="line">f[j] = <span class="built_in">max</span>(f[j],f[j-v[i]]+w[i]);</span><br><span class="line">&#125;</span><br><span class="line">cout&lt;&lt;f[m];</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"> &#125; </span><br></pre></td></tr></table></figure><h2 id="分组背包问题"><a href="#分组背包问题" class="headerlink" title="分组背包问题"></a>分组背包问题</h2><p>每组物品中只能选1个</p><h1 id="线性DP"><a href="#线性DP" class="headerlink" title="线性DP"></a>线性DP</h1><h2 id="数字三角形"><a href="#数字三角形" class="headerlink" title="数字三角形"></a>数字三角形</h2><h3 id="时间复杂度"><a href="#时间复杂度" class="headerlink" title="时间复杂度"></a>时间复杂度</h3><p>时间复杂度 = 状态数量*转移的计算量</p><h3 id="代码（注意初始化）"><a href="#代码（注意初始化）" class="headerlink" title="代码（注意初始化）"></a>代码（注意初始化）</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">510</span>;</span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line"><span class="type">int</span> m[N][N];</span><br><span class="line"><span class="type">int</span> f[N][N];</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> INF = <span class="number">1e8</span>;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cin&gt;&gt;n;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">1</span>;j&lt;=i;j++)&#123;</span><br><span class="line">    cin &gt;&gt; m[i][j];</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//必须从0开始初始化，把所有的f置为负无穷</span></span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i &lt;= n;i++)</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">0</span>;j &lt;= i+<span class="number">1</span>;j++)&#123;  <span class="comment">//这里要初始化i+1 //因为左右边界各出去一位</span></span><br><span class="line">    f[i][j] = -INF;</span><br><span class="line">&#125;</span><br><span class="line">f[<span class="number">1</span>][<span class="number">1</span>] = m[<span class="number">1</span>][<span class="number">1</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">2</span>;i &lt;= n;i++)</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">1</span>;j &lt;= i;j++)</span><br><span class="line">&#123;</span><br><span class="line">f[i][j] = <span class="built_in">max</span>(f[i<span class="number">-1</span>][j<span class="number">-1</span>]+ m[i][j],f[i<span class="number">-1</span>][j]+ m[i][j]);</span><br><span class="line">&#125;</span><br><span class="line">    <span class="comment">//如果输出向左和向右步数相差&lt;=1的</span></span><br><span class="line">    <span class="comment">//找规律</span></span><br><span class="line">    <span class="comment">//奇数：只能走到最中间</span></span><br><span class="line">    <span class="comment">//偶数：只能走到中间两个</span></span><br><span class="line"><span class="comment">// int cnt = -INF;    //这里也应该初始化为负数，因为最大值可以为负值</span></span><br><span class="line"><span class="comment">// for(int i=1;i&lt;=n;i++)</span></span><br><span class="line"><span class="comment">// cnt = max(cnt,f[n][i]);</span></span><br><span class="line"><span class="keyword">if</span>(n % <span class="number">2</span> ) cout&lt;&lt;f[n][n/<span class="number">2</span>+<span class="number">1</span>];</span><br><span class="line"><span class="comment">//else cout &lt;&lt; max(f[n][(n+1)/2],f[n][(n+1)/2+1]);</span></span><br><span class="line">  <span class="keyword">else</span> cout &lt;&lt; <span class="built_in">max</span>(f[n][n/<span class="number">2</span>],f[n][n/<span class="number">2</span>+<span class="number">1</span>]);</span><br><span class="line"><span class="comment">//cout&lt;&lt;cnt;</span></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><h3 id="找中位数"><a href="#找中位数" class="headerlink" title="找中位数"></a>找中位数</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">下标从<span class="number">1</span>开始</span><br><span class="line">奇数： n/<span class="number">2</span>+<span class="number">1</span></span><br><span class="line">偶数    n/<span class="number">2</span>和 n/<span class="number">2</span>+<span class="number">1</span></span><br></pre></td></tr></table></figure><h2 id="最长上升子序列"><a href="#最长上升子序列" class="headerlink" title="最长上升子序列"></a>最长上升子序列</h2><p>以$a_j$和$a_i$结尾的子序列,a[j]&lt;a[i]</p><p>时间复杂度O($n^2$)</p><p>分类依据：倒数第2个数是哪个数 </p><p><img src="https://blog-1316756713.cos.ap-shanghai.myqcloud.com/img/202304071538235.webp" alt="image-20230407153844970"></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> n;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">1010</span>;</span><br><span class="line"><span class="type">int</span> a[N];</span><br><span class="line"><span class="type">int</span> f[N];</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    <span class="type">int</span> res = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i ++ )&#123;</span><br><span class="line">        cin &gt;&gt; a[i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        f[i] = <span class="number">1</span>; <span class="comment">//只有一个数字  ,f[i]初始化为1，表示有i这个数字，不是初始化f[1]</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">1</span>;j &lt; i;j++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(a[j] &lt; a[i]) f[i] = <span class="built_in">max</span>(f[i],f[j]+<span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i ++ )&#123;</span><br><span class="line">        res = <span class="built_in">max</span>(res,f[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; res;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="最长上升子序列优化-贪心"><a href="#最长上升子序列优化-贪心" class="headerlink" title="最长上升子序列优化(贪心)"></a>最长上升子序列优化(贪心)</h2><p>长度越长的话，结尾的值越小</p><p>长度是6的结尾最小值一定比长度是5的结尾最小值大</p><p>求以$a_i$结尾的长度：接到最大的小于$a_i$的数字 </p><p><img src="https://blog-1316756713.cos.ap-shanghai.myqcloud.com/img/202304071623922.webp" alt="image-20230407162351724"></p><p>找到最大能接到哪个序列后面，O(logn)</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="最长公共子序列"><a href="#最长公共子序列" class="headerlink" title="最长公共子序列"></a>最长公共子序列</h2><p><img src="https://blog-1316756713.cos.ap-shanghai.myqcloud.com/img/202303271620154.webp" alt="image-20230327162012854"></p><p><img src="https://blog-1316756713.cos.ap-shanghai.myqcloud.com/img/202303272334260.webp" alt="image-20230327233419007"></p><h1 id="区间DP"><a href="#区间DP" class="headerlink" title="区间DP"></a>区间DP</h1><h1 id="计数类DP"><a href="#计数类DP" class="headerlink" title="计数类DP"></a>计数类DP</h1><h1 id="数位统计DP"><a href="#数位统计DP" class="headerlink" title="数位统计DP"></a>数位统计DP</h1><h2 id="ACW338计数问题"><a href="#ACW338计数问题" class="headerlink" title="ACW338计数问题"></a>ACW338计数问题</h2><p><img src="https://blog-1316756713.cos.ap-shanghai.myqcloud.com/img/202303281319437.webp" alt="image-20230328131927255"></p><p><strong>分情况讨论：</strong></p><p><img src="https://blog-1316756713.cos.ap-shanghai.myqcloud.com/img/202303281318696.webp" alt="image-20230328131844490"></p><p>边界问题：</p><ol><li>当枚举的情况出现在最高位的时候，第1种情况不存在</li><li></li></ol><h1 id="树状DP"><a href="#树状DP" class="headerlink" title="树状DP"></a>树状DP</h1><h2 id="没有上司的舞会"><a href="#没有上司的舞会" class="headerlink" title="没有上司的舞会"></a>没有上司的舞会</h2><h3 id="分析-1"><a href="#分析-1" class="headerlink" title="分析"></a>分析</h3><h3 id="树的表示方法邻接表"><a href="#树的表示方法邻接表" class="headerlink" title="树的表示方法邻接表"></a>树的表示方法邻接表</h3><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">6010</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line"><span class="type">int</span> h[N], e[N], ne[N], idx;</span><br><span class="line"><span class="type">int</span> happy[N];</span><br><span class="line"><span class="type">int</span> f[N][<span class="number">2</span>];</span><br><span class="line"><span class="type">bool</span> has_fa[N]; <span class="comment">//求根节点，判断是否有父节点，没有父节点的就是根节点</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">add</span><span class="params">(<span class="type">int</span> a, <span class="type">int</span> b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    e[idx] = b, ne[idx] = h[a], h[a] = idx ++ ;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">dfs</span><span class="params">(<span class="type">int</span> u)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    f[u][<span class="number">1</span>] = happy[u];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = h[u]; ~i; i = ne[i])</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> j = e[i];  <span class="comment">//u的每一个儿子</span></span><br><span class="line">        <span class="built_in">dfs</span>(j);</span><br><span class="line"></span><br><span class="line">        f[u][<span class="number">1</span>] += f[j][<span class="number">0</span>];</span><br><span class="line">        f[u][<span class="number">0</span>] += <span class="built_in">max</span>(f[j][<span class="number">0</span>], f[j][<span class="number">1</span>]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i ++ ) <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;happy[i]);</span><br><span class="line"></span><br><span class="line">    <span class="built_in">memset</span>(h, <span class="number">-1</span>, <span class="keyword">sizeof</span> h);<span class="comment">//初始化邻接表的表头</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n - <span class="number">1</span>; i ++ ) <span class="comment">//读入每一条边，一共n-1条边</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> a, b;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>, &amp;a, &amp;b);  <span class="comment">//b是a的父节点</span></span><br><span class="line">        <span class="built_in">add</span>(b, a);    <span class="comment">//在邻接表仲插入1条边</span></span><br><span class="line">        has_fa[a] = <span class="literal">true</span>;  <span class="comment">//所以a有父节点</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> root = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span> (has_fa[root]) root ++ ;  <span class="comment">//求根节点，当没有父节点的时候终止循环</span></span><br><span class="line"></span><br><span class="line">    <span class="built_in">dfs</span>(root);</span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, <span class="built_in">max</span>(f[root][<span class="number">0</span>], f[root][<span class="number">1</span>]));</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="状态压缩DP（还没学）"><a href="#状态压缩DP（还没学）" class="headerlink" title="状态压缩DP（还没学）"></a>状态压缩DP（还没学）</h1><h1 id="记忆化搜索"><a href="#记忆化搜索" class="headerlink" title="记忆化搜索"></a>记忆化搜索</h1><p>代码复杂度低</p><h2 id="滑雪"><a href="#滑雪" class="headerlink" title="滑雪"></a>滑雪</h2><h3 id="分析-2"><a href="#分析-2" class="headerlink" title="分析"></a>分析</h3><p><img src="/.top//Users\cjy\AppData\Roaming\Typora\typora-user-images\image-20230328163821697.png" alt="image-20230328163821697"></p><h3 id="代码表示"><a href="#代码表示" class="headerlink" title="代码表示"></a>代码表示</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
          <category> 蓝桥杯 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> DP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>前缀和</title>
      <link href="/posts/8628805/"/>
      <url>/posts/8628805/</url>
      
        <content type="html"><![CDATA[<h1 id="一维前缀和模板"><a href="#一维前缀和模板" class="headerlink" title="一维前缀和模板"></a>一维前缀和模板</h1><p>$$<br>a_L+a_{L+1}+···+a_R = S_R+S_{L-1}<br>$$</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> n,m;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">100010</span>;</span><br><span class="line"><span class="type">int</span> a[N],s[N];</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    cin &gt;&gt; n &gt;&gt; m;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i ++ )</span><br><span class="line">    &#123;</span><br><span class="line">        cin &gt;&gt; a[i];</span><br><span class="line">        s[i] = s[i<span class="number">-1</span>] + a[i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span> (m -- )</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> l , r;</span><br><span class="line">        cin &gt;&gt; l &gt;&gt; r;</span><br><span class="line">        cout &lt;&lt; s[r] - s[l<span class="number">-1</span>] &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="二维前缀和模板"><a href="#二维前缀和模板" class="headerlink" title="二维前缀和模板"></a>二维前缀和模板</h1><p>分析：</p><ol><li><p>求前缀和数组</p><p><img src="https://blog-1316756713.cos.ap-shanghai.myqcloud.com/img/202303271221140.webp" alt="image-20230327122115957"></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">s[i][j] = s[i][j<span class="number">-1</span>]+s[i<span class="number">-1</span>][j]-s[i<span class="number">-1</span>][j<span class="number">-1</span>]+a[i][j];</span><br></pre></td></tr></table></figure></li><li><p>子矩阵的和（利用前缀和数组，但求得是原数组的）</p><p><img src="https://blog-1316756713.cos.ap-shanghai.myqcloud.com/img/202303271225187.webp" alt="image-20230327122532996"></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">s[x2][y2] - s[x1<span class="number">-1</span>][y2]-s[x2][y1<span class="number">-1</span>]+s[x1<span class="number">-1</span>][y1<span class="number">-1</span>]</span><br></pre></td></tr></table></figure></li></ol><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">1010</span>;</span><br><span class="line"><span class="type">int</span> n , m , q;</span><br><span class="line"><span class="type">int</span> a[N][N];<span class="comment">//原矩阵</span></span><br><span class="line"><span class="type">int</span> s[N][N];<span class="comment">//前缀和矩阵 </span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cin &gt;&gt; n &gt;&gt; m &gt;&gt; q;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i =<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> j =<span class="number">1</span>;j&lt;=m;j++)</span><br><span class="line">cin &gt;&gt; a[i][j];</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i =<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> j =<span class="number">1</span>;j&lt;=m;j++)&#123;</span><br><span class="line">s[i][j] = s[i][j<span class="number">-1</span>]+s[i<span class="number">-1</span>][j]-s[i<span class="number">-1</span>][j<span class="number">-1</span>]+a[i][j];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span>(q--)</span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> x1,y1,x2,y2;</span><br><span class="line">cin &gt;&gt; x1 &gt;&gt; y1 &gt;&gt; x2 &gt;&gt; y2;</span><br><span class="line"><span class="type">int</span> res = s[x2][y2] - s[x1<span class="number">-1</span>][y2]-s[x2][y1<span class="number">-1</span>]+s[x1<span class="number">-1</span>][y1<span class="number">-1</span>];</span><br><span class="line">cout &lt;&lt; res &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><h1 id="例题"><a href="#例题" class="headerlink" title="例题"></a>例题</h1><h2 id="AcWing99-激光炸弹"><a href="#AcWing99-激光炸弹" class="headerlink" title="AcWing99 激光炸弹"></a>AcWing99 激光炸弹</h2><a class="btn-beautify outline blue larger" href="https://www.acwing.com/problem/content/101/" title="原题链接"><i class="far fa-hand-point-right"></i><span>原题链接</span></a><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br></pre></td><td class="code"><pre><span class="line">```</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># 一维差分</span><br><span class="line"></span><br><span class="line">前缀和的逆运算</span><br><span class="line"></span><br><span class="line">有一个a数组，$a_1 , a_2 , a_3···，a_n$</span><br><span class="line"></span><br><span class="line">构造一个b数组，$b_1,b_2,b_3···，b_n$</span><br><span class="line"></span><br><span class="line">使得 $a_i=b_1+b_2+b_3+···+b_i$</span><br><span class="line"></span><br><span class="line">此时，a成为b的前缀和，b称为a的差分</span><br><span class="line"></span><br><span class="line">**作用：**如果有b数组，就可以用$<span class="built_in">O</span>(n)$的时间得到a数组</span><br><span class="line"></span><br><span class="line">[l,r]+c 即 $a_l+c,a+&#123;l+<span class="number">1</span>&#125;+c,···,a_r+c$,如果用常规循环来做，是<span class="built_in">O</span>(n)的时间复杂度，用差分只需要改变<span class="number">2</span>个数，是<span class="built_in">O</span>(<span class="number">1</span>)的时间复杂度</span><br><span class="line"></span><br><span class="line">处理方式：令$b_l+c,b_&#123;r+<span class="number">1</span>&#125;-c$</span><br><span class="line"></span><br><span class="line">![image<span class="number">-20230406001457882</span>](https:<span class="comment">//blog-1316756713.cos.ap-shanghai.myqcloud.com/img/202304060014019.webp)</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">**一维构造方式：**</span><br><span class="line"></span><br><span class="line">$b_1 = a_1$</span><br><span class="line"></span><br><span class="line">$b_2=a_2-a_1$</span><br><span class="line"></span><br><span class="line">$b_3=a_3-a_2$</span><br><span class="line"></span><br><span class="line">$b_n=a_n-a_&#123;n<span class="number">-1</span>&#125;$</span><br><span class="line"></span><br><span class="line">```c++</span><br><span class="line"><span class="type">int</span> a[N];<span class="comment">//原数组</span></span><br><span class="line"><span class="type">int</span> b[N];<span class="comment">//差分数组</span></span><br><span class="line"><span class="type">int</span> son[N][<span class="number">26</span>], cnt[N], idx;</span><br><span class="line"><span class="type">void</span> <span class="built_in">insert</span>(<span class="type">int</span> l,<span class="type">int</span> r,<span class="type">int</span> c)</span><br><span class="line">&#123;</span><br><span class="line">    b[l] += c;</span><br><span class="line">    b[r+<span class="number">1</span>] -= c;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="built_in">main</span>()</span><br><span class="line">&#123;</span><br><span class="line">    cin &gt;&gt; n &gt;&gt; m;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i ++ ) cin &gt;&gt; a[i];</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i ++ ) <span class="built_in">insert</span>(i,i,a[i]);<span class="comment">//构建原始差分数组</span></span><br><span class="line">    <span class="comment">//for (int i = 1; i &lt;= n; i++)</span></span><br><span class="line">    <span class="comment">//&#123;</span></span><br><span class="line">    <span class="comment">//    scanf(&quot;%d&quot;, &amp;a[i]);</span></span><br><span class="line">    <span class="comment">//    b[i] = a[i] - a[i - 1];      //构建差分数组</span></span><br><span class="line">    <span class="comment">//&#125;</span></span><br><span class="line">    <span class="keyword">while</span> (m -- )</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> l,r,c;</span><br><span class="line">        cin &gt;&gt; l &gt;&gt; r &gt;&gt; c;</span><br><span class="line">        <span class="built_in">insert</span>(l,r,c);</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i ++ )  b[i]+=b[i<span class="number">-1</span>]; <span class="comment">//前缀和计算</span></span><br><span class="line">     <span class="comment">//调用a[3]=b[3]+b[2]+b[1];这种前缀和运算。</span></span><br><span class="line">    <span class="comment">//for (int i = 1; i &lt;= n; i++)</span></span><br><span class="line">    <span class="comment">//&#123;</span></span><br><span class="line">    <span class="comment">//    a[i] = b[i] + a[i - 1];    //前缀和运算</span></span><br><span class="line">    <span class="comment">//    printf(&quot;%d &quot;, a[i]);</span></span><br><span class="line">    <span class="comment">//&#125;</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i ++ )  cout&lt;&lt;b[i]&lt;&lt;<span class="string">&quot; &quot;</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="二维差分"><a href="#二维差分" class="headerlink" title="二维差分"></a>二维差分</h1><p>原矩阵$a_ij$是差分矩阵$b_ij$的前缀和 </p><p><img src="https://blog-1316756713.cos.ap-shanghai.myqcloud.com/img/202304060122221.webp" alt="image-20230406012225010"></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> a[N][N];<span class="comment">//原数组</span></span><br><span class="line"><span class="type">int</span> b[N][N];<span class="comment">//差分数组</span></span><br><span class="line"><span class="type">int</span> s[N][N];<span class="comment">//前缀和数组</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">insert</span><span class="params">(<span class="type">int</span> x1,<span class="type">int</span> y1,<span class="type">int</span> x2,<span class="type">int</span> y2,<span class="type">int</span> c)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    b[x1][y1] += c;</span><br><span class="line">    b[x2+<span class="number">1</span>][y1] -= c;</span><br><span class="line">    b[x1][y2+<span class="number">1</span>] -= c;</span><br><span class="line">    b[x2+<span class="number">1</span>][y2+<span class="number">1</span>] += c;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    cin &gt;&gt; n &gt;&gt; m &gt;&gt; q;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i ++ )&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">1</span>; j &lt;= m; j ++ )&#123;</span><br><span class="line">            cin &gt;&gt; a[i][j];</span><br><span class="line">            <span class="built_in">insert</span>(i,j,i,j,a[i][j]); <span class="comment">//初始化差分矩阵</span></span><br><span class="line">            <span class="comment">//把a[N][N]都看成0，则b[N][N]也都是0</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(q--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> x1,y1,x2,y2,c;</span><br><span class="line">        cin&gt;&gt;x1&gt;&gt;y1&gt;&gt;x2&gt;&gt;y2&gt;&gt;c;</span><br><span class="line">        <span class="built_in">insert</span>(x1,y1,x2,y2,c);  </span><br><span class="line">    &#125;<span class="comment">//求差分数组</span></span><br><span class="line">    <span class="comment">//求前缀和数组</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i ++ )&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">1</span>; j &lt;= m; j ++ )&#123;</span><br><span class="line">            <span class="comment">//s[i][j] = b[i][j]+s[i-1][j]+s[i][j-1]-s[i-1][j-1];</span></span><br><span class="line">            b[i][j] += b[i<span class="number">-1</span>][j]+b[i][j<span class="number">-1</span>]-b[i<span class="number">-1</span>][j<span class="number">-1</span>];</span><br><span class="line">            </span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i ++ )&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">1</span>; j &lt;= m; j ++ )&#123;</span><br><span class="line">            <span class="comment">//cout&lt;&lt;s[i][j]&lt;&lt;&quot; &quot;;</span></span><br><span class="line">            cout&lt;&lt;b[i][j]&lt;&lt;<span class="string">&quot; &quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">puts</span>(<span class="string">&quot;&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
          <category> 蓝桥杯 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 前缀和 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>二分</title>
      <link href="/posts/9947c71c/"/>
      <url>/posts/9947c71c/</url>
      
        <content type="html"><![CDATA[<h1 id="二分"><a href="#二分" class="headerlink" title="二分"></a>二分</h1><p><strong>二分思想：</strong></p><ol><li>确定一个区间，使得目标值一定在区间中</li><li>找一个性质，满足2点：这个性质具有二段性；答案是二段性的分界点</li></ol><p><strong>整数二分</strong>：</p><ol><li>左边区间的右端点：将[L,R]分成[L,M-1]和[M,R]。如果中点满足左边性质，说明ans在[M,R]，否则在[L,M-1]</li></ol><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">while</span>(L&lt;R)</span><br><span class="line">&#123;</span><br><span class="line">    M=(L+R+<span class="number">1</span>)/<span class="number">2</span>   <span class="comment">//因为是下取整</span></span><br><span class="line">    <span class="keyword">if</span>( M左半边)  L=M</span><br><span class="line">    <span class="keyword">else</span>  R=M<span class="number">-1</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>解释：如果L=R-1，那么M=-1会出现死循环</p><p>看<strong>L=M</strong>区分</p><ol start="2"><li>右边区间的左端点：将[L,R]分成[L,M]和[M+1,R]。如果中点满足右边性质，说明ans在[L,M]，否则在[M+1,R]</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">while(L&lt;R)</span><br><span class="line">&#123;</span><br><span class="line">    M=(L+R)/2   </span><br><span class="line">    if( M左半边)  R=M</span><br><span class="line">    else  L=M+1</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>解释：如果L=R-1，那么M=L，不会出现死循环</p><p>看<strong>R=M</strong>区分</p><p><strong>整数二分步骤</strong>：</p><p><img src="https://blog-1316756713.cos.ap-shanghai.myqcloud.com/img/202303241448932.webp" alt="image-20230324144828602"></p><h1 id="整数二分"><a href="#整数二分" class="headerlink" title="整数二分"></a>整数二分</h1><p><strong>ACWING 789 数的范围</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//升序排列的数组</span></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">100010</span>;</span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line"><span class="type">int</span> q;<span class="comment">//询问个数</span></span><br><span class="line"><span class="type">int</span> k;</span><br><span class="line"><span class="type">int</span> a[N];</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d %d&quot;</span>,&amp;n,&amp;q);</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++) <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;a[i]);</span><br><span class="line"><span class="keyword">while</span>(q--)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;k);</span><br><span class="line"><span class="type">int</span> l =<span class="number">0</span>,r=n<span class="number">-1</span>;</span><br><span class="line">        <span class="comment">//左边界</span></span><br><span class="line"><span class="keyword">while</span>(l &lt; r)</span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> mid = l+r&gt;&gt;<span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span>(a[mid] &gt;= k) r = mid;</span><br><span class="line"><span class="keyword">else</span> l =mid+<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(a[l]==k) <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>,l); </span><br><span class="line"><span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">&quot;-1 &quot;</span>);</span><br><span class="line">r = n<span class="number">-1</span>;、</span><br><span class="line">                <span class="comment">//右边界</span></span><br><span class="line"><span class="keyword">while</span>(l &lt; r)</span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> mid = l+r+<span class="number">1</span>&gt;&gt;<span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span>(a[mid] &lt;= k) l = mid;</span><br><span class="line"><span class="keyword">else</span> r =mid<span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(a[l]==k) <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>,l); </span><br><span class="line"><span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">&quot;-1&quot;</span>);</span><br><span class="line"><span class="built_in">puts</span>(<span class="string">&quot;&quot;</span>);  </span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"> &#125; </span><br></pre></td></tr></table></figure><h1 id="实数二分"><a href="#实数二分" class="headerlink" title="实数二分"></a>实数二分</h1><div class="tabs" id="test4"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#test4-1">实数二分</button></li><li class="tab"><button type="button" data-href="#test4-2">STL函数开3次方根</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="test4-1"><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">double</span> n;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%lf&quot;</span>,&amp;n);</span><br><span class="line">    <span class="type">double</span> l = <span class="number">-10000</span> , r = <span class="number">10000</span>;</span><br><span class="line">    <span class="keyword">while</span>(r-l &gt; (<span class="number">1e-7</span>))  <span class="comment">//6位小数的话，这里不能是1e-6，可以是-7，-8</span></span><br><span class="line">    &#123;</span><br><span class="line">    <span class="type">double</span> mid = (l+r)/<span class="number">2</span>;  <span class="comment">//这里必须加括号 </span></span><br><span class="line">    <span class="keyword">if</span>(mid*mid*mid &gt;= n) r = mid;</span><br><span class="line"><span class="keyword">else</span> l =mid;</span><br><span class="line"> </span><br><span class="line">&#125;</span><br><span class="line">    <span class="comment">//printf(&quot;%.4lf&quot;,l); //4位小数 </span></span><br><span class="line">    <span class="comment">//printf(&quot;%.6lf&quot;,l); //6位小数 </span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%lf&quot;</span>,l); <span class="comment">//6位小数 </span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test4-2"><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">double</span> n;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%lf&quot;</span>,&amp;n);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%lf&quot;</span>,<span class="built_in">cbrt</span>(n));</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h1 id="例题"><a href="#例题" class="headerlink" title="例题"></a>例题</h1><h2 id="Acwing-730-机器人跳跃问题"><a href="#Acwing-730-机器人跳跃问题" class="headerlink" title="Acwing 730 机器人跳跃问题"></a>Acwing 730 机器人跳跃问题</h2><a class="btn-beautify outline blue larger" href="https://www.acwing.com/problem/content/1218/" title="原题链接"><i class="far fa-hand-point-right"></i><span>原题链接</span></a><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="四方平和"><a href="#四方平和" class="headerlink" title="四方平和"></a>四方平和</h2><h3 id="暴力-87-5"><a href="#暴力-87-5" class="headerlink" title="暴力 87.5%"></a>暴力 87.5%</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//错误代码</span></span><br><span class="line"><span class="type">int</span> flag =<span class="number">0</span>; </span><br><span class="line"><span class="type">int</span> tmp = <span class="built_in">sqrt</span>(n)+<span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> a=<span class="number">0</span>;a&lt;=tmp;a++)&#123;</span><br><span class="line"><span class="keyword">if</span>(a*a &gt; n) <span class="keyword">break</span>; </span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> b=<span class="number">0</span>;b&lt;=tmp;b++)&#123;</span><br><span class="line"><span class="keyword">if</span>(a*a+b*b&gt;n) <span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> c=<span class="number">0</span>;c&lt;=tmp;c++)&#123;</span><br><span class="line"><span class="keyword">if</span>(a*a+b*b+c*c&gt;n) <span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> d=<span class="number">0</span>;d&lt;=tmp;d++)&#123;</span><br><span class="line"><span class="keyword">if</span>(a*a+b*b+c*c+d*d==n)&#123;</span><br><span class="line">flag = <span class="number">1</span>;</span><br><span class="line">cout &lt;&lt; a &lt;&lt; <span class="string">&#x27; &#x27;</span> &lt;&lt; b &lt;&lt; <span class="string">&#x27; &#x27;</span> &lt;&lt; c &lt;&lt; <span class="string">&#x27; &#x27;</span> &lt;&lt; d &lt;&lt; endl;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://blog-1316756713.cos.ap-shanghai.myqcloud.com/img/202304070149032.webp" alt="image-20230407014956882"></p><p>会输出很多组数据,多层循环中,break语句只向外跳出一层循环(while和for)</p><p>区别:break用来结束所有循环,continue用来结束本次循环,如果条件成立,执行下一次循环</p><p>正确代码为:依次跳出每一层循环</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> flag =<span class="number">0</span>; </span><br><span class="line"><span class="type">int</span> tmp = <span class="built_in">sqrt</span>(n)+<span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> a=<span class="number">0</span>;a&lt;=tmp;a++)&#123;</span><br><span class="line"><span class="keyword">if</span>(a*a &gt; n) <span class="keyword">break</span>; </span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> b=<span class="number">0</span>;b&lt;=tmp;b++)&#123;</span><br><span class="line"><span class="keyword">if</span>(a*a+b*b&gt;n) <span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> c=<span class="number">0</span>;c&lt;=tmp;c++)&#123;</span><br><span class="line"><span class="keyword">if</span>(a*a+b*b+c*c&gt;n) <span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> d=<span class="number">0</span>;d&lt;=tmp;d++)&#123;</span><br><span class="line"><span class="keyword">if</span>(a*a+b*b+c*c+d*d==n)&#123;</span><br><span class="line">flag = <span class="number">1</span>;</span><br><span class="line">cout &lt;&lt; a &lt;&lt; <span class="string">&#x27; &#x27;</span> &lt;&lt; b &lt;&lt; <span class="string">&#x27; &#x27;</span> &lt;&lt; c &lt;&lt; <span class="string">&#x27; &#x27;</span> &lt;&lt; d &lt;&lt; endl;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(flag) <span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(flag) <span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(flag) <span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://blog-1316756713.cos.ap-shanghai.myqcloud.com/img/202304070215404.webp" alt="image-20230407021545256"></p><h3 id="二分-1"><a href="#二分-1" class="headerlink" title="二分"></a>二分</h3><p><img src="https://blog-1316756713.cos.ap-shanghai.myqcloud.com/img/202304070204281.webp" alt="image-20230407020401031"></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="技巧"><a href="#技巧" class="headerlink" title="技巧"></a>技巧</h2><p>判断一个数是否在前面出现过</p><ol><li>哈希O(1)</li><li>二分O(logn)</li></ol><h2 id="字典序最小的解"><a href="#字典序最小的解" class="headerlink" title="字典序最小的解"></a>字典序最小的解</h2>]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
          <category> 蓝桥杯 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 二分 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>STL专题</title>
      <link href="/posts/3950f115/"/>
      <url>/posts/3950f115/</url>
      
        <content type="html"><![CDATA[<h1 id="pair"><a href="#pair" class="headerlink" title="pair"></a>pair</h1><h2 id="构造"><a href="#构造" class="headerlink" title="构造"></a>构造</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> first x</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> second y</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> pair&lt;<span class="type">int</span>, <span class="type">int</span>&gt; PII;</span><br><span class="line">PII start;  <span class="comment">//定义pair类型的变量start</span></span><br><span class="line">start = &#123;x,y&#125;; <span class="comment">//赋值</span></span><br><span class="line"><span class="comment">//1. 使用默认构造函数</span></span><br><span class="line">PII p1;</span><br><span class="line"><span class="comment">//2. 用给定值初始化</span></span><br><span class="line"><span class="function">PII <span class="title">p2</span><span class="params">(<span class="number">1</span>,<span class="number">2</span>)</span></span>;</span><br><span class="line"><span class="function">pair&lt;<span class="type">int</span>, <span class="type">double</span>&gt; <span class="title">p2</span><span class="params">(<span class="number">1</span>,<span class="number">2.4</span>)</span></span>;</span><br></pre></td></tr></table></figure><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">auto</span> t = q.<span class="built_in">front</span>();</span><br><span class="line">q.<span class="built_in">push</span>(x,y);</span><br></pre></td></tr></table></figure><h2 id="赋值"><a href="#赋值" class="headerlink" title="赋值"></a>赋值</h2><ol><li><p>利用make_pair</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">PII p1;</span><br><span class="line">p1 = <span class="built_in">make_pair</span>(<span class="number">1</span>,<span class="number">2</span>);</span><br></pre></td></tr></table></figure></li><li><p>变量间赋值</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">PII <span class="title">p1</span><span class="params">(<span class="number">1</span>,<span class="number">1</span>)</span></span>;</span><br><span class="line">PII p2 = p1;</span><br></pre></td></tr></table></figure></li></ol><h2 id="比较"><a href="#比较" class="headerlink" title="比较"></a>比较</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sort</span>(); <span class="comment">//默认对first升序，当first相同时对second升序</span></span><br><span class="line"><span class="built_in">swap</span>();<span class="comment">//2个pair对象的键和值的类型要相同</span></span><br><span class="line"><span class="comment">//单个值不能直接比较，需要使用make_pair</span></span><br><span class="line"><span class="built_in">make_pair</span>(x,y);</span><br></pre></td></tr></table></figure><p><strong>pair的特殊比较：</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">cmp</span><span class="params">(PII a , PII b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(a.x != b.x) <span class="keyword">return</span> a.x &gt; b.x;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">return</span> a.y&lt;b.second;</span><br><span class="line">&#125;</span><br><span class="line">PII p[N];</span><br><span class="line">p[i] = <span class="built_in">make_pair</span>(a,b);</span><br><span class="line"><span class="built_in">sort</span>(p,p+n,cmp);</span><br></pre></td></tr></table></figure><h2 id="例题"><a href="#例题" class="headerlink" title="例题"></a>例题</h2><p>125奶牛</p><h1 id="数组操作"><a href="#数组操作" class="headerlink" title="数组操作"></a>数组操作</h1><h2 id="复制重置操作"><a href="#复制重置操作" class="headerlink" title="复制重置操作"></a>复制重置操作</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">memset</span>(backup , <span class="number">0</span> , <span class="keyword">sizeof</span> backup)  <span class="comment">//将backup数组的每一位都置为0</span></span><br><span class="line"><span class="built_in">memcpy</span>(backup , st , <span class="keyword">sizeof</span> st)        <span class="comment">//复制st数组给backup数组，从st开始的一段复制给backup</span></span><br></pre></td></tr></table></figure><h1 id="平方开方"><a href="#平方开方" class="headerlink" title="平方开方"></a>平方开方</h1><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="comment">//平方 pow()</span></span><br><span class="line"><span class="type">int</span> a = <span class="built_in">pow</span>(<span class="number">4</span>,<span class="number">2</span>);<span class="comment">// 4的平方=16</span></span><br><span class="line">a = <span class="built_in">pow</span>(<span class="number">4</span>,x); <span class="comment">//x次幂</span></span><br><span class="line"><span class="comment">//开方</span></span><br><span class="line"><span class="type">int</span> b = <span class="built_in">pow</span>(<span class="number">4</span>,<span class="number">0.5</span>);<span class="comment">// 4的平方根=2</span></span><br><span class="line"><span class="type">int</span> c = <span class="built_in">sqrt</span>(<span class="number">4</span>);<span class="comment">// 4的平方根=2</span></span><br><span class="line"><span class="comment">//3次方根</span></span><br><span class="line"><span class="type">double</span> x = <span class="built_in">cbrt</span>(n);</span><br><span class="line"><span class="comment">//整数绝对值</span></span><br><span class="line"><span class="type">int</span> c = <span class="built_in">abs</span>(b-c);</span><br><span class="line"><span class="comment">//浮点数绝对值</span></span><br><span class="line"><span class="type">double</span> d = <span class="built_in">fabs</span>(b-c);</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="哈希表unordered-map"><a href="#哈希表unordered-map" class="headerlink" title="哈希表unordered_map"></a>哈希表unordered_map</h1><h1 id="字符串读入"><a href="#字符串读入" class="headerlink" title="字符串读入"></a>字符串读入</h1><p>例如读入 1 2 3 4 x 5 6 7 8 9 为string</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">string state;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;<span class="number">9</span>;i++)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">char</span> c;</span><br><span class="line">    cin &gt;&gt; c;</span><br><span class="line">    state += c</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
          <category> 蓝桥杯 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> STL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>递归</title>
      <link href="/posts/c6654282/"/>
      <url>/posts/c6654282/</url>
      
        <content type="html"><![CDATA[<p>递归思路：把一个大问题分为若干个子问题</p><h1 id="指数型枚举"><a href="#指数型枚举" class="headerlink" title="指数型枚举"></a>指数型枚举</h1><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">16</span>;</span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">int</span> st[N];</span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line">vector&lt;vector&lt;<span class="type">int</span>&gt;&gt; ways;<span class="comment">//记录路径</span></span><br><span class="line"><span class="type">int</span> cnt = <span class="number">1</span>;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">dfs</span><span class="params">(<span class="type">int</span> u)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(u &gt; n)&#123;</span><br><span class="line">vector&lt;<span class="type">int</span>&gt; way; <span class="comment">//记录当前路径 </span></span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>;i &lt;= n;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(st[i] == <span class="number">1</span>)<span class="comment">//一定要写成==1，因为不选时为2，不能只判断不为0</span></span><br><span class="line">&#123;</span><br><span class="line">way.<span class="built_in">push_back</span>(i);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">ways.<span class="built_in">push_back</span>(way); </span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line">st[u] = <span class="number">1</span>; <span class="comment">//选</span></span><br><span class="line"><span class="built_in">dfs</span>(u+<span class="number">1</span>);</span><br><span class="line">st[u] = <span class="number">0</span>; <span class="comment">//恢复现场 </span></span><br><span class="line"></span><br><span class="line">st[u] = <span class="number">2</span>; <span class="comment">//不选</span></span><br><span class="line"><span class="built_in">dfs</span>(u+<span class="number">1</span>);</span><br><span class="line">st[u] = <span class="number">0</span>; <span class="comment">//恢复现场 </span></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n);</span><br><span class="line"><span class="built_in">dfs</span>(<span class="number">1</span>);</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>;i &lt; ways.<span class="built_in">size</span>();i++)&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> j= <span class="number">0</span>;j &lt; ways[i].<span class="built_in">size</span>();j++)&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>,ways[i][j]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">puts</span>(<span class="string">&quot;&quot;</span>);<span class="comment">//输入回车 </span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="排列型枚举（全排列）"><a href="#排列型枚举（全排列）" class="headerlink" title="排列型枚举（全排列）"></a>排列型枚举（全排列）</h1><div class="tabs" id="test4"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#test4-1">递归</button></li><li class="tab"><button type="button" data-href="#test4-2">单个数字全排列STL</button></li><li class="tab"><button type="button" data-href="#test4-3">字符串全排列STL</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="test4-1"><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">10</span>;</span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line"><span class="type">int</span> way[N];<span class="comment">//位置i上对应的的数字</span></span><br><span class="line"><span class="type">bool</span> used[N]; <span class="comment">//数字i是否被使用过</span></span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">dfs</span><span class="params">(<span class="type">int</span> u)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(u &gt; n)&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i =<span class="number">1</span> ;i&lt;=n;i++ )&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>,way[i]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">puts</span>(<span class="string">&quot;&quot;</span>);</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i =<span class="number">1</span> ;i&lt;=n;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(!used[i])&#123;       <span class="comment">//i这个数字未被使用过</span></span><br><span class="line">way[u] = i;</span><br><span class="line">used[i] = <span class="literal">true</span>;</span><br><span class="line"><span class="built_in">dfs</span>(u+<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">way[u] = <span class="number">0</span>;    <span class="comment">//恢复现场</span></span><br><span class="line">used[i] = <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n);</span><br><span class="line"><span class="built_in">dfs</span>(<span class="number">1</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test4-2"><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">11</span>;</span><br><span class="line"><span class="type">int</span> num[N];</span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n);</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i= <span class="number">1</span>;i &lt;= n;i++) num[i] = i;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test4-3"><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h1 id="组合型枚举"><a href="#组合型枚举" class="headerlink" title="组合型枚举"></a>组合型枚举</h1><p>n个数中取m个，字典序排序</p><ol><li>开一个数组记录方案way[N]</li><li>记录下当前位置</li><li>记录从哪个数字开始枚举</li><li>剪枝：假设正在选第u个数，则已经选了u-1个数，此时如果把从start到n都选上都不够m个数据，则无解。u-1+n-start+1&lt;m 即为 u+n-start&lt;m</li></ol><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> n; <span class="comment">//n个数里面取m个 </span></span><br><span class="line"><span class="type">int</span> m;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N=<span class="number">25</span>;</span><br><span class="line"><span class="type">int</span> ways[N]; <span class="comment">//记录当前的方案 </span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">dfs</span><span class="params">(<span class="type">int</span> u ,<span class="type">int</span> start)</span></span>&#123;</span><br><span class="line"><span class="comment">//剪枝:如果把后面的数都选上，都不够m个，当前分支就一定无解</span></span><br><span class="line">    <span class="comment">//if(u + n -start &lt; m) return;</span></span><br><span class="line"><span class="keyword">if</span>(u &gt; m)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i =<span class="number">1</span>;i&lt;=m;i++) <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>,ways[i]);</span><br><span class="line"><span class="built_in">puts</span>(<span class="string">&quot;&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i =start;i&lt;=n;i++)&#123;</span><br><span class="line">ways[u] = i;</span><br><span class="line"><span class="built_in">dfs</span>(u+<span class="number">1</span>,i+<span class="number">1</span>);</span><br><span class="line">ways[u] = <span class="number">0</span>;  <span class="comment">//恢复现场</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d %d&quot;</span>,&amp;n,&amp;m);</span><br><span class="line"><span class="built_in">dfs</span>(<span class="number">1</span>,<span class="number">1</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="n-皇后问题"><a href="#n-皇后问题" class="headerlink" title="n-皇后问题"></a>n-皇后问题</h1><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><p>枚举每一行皇后放在哪个位置</p><p>判断在皇后放在这个位置有没有冲突，有冲突的话，直接回溯，剪枝</p><p>对角线处理？  </p><h2 id="对角线技巧"><a href="#对角线技巧" class="headerlink" title="对角线技巧"></a>对角线技巧</h2><p><img src="/.top//Users\cjy\AppData\Roaming\Typora\typora-user-images\image-20230406214142629.png" alt="image-20230406214142629"> </p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//枚举第u行</span></span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;  <span class="comment">//第i列</span></span><br><span class="line">    dg[u+i]     <span class="comment">//反对角线</span></span><br><span class="line">    dg[i-u+n]  <span class="comment">//正对角线</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="全排列按行搜索方案"><a href="#全排列按行搜索方案" class="headerlink" title="全排列按行搜索方案"></a>全排列按行搜索方案</h2><p>时间复杂度$n*n!$</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">15</span>;</span><br><span class="line"><span class="type">char</span> g[N][N];<span class="comment">//棋盘</span></span><br><span class="line"><span class="type">bool</span> col[N],dg[N],ndg[N]; <span class="comment">//列和对角线</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">dfs</span><span class="params">(<span class="type">int</span> u)</span> <span class="comment">//位置u </span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(u == n) &#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++) <span class="built_in">puts</span>(g[i]);</span><br><span class="line"><span class="built_in">puts</span>(<span class="string">&quot;&quot;</span>);</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++)  <span class="comment">//对于每一个位置u，枚举列，是否可以放</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(!col[i] &amp;&amp; !dg[u+i] &amp;&amp; !ndg[i-u+n])</span><br><span class="line">&#123;</span><br><span class="line">g[u][i] = <span class="string">&#x27;Q&#x27;</span>;</span><br><span class="line">col[i] = dg[u+i] = ndg[i-u+n] = <span class="literal">true</span>;</span><br><span class="line"><span class="built_in">dfs</span>(u+<span class="number">1</span>);</span><br><span class="line"><span class="comment">//恢复现场</span></span><br><span class="line"><span class="comment">//g[u][i] = &#x27;.&#x27;;</span></span><br><span class="line">col[i] = dg[u+i] = ndg[i-u+n] = <span class="literal">false</span>;</span><br><span class="line">g[u][i] = <span class="string">&#x27;.&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"> &#125; </span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span> <span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cin &gt;&gt; n;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++) </span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">0</span>;j&lt;n;j++) </span><br><span class="line">        g[i][j]=<span class="string">&#x27;.&#x27;</span>;</span><br><span class="line">    </span><br><span class="line"><span class="built_in">dfs</span>(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"> &#125; </span><br></pre></td></tr></table></figure><h2 id="指数型枚举枚举每一个格子"><a href="#指数型枚举枚举每一个格子" class="headerlink" title="指数型枚举枚举每一个格子"></a>指数型枚举枚举每一个格子</h2><p>时间复杂度$2^(n^2)$</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">20</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line"><span class="type">char</span> g[N][N];</span><br><span class="line"><span class="type">bool</span> row[N],col[N], dg[N], udg[N];</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">dfs</span><span class="params">(<span class="type">int</span> x,<span class="type">int</span> y,<span class="type">int</span> s)</span><span class="comment">//s表示皇后个数 </span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(y==n) y=<span class="number">0</span>,x++;<span class="comment">//每当y的值出界的时候，切到下一行</span></span><br><span class="line"><span class="keyword">if</span>(x==n)&#123;  <span class="comment">//行出界，因为x最大为n-1 </span></span><br><span class="line"><span class="keyword">if</span>(s==n)&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++) <span class="built_in">puts</span>(g[i]);</span><br><span class="line"><span class="built_in">puts</span>(<span class="string">&quot;&quot;</span>); </span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125; </span><br><span class="line"><span class="comment">//不放皇后</span></span><br><span class="line"><span class="built_in">dfs</span>(x,y+<span class="number">1</span>,s);  </span><br><span class="line"></span><br><span class="line"><span class="comment">//放皇后</span></span><br><span class="line"><span class="keyword">if</span>(!row[x] &amp;&amp; !col[y] &amp;&amp; !dg[x+y] &amp;&amp; !udg[y-x+n])</span><br><span class="line">&#123;</span><br><span class="line">g[x][y]=<span class="string">&#x27;Q&#x27;</span>; </span><br><span class="line">row[x] = col[y] = dg[x+y] = udg[y-x+n] = <span class="literal">true</span>;</span><br><span class="line"><span class="built_in">dfs</span>(x,y+<span class="number">1</span>,s+<span class="number">1</span>);</span><br><span class="line"><span class="comment">//恢复现场 </span></span><br><span class="line">g[x][y]=<span class="string">&#x27;.&#x27;</span>; </span><br><span class="line">row[x] = col[y] = dg[x+y] = udg[y-x+n] = <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"> &#125; </span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i ++ )</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; n; j ++ )</span><br><span class="line">            g[i][j] = <span class="string">&#x27;.&#x27;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">dfs</span>(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="例题"><a href="#例题" class="headerlink" title="例题"></a>例题</h1><h2 id="1209带分数（蓝桥第2题）"><a href="#1209带分数（蓝桥第2题）" class="headerlink" title="1209带分数（蓝桥第2题）"></a>1209带分数（蓝桥第2题）</h2><div class="tabs" id="test4"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#test4-1">纯暴力做法全排列+放隔板</button></li><li class="tab"><button type="button" data-href="#test4-2">DFS优化</button></li><li class="tab"><button type="button" data-href="#test4-3">单个数字表示为大数</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="test4-1"><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">int</span> n;<span class="comment">//读入的数字 </span></span><br><span class="line"><span class="type">int</span> ass;</span><br><span class="line"><span class="type">int</span> num[<span class="number">10</span>]=&#123;<span class="number">0</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">//int cal(int a,int b)</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//int m =  b-a;</span></span><br><span class="line"><span class="comment">//int t = a;</span></span><br><span class="line"><span class="comment">//int cnt;</span></span><br><span class="line"><span class="comment">////for(int i =0;i&lt;=m;i++)&#123;</span></span><br><span class="line"><span class="comment">////cnt+=num[b]*i;</span></span><br><span class="line"><span class="comment">////t--;</span></span><br><span class="line"><span class="comment">////&#125;</span></span><br><span class="line"><span class="comment">//for(int i = m;i &gt;= 0;i--)&#123;</span></span><br><span class="line"><span class="comment">////cnt += num[t]*(10^i);</span></span><br><span class="line"><span class="comment">//cnt += num[t]*pow(10,i);</span></span><br><span class="line"><span class="comment">//t++;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"><span class="comment">//return cnt;</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">cal</span><span class="params">(<span class="type">int</span> a, <span class="type">int</span> b)</span> </span>&#123;</span><br><span class="line">  <span class="type">int</span> res = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">for</span> (<span class="type">int</span> i = a; i &lt;= b; i++) &#123;</span><br><span class="line">    res = res * <span class="number">10</span> + num[i];</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">check</span><span class="params">(<span class="type">int</span> a,<span class="type">int</span> b,<span class="type">int</span> c)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(b == (c*n-c*a))&#123;</span><br><span class="line"><span class="comment">//if(n*c==a*c+b)&#123;</span></span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//放隔板</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">dfs</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">int</span> a,b,c;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">8</span>;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> j=i+<span class="number">1</span>;j&lt;=<span class="number">8</span>;j++)</span><br><span class="line">&#123;</span><br><span class="line">a = <span class="built_in">cal</span>(<span class="number">1</span>,i);</span><br><span class="line">b = <span class="built_in">cal</span>(i+<span class="number">1</span>,j);</span><br><span class="line">c = <span class="built_in">cal</span>(j+<span class="number">1</span>,<span class="number">9</span>);</span><br><span class="line"><span class="comment">//if((long long)n*c==(long long)a*c+b) </span></span><br><span class="line"><span class="comment">//if(n*c==a*c+b) </span></span><br><span class="line"><span class="keyword">if</span>(<span class="built_in">check</span>(a,b,c))</span><br><span class="line">&#123;</span><br><span class="line">ass++;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"> &#125; </span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n);</span><br><span class="line"><span class="keyword">do</span>&#123;</span><br><span class="line"><span class="built_in">dfs</span>();</span><br><span class="line">&#125;<span class="keyword">while</span>(<span class="built_in">next_permutation</span>(num+<span class="number">1</span>,num+<span class="number">10</span>));</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>,ass);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test4-2"><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> n;</span><br><span class="line"><span class="type">int</span> ans;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">10</span>;</span><br><span class="line"><span class="type">bool</span> st[N];  <span class="comment">//记录每个数是否被使用</span></span><br><span class="line"><span class="type">bool</span> backup[N];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">dfs_a</span><span class="params">(<span class="type">int</span> u,<span class="type">int</span> a)</span></span>;</span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">check</span><span class="params">(<span class="type">int</span> a,<span class="type">int</span> c)</span></span>;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">dfs_c</span><span class="params">(<span class="type">int</span> u,<span class="type">int</span> a,<span class="type">int</span> c)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">dfs_a</span><span class="params">(<span class="type">int</span> u,<span class="type">int</span> a)</span></span>&#123;   <span class="comment">//u为位置，a为起始值</span></span><br><span class="line">    <span class="keyword">if</span>(a &gt;= n) <span class="keyword">return</span>;</span><br><span class="line">    <span class="keyword">if</span>(a) <span class="built_in">dfs_c</span>(u ,a , <span class="number">0</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>;i &lt;= <span class="number">9</span>;i ++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(!st[i])</span><br><span class="line">        &#123;  <span class="comment">//数字i未被使用</span></span><br><span class="line">            st[i] = <span class="literal">true</span>;</span><br><span class="line">            <span class="built_in">dfs_a</span>(u + <span class="number">1</span> , a * <span class="number">10</span> + i);</span><br><span class="line">            st[i] = <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; </span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">dfs_c</span><span class="params">(<span class="type">int</span> u, <span class="type">int</span> a, <span class="type">int</span> c)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(u &gt; <span class="number">9</span>) <span class="keyword">return</span>;</span><br><span class="line">    <span class="keyword">if</span>(<span class="built_in">check</span>(a , c)) ans++;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>;i &lt;= <span class="number">9</span>;i ++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(!st[i])</span><br><span class="line">        &#123;</span><br><span class="line">            st[i] = <span class="literal">true</span>;</span><br><span class="line">            <span class="built_in">dfs_c</span>(u + <span class="number">1</span>, a, c * <span class="number">10</span> +i);</span><br><span class="line">            st[i] = <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">check</span><span class="params">(<span class="type">int</span> a,<span class="type">int</span> c)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">//int b = n * c - c * a; //int 会出问题的，超出范围了</span></span><br><span class="line">    <span class="type">long</span> <span class="type">long</span> b = n * (<span class="type">long</span> <span class="type">long</span>)c - a * c;</span><br><span class="line">    <span class="keyword">if</span>(!a || !c || !b) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">memcpy</span>(backup, st, <span class="keyword">sizeof</span> st);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//检测b中有没有重复的数字</span></span><br><span class="line">    <span class="keyword">while</span>(b)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> x = b % <span class="number">10</span>;</span><br><span class="line">        b /= <span class="number">10</span>;</span><br><span class="line">        <span class="comment">//如果这个数字已经被使用过了，那么就产生了重复</span></span><br><span class="line">        <span class="keyword">if</span>(!x || backup[x]) <span class="keyword">return</span> <span class="literal">false</span>; </span><br><span class="line">        backup[x] = <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//检测所有数字是否都用上了</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i =<span class="number">1</span> ;i &lt;= <span class="number">9</span>;i ++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(!backup[i]) </span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">dfs_a</span>(<span class="number">0</span>,<span class="number">0</span>);</span><br><span class="line">    </span><br><span class="line">    cout &lt;&lt; ans &lt;&lt; endl;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;<span class="comment">//不写0分</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test4-3"><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">cal</span><span class="params">(<span class="type">int</span> a, <span class="type">int</span> b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">int</span> res = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=a;i&lt;=b;i++)&#123;</span><br><span class="line">res=res*<span class="number">10</span>+num[i];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="洛谷P1618-三连击"><a href="#洛谷P1618-三连击" class="headerlink" title="洛谷P1618 三连击"></a>洛谷P1618 三连击</h2><p><strong>模拟 枚举 全排列</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> a1,b1,c1;  <span class="comment">//读入的比例</span></span><br><span class="line"><span class="type">int</span> a,b,c;       <span class="comment">//全排序分片后的三个数据</span></span><br><span class="line"><span class="type">int</span> num[<span class="number">9</span>]=&#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>&#125;;</span><br><span class="line"><span class="type">int</span> cnt;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">check</span><span class="params">(<span class="type">int</span> a,<span class="type">int</span> b,<span class="type">int</span> c)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(a&gt;b || a&gt;c || b&gt;c) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line"><span class="keyword">if</span>(a1*b != a*b1) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line"><span class="keyword">if</span>(a1*c != a*c1) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">cal</span><span class="params">(<span class="type">int</span> a,<span class="type">int</span> b)</span></span>&#123;</span><br><span class="line"><span class="type">int</span> res = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i = a;i &lt;= b;i ++)&#123;</span><br><span class="line">res = res*<span class="number">10</span> + num[i];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d %d %d&quot;</span>,&amp;a1,&amp;b1,&amp;c1);</span><br><span class="line"><span class="keyword">do</span>&#123;</span><br><span class="line">a = <span class="built_in">cal</span>(<span class="number">0</span>,<span class="number">2</span>);</span><br><span class="line">b = <span class="built_in">cal</span>(<span class="number">3</span>,<span class="number">5</span>);</span><br><span class="line">c = <span class="built_in">cal</span>(<span class="number">6</span>,<span class="number">8</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="built_in">check</span>(a,b,c))&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d %d %d &quot;</span>,a,b,c);</span><br><span class="line"><span class="built_in">puts</span>(<span class="string">&quot;&quot;</span>);</span><br><span class="line">cnt++;</span><br><span class="line">&#125;</span><br><span class="line">&#125;<span class="keyword">while</span>(<span class="built_in">next_permutation</span>(num,num+<span class="number">9</span>));</span><br><span class="line"><span class="keyword">if</span>(cnt == <span class="number">0</span>)&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;No!!!&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"> &#125; </span><br></pre></td></tr></table></figure><h2 id="ACW842-排列数字"><a href="#ACW842-排列数字" class="headerlink" title="ACW842 排列数字"></a>ACW842 排列数字</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">10</span>;</span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line"><span class="type">int</span> a[N];</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i ++ ) a[i] = i;</span><br><span class="line">    <span class="keyword">do</span>&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i ++ ) cout &lt;&lt; a[i] &lt;&lt;<span class="string">&quot; &quot;</span>;</span><br><span class="line">        <span class="built_in">puts</span>(<span class="string">&quot;&quot;</span>);</span><br><span class="line">    &#125;<span class="keyword">while</span>(<span class="built_in">next_permutation</span>(a+<span class="number">1</span>,a+n+<span class="number">1</span>));</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//DFS写法</span></span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line"><span class="type">int</span> a[N];</span><br><span class="line"><span class="type">bool</span> st[N];</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">dfs</span><span class="params">(<span class="type">int</span> u)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(u&gt;n)&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i ++ ) cout&lt;&lt;a[i]&lt;&lt;<span class="string">&quot; &quot;</span>;</span><br><span class="line">        <span class="built_in">puts</span>(<span class="string">&quot;&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i ++ )</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(!st[i])&#123;</span><br><span class="line">            a[u] = i;</span><br><span class="line">            st[i] = <span class="literal">true</span>;</span><br><span class="line">            <span class="built_in">dfs</span>(u+<span class="number">1</span>);</span><br><span class="line">            </span><br><span class="line">            st[i] = <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i ++ ) a[i] = i;</span><br><span class="line">    <span class="built_in">dfs</span>(<span class="number">1</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
          <category> 蓝桥杯 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 递归 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>微信小程序</title>
      <link href="/posts/4618cb0a/"/>
      <url>/posts/4618cb0a/</url>
      
        <content type="html"><![CDATA[<p>主题色 #3d7ef9</p><h1 id="小程序MQTT连接"><a href="#小程序MQTT连接" class="headerlink" title="小程序MQTT连接"></a>小程序MQTT连接</h1><p>测试发现，EMX的MQTT服务器的8083，8084端口是有问题的，不能配置。</p><p>以下代码根据mqtt.js的要求书写</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; connect &#125; <span class="keyword">from</span> <span class="string">&quot;mqtt/dist/mqtt.js&quot;</span>;</span><br><span class="line"><span class="comment">//一定不能只写&quot;mqtt&quot;</span></span><br><span class="line"><span class="keyword">const</span> mqttUrl = <span class="string">&#x27;wxs://broker.emqx.io:8084/mqtt&#x27;</span></span><br><span class="line"><span class="comment">//broker.emqx.io 换成自己配的服务器</span></span><br></pre></td></tr></table></figure><p>mpvue小程序生命周期</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">onShow</span>(<span class="params"></span>)&#123;</span><br><span class="line">    <span class="comment">//小程序生命周期</span></span><br><span class="line">    <span class="keyword">var</span> that = <span class="variable language_">this</span>  <span class="comment">// 避免this的指向错误</span></span><br><span class="line">    that.<span class="property">client</span> = <span class="title function_">connect</span>(mqttUrl) <span class="comment">//取到data的client</span></span><br><span class="line">    that.<span class="property">client</span>.<span class="title function_">on</span>(<span class="string">&#x27;connect&#x27;</span>,<span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;成功连接mqtt服务器！&quot;</span>)</span><br><span class="line">      that.<span class="property">client</span>.<span class="title function_">subscribe</span>(<span class="string">&quot;/mysmarthome/pub&quot;</span>,<span class="keyword">function</span>(<span class="params">err</span>)&#123;</span><br><span class="line">        <span class="keyword">if</span>(!err)&#123;</span><br><span class="line">          <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;成功订阅设备上行数据Topic&quot;</span>)</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;)</span><br><span class="line">    &#125;) </span><br><span class="line">    <span class="comment">//事件来临,记录topic和消息体</span></span><br><span class="line">    that.<span class="property">client</span>.<span class="title function_">on</span>(<span class="string">&#x27;message&#x27;</span>,<span class="keyword">function</span>(<span class="params">topic,message</span>)&#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(topic)  <span class="comment">//打印话题</span></span><br><span class="line"></span><br><span class="line">    &#125;)</span><br></pre></td></tr></table></figure><p>自由生命周期</p><p>vue生命周期</p><p>就是钩子函数</p><h1 id="订阅Topic"><a href="#订阅Topic" class="headerlink" title="订阅Topic"></a>订阅Topic</h1><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">that.<span class="property">client</span>.<span class="title function_">on</span>(<span class="string">&#x27;connect&#x27;</span>,<span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">     <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;成功连接mqtt服务器！&quot;</span>)</span><br><span class="line">     that.<span class="property">client</span>.<span class="title function_">subscribe</span>(<span class="string">&quot;/mysmarthome/pub&quot;</span>,<span class="keyword">function</span>(<span class="params">err</span>)&#123;  <span class="comment">// 回调函数</span></span><br><span class="line">       <span class="keyword">if</span>(!err)&#123;</span><br><span class="line">         <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;成功订阅设备上行数据Topic&quot;</span>)</span><br><span class="line">       &#125;</span><br><span class="line">     &#125;)</span><br><span class="line">   &#125;) </span><br></pre></td></tr></table></figure><h1 id="接收订阅消息"><a href="#接收订阅消息" class="headerlink" title="接收订阅消息"></a>接收订阅消息</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">//事件、消息来临,记录topic和消息体，函数：从哪儿topic来的，消息体是什么</span><br><span class="line">  that.client.on(&#x27;message&#x27;,function(topic,message)&#123;</span><br><span class="line">    console.log(topic)  //打印topic话题</span><br><span class="line"></span><br><span class="line">  &#125;)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 物联网 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 小程序 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/posts/a13654e1/"/>
      <url>/posts/a13654e1/</url>
      
        <content type="html"><![CDATA[<h1 id="递推"><a href="#递推" class="headerlink" title="递推"></a>递推</h1><p>画递归搜索树。重要的是顺序。</p><h2 id="斐波那契数列"><a href="#斐波那契数列" class="headerlink" title="斐波那契数列"></a>斐波那契数列</h2><p>纯递归的话，会时间超限，因为数字重复计算了。2^n，需要剪枝</p><h1 id="费解的开关"><a href="#费解的开关" class="headerlink" title="费解的开关"></a>费解的开关</h1><ol><li>顺序可以任意</li><li>每个格子最多按一次</li><li>枚举第1行操作，第2行唯一确定，从而第3行也确定了，每一行开关的操作完全被前一行的灯的亮灭状态所决定</li></ol><p>枚举第一行操作</p><ol><li>状态压缩。11010转换成十进制，0表示不操作，1表示操作了</li><li>指数型枚举</li></ol><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> n;<span class="comment">//n组</span></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">6</span>;      <span class="comment">//每行5个数据</span></span><br><span class="line"><span class="type">char</span> g[N][N];         <span class="comment">//记录初始读入</span></span><br><span class="line"><span class="type">char</span> backup[N][N];    <span class="comment">//在复制体作操作</span></span><br><span class="line"><span class="type">int</span> dx[<span class="number">5</span>] = &#123;<span class="number">0</span>,<span class="number">-1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>&#125;;</span><br><span class="line"><span class="type">int</span> dy[<span class="number">5</span>] = &#123;<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">-1</span>&#125;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">turn</span><span class="params">(<span class="type">int</span> x,<span class="type">int</span> y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">5</span>;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> nx = x + dx[i];</span><br><span class="line">        <span class="type">int</span> ny = y + dy[i];</span><br><span class="line">        backup[nx][ny] ^= <span class="number">1</span>; <span class="comment">//异或</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    <span class="keyword">while</span>(n --)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">5</span>; i ++)</span><br><span class="line">        &#123;</span><br><span class="line">            cin &gt;&gt; g[i];<span class="comment">//读入每一行</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">int</span> ans = <span class="number">10</span>;<span class="comment">//比6大就行</span></span><br><span class="line">        <span class="comment">//枚举第一行的操作，指数型枚举</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> op = <span class="number">0</span>;op &lt; <span class="number">32</span>;op ++)<span class="comment">//第一行按开关的32种方式，与第一行开关的状态无关</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">memcpy</span>(backup, g, <span class="keyword">sizeof</span> g);</span><br><span class="line">            <span class="type">int</span> step = <span class="number">0</span>; <span class="comment">//当前步数</span></span><br><span class="line">            <span class="comment">//第1行</span></span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>;i &lt; <span class="number">5</span>;i++)&#123;</span><br><span class="line">                <span class="keyword">if</span>(op &gt;&gt; i &amp; <span class="number">1</span>)<span class="comment">//对第1行的第i个灯，如果操作为1，就更新步数</span></span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="built_in">turn</span>( <span class="number">0</span> , i );<span class="comment">//0行，i列</span></span><br><span class="line">                    step ++;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//对于前四排</span></span><br><span class="line">            <span class="comment">//如果这个灯为暗的，那么他的正下方的灯需要按一下</span></span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> i= <span class="number">0</span>;i &lt; <span class="number">4</span>;i++ )</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">0</span>;j &lt; <span class="number">5</span>;j++ )</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">if</span>(backup[i][j] == <span class="string">&#x27;0&#x27;</span> )</span><br><span class="line">                    &#123;</span><br><span class="line">                        <span class="built_in">turn</span>(i + <span class="number">1</span>, j);</span><br><span class="line">                        step ++;<span class="comment">//更新步数</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="type">bool</span> flag = <span class="literal">true</span>;</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">5</span>; i++)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span>(backup[<span class="number">4</span>][i] == <span class="string">&#x27;0&#x27;</span>)<span class="comment">//最后1排有灯是灭的</span></span><br><span class="line">                &#123;</span><br><span class="line">                    flag = <span class="literal">false</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(flag)  ans = <span class="built_in">min</span>(ans,step);</span><br><span class="line">            <span class="comment">//memcpy(g, backup, sizeof backup); //不能写</span></span><br><span class="line">            </span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(ans &gt; <span class="number">6</span>) cout &lt;&lt; <span class="number">-1</span> &lt;&lt; endl;</span><br><span class="line">        <span class="keyword">else</span> cout &lt;&lt; ans &lt;&lt; endl;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">   </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
          <category> 蓝桥杯 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 递推 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>科研小工具</title>
      <link href="/posts/5d70c1db/"/>
      <url>/posts/5d70c1db/</url>
      
        <content type="html"><![CDATA[<h1 id="公式编辑"><a href="#公式编辑" class="headerlink" title="公式编辑"></a>公式编辑</h1><h2 id="Mathpix"><a href="#Mathpix" class="headerlink" title="Mathpix"></a>Mathpix</h2><p>把PDF中的公式通过截图的方式转换为Latex格式</p><p>傻瓜式注册，邮箱确认登录</p><p>在线Latex公式编辑器</p><h2 id="在线LaTex编辑器"><a href="#在线LaTex编辑器" class="headerlink" title="在线LaTex编辑器"></a>在线LaTex编辑器</h2><a class="btn-beautify outline blue larger" href="https://www.latexlive.com/home" title="截图LaTex编辑"><i class="far fa-hand-point-right"></i><span>截图LaTex编辑</span></a><a class="btn-beautify outline blue larger" href="https://webdemo.myscript.com/views/math/index.html" title="手写LaTex编辑"><i class="far fa-hand-point-right"></i><span>手写LaTex编辑</span></a><h1 id="翻译"><a href="#翻译" class="headerlink" title="翻译"></a>翻译</h1><h2 id="谷歌翻译"><a href="#谷歌翻译" class="headerlink" title="谷歌翻译"></a>谷歌翻译</h2><p>谷歌翻译的网页虽然关闭了，但是她的翻译接口并没有关闭，只不过接口的域名对应的ip用不了。</p><p>所以我们只需要修改本地的DNS解析规则，将域名解析成受支持的IP地址，就可以正常使用翻译接口了。</p><h3 id="方法1：修改hosts文件："><a href="#方法1：修改hosts文件：" class="headerlink" title="方法1：修改hosts文件："></a>方法1：修改hosts文件：</h3><ol><li><p>进入到文件夹<code>C:\Windows\System32\drivers\etc </code>，找到<code>hosts</code>，然后年后右键复制</p></li><li><p>到桌面右键粘贴，这时右键该粘贴的<code>hosts</code>文件，用记事本打开，在最后一行写入下面的一行内容👇👇👇，然后保存</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">180.163</span><span class="number">.151</span><span class="number">.162</span> translate.<span class="property">googleapis</span>.<span class="property">com</span></span><br></pre></td></tr></table></figure></li><li><p>之后复制桌面的<code>hosts</code>文件到<code>C:\Windows\System32\drivers\etc</code>，覆盖掉。</p></li><li><p>之后就可以快乐的使用网页中右键”翻译成中文”的功能了</p></li></ol><h3 id="方法2：谷歌翻译镜像网站"><a href="#方法2：谷歌翻译镜像网站" class="headerlink" title="方法2：谷歌翻译镜像网站"></a>方法2：谷歌翻译镜像网站</h3><a class="btn-beautify outline blue larger" href="https://gt.cky.codes/" title="谷歌"><i class="far fa-hand-point-right"></i><span>谷歌</span></a><h2 id="沙拉查词"><a href="#沙拉查词" class="headerlink" title="沙拉查词"></a>沙拉查词</h2><p>内置的网页翻译引擎，其中最为推荐彩云小译，排版好，而且原文和译文是上下排列的，利于理解</p><h1 id="图"><a href="#图" class="headerlink" title="图"></a>图</h1><h2 id="灵魂框图转图片"><a href="#灵魂框图转图片" class="headerlink" title="灵魂框图转图片"></a>灵魂框图转图片</h2><a class="btn-beautify outline blue larger" href="https://webdemo.myscript.com/views/diagram/" title="框图转图片"><i class="far fa-hand-point-right"></i><span>框图转图片</span></a>]]></content>
      
      
      <categories>
          
          <category> 论文 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 公式编辑 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>一图流背景</title>
      <link href="/posts/49bf423b/"/>
      <url>/posts/49bf423b/</url>
      
        <content type="html"><![CDATA[<h1 id="设置图片"><a href="#设置图片" class="headerlink" title="设置图片"></a>设置图片</h1><p>这个是 <a href="https://butterfly.js.org/">Butterfly</a> 自带的功能，修改主题的配置文件 <code>_config.butterfly.yml</code>。</p><p>编辑 <code>index_img</code>、<code>background</code>、<code>footer_bg</code> 选项。<br>设置网站背景，并将主页顶部图和页脚背景改为透明。<br>(需要将以下示例地址替换为自己的图片地址。)</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># The banner image of home page</span></span><br><span class="line"><span class="attr">index_img:</span> <span class="string">transparent</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Beautify/Effect (美化/效果)</span></span><br><span class="line"><span class="comment"># --------------------------------------</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Website Background (設置網站背景)</span></span><br><span class="line"><span class="attr">background:</span> <span class="string">url(https://example.com/img/background.jpg)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Footer Background</span></span><br><span class="line"><span class="attr">footer_bg:</span> <span class="string">transparent</span></span><br></pre></td></tr></table></figure><h1 id="引入相关样式"><a href="#引入相关样式" class="headerlink" title="引入相关样式"></a>引入相关样式</h1><h2 id="引入相关样式-1"><a href="#引入相关样式-1" class="headerlink" title="引入相关样式"></a>引入相关样式</h2><p>新建一个文件，位于 <code>source/css/modify.styl</code>，并增加以下内容。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">@import</span> <span class="string">&#x27;nib&#x27;</span></span><br><span class="line"></span><br><span class="line">// 顶部图</span><br><span class="line">#page-header</span><br><span class="line">  &amp;, &amp;:before</span><br><span class="line">    <span class="attribute">background</span>: transparent !important</span><br><span class="line">  &amp;.post-bg, &amp;.not-home-page</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">280px</span> !important</span><br><span class="line">  #post-info</span><br><span class="line">    <span class="attribute">bottom</span>: <span class="number">40px</span> !important</span><br><span class="line">  #page-site-info</span><br><span class="line">    <span class="attribute">top</span>: <span class="number">140px</span> !important</span><br><span class="line"></span><br><span class="line">  @media screen <span class="keyword">and</span> (<span class="attribute">max-width</span>: <span class="number">768px</span>)</span><br><span class="line">    &amp;.not-home-page</span><br><span class="line">      <span class="attribute">height</span>: <span class="number">200px</span> !important</span><br><span class="line">    #post-info</span><br><span class="line">      <span class="attribute">bottom</span>: <span class="number">10px</span> !important</span><br><span class="line">    #page-site-info</span><br><span class="line">      <span class="attribute">top</span>: <span class="number">100px</span> !important</span><br><span class="line"></span><br><span class="line">.top-img</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">250px</span></span><br><span class="line">  <span class="attribute">margin</span>: -<span class="number">50px</span> -<span class="number">40px</span> <span class="number">50px</span></span><br><span class="line">  <span class="attribute">border-top-left-radius</span>: inherit</span><br><span class="line">  <span class="attribute">border-top-right-radius</span>: inherit</span><br><span class="line">  <span class="attribute">background-position</span>: center center</span><br><span class="line">  <span class="attribute">background-size</span>: cover</span><br><span class="line">  <span class="attribute">transition</span>: all <span class="number">0.3s</span></span><br><span class="line"></span><br><span class="line">  @media screen <span class="keyword">and</span> (<span class="attribute">max-width</span>: <span class="number">768px</span>)</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">230px</span></span><br><span class="line">    <span class="attribute">margin</span>: -<span class="number">36px</span> -<span class="number">14px</span> <span class="number">36px</span></span><br><span class="line"></span><br><span class="line">  [data-theme=<span class="string">&#x27;dark&#x27;</span>] &amp;</span><br><span class="line">    <span class="attribute">filter</span>: brightness(<span class="number">0.8</span>)</span><br><span class="line"></span><br><span class="line">// 页脚</span><br><span class="line">#<span class="attribute">footer</span>:before</span><br><span class="line">  <span class="attribute">background-color</span>: alpha(#FFF, .<span class="number">5</span>)</span><br><span class="line"></span><br><span class="line">  [data-theme=<span class="string">&#x27;dark&#x27;</span>] &amp;</span><br><span class="line">    <span class="attribute">background-color</span>: alpha(#<span class="number">000</span>, .<span class="number">5</span>)</span><br><span class="line"></span><br><span class="line">#footer-wrap, #footer-wrap a</span><br><span class="line">  <span class="attribute">color</span>: #<span class="number">111</span></span><br><span class="line">  <span class="attribute">transition</span>: unset</span><br><span class="line"></span><br><span class="line">  [data-theme=<span class="string">&#x27;dark&#x27;</span>] &amp;</span><br><span class="line">    <span class="attribute">color</span>: var(--light-grey)</span><br></pre></td></tr></table></figure><p>在主题配置文件 <code>_config.butterfly.yml</code> 的 <code>inject.head</code> 引入样式。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Inject</span></span><br><span class="line"><span class="comment"># Insert the code to head (before &#x27;&lt;/head&gt;&#x27; tag) and the bottom (before &#x27;&lt;/body&gt;&#x27; tag)</span></span><br><span class="line"><span class="comment"># 插入代码到头部 &lt;/head&gt; 之前 和 底部 &lt;/body&gt; 之前</span></span><br><span class="line"><span class="attr">inject:</span></span><br><span class="line">  <span class="attr">head:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">&lt;link</span> <span class="string">rel=&quot;stylesheet&quot;</span> <span class="string">href=&quot;/css/modify.css&quot;&gt;</span></span><br></pre></td></tr></table></figure><h1 id="增加插件脚本"><a href="#增加插件脚本" class="headerlink" title="增加插件脚本"></a>增加插件脚本</h1><p>因为使用了 <code>cheerio</code> 来解析 HTML，所以需要先安装此依赖。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install cheerio</span><br></pre></td></tr></table></figure><p>新建一个文件，位于 <code>js/modify.js</code>，并增加以下内容。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&#x27;use strict&#x27;</span>;</span><br><span class="line"><span class="keyword">const</span> cheerio = <span class="built_in">require</span>(<span class="string">&#x27;cheerio&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 在页面插入新顶部图</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> &#123;<span class="type">cheerio.Root</span>&#125; $ Root</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">insertTopImg</span>(<span class="params">$</span>) &#123;</span><br><span class="line">    <span class="keyword">let</span> header = $(<span class="string">&#x27;#page-header&#x27;</span>);</span><br><span class="line">    <span class="keyword">if</span> (header.<span class="property">length</span> === <span class="number">0</span>) <span class="keyword">return</span>;</span><br><span class="line">    <span class="keyword">let</span> background = header.<span class="title function_">css</span>(<span class="string">&#x27;background-image&#x27;</span>);</span><br><span class="line">    <span class="keyword">if</span> (!background) <span class="keyword">return</span>;</span><br><span class="line">    $(<span class="string">&#x27;#post, #page, #archive, #tag, #category&#x27;</span>).<span class="title function_">prepend</span>(<span class="string">`&lt;div class=&quot;top-img&quot; style=&quot;background-image: <span class="subst">$&#123;background&#125;</span>;&quot;&gt;&lt;/div&gt;`</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">hexo.<span class="property">extend</span>.<span class="property">filter</span>.<span class="title function_">register</span>(<span class="string">&#x27;after_render:html&#x27;</span>, <span class="keyword">function</span>(<span class="params">str, data</span>) &#123;</span><br><span class="line">    <span class="keyword">let</span> $ = cheerio.<span class="title function_">load</span>(str, &#123;</span><br><span class="line">        <span class="attr">decodeEntities</span>: <span class="literal">false</span></span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="title function_">insertTopImg</span>($);</span><br><span class="line">    <span class="keyword">return</span> $.<span class="title function_">html</span>();</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 博客搭建 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 🦋Butterfly </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>阿里云搭建EMQX服务器</title>
      <link href="/posts/7214931d/"/>
      <url>/posts/7214931d/</url>
      
        <content type="html"><![CDATA[<h1 id="购买服务器"><a href="#购买服务器" class="headerlink" title="购买服务器"></a>购买服务器</h1><p>控制台–&gt;云服务器ECS</p><p>Ubuntu20.04 服务器 </p><h1 id="安全组开放端口"><a href="#安全组开放端口" class="headerlink" title="安全组开放端口"></a>安全组开放端口</h1><p>点击安全组–&gt;配置规则–&gt;手动添加</p><p><img src="https://blog-1316756713.cos.ap-shanghai.myqcloud.com/img/%E9%98%BF%E9%87%8C%E4%BA%91%E9%83%A8%E7%BD%B21.webp" alt="image-20230207213841572"></p><p>各个端口服务如下表所示：</p><table><thead><tr><th>端口号</th><th>服务</th></tr></thead><tbody><tr><td>1883</td><td>MQTT TCP 端口</td></tr><tr><td>8883</td><td>MQTT TCP/ssl 端口</td></tr><tr><td>8083</td><td>MQTT Websocket/ws 端口</td></tr><tr><td>8084</td><td>MQTT Websocket/wss 端口</td></tr><tr><td>8081（这里未配置）</td><td>HTTP API 端口</td></tr><tr><td>18083</td><td>DashBoard 控制台端口</td></tr></tbody></table><h1 id="远程连接"><a href="#远程连接" class="headerlink" title="远程连接"></a>远程连接</h1><h2 id="Workbench远程连接"><a href="#Workbench远程连接" class="headerlink" title="Workbench远程连接"></a>Workbench远程连接</h2><p><img src="https://blog-1316756713.cos.ap-shanghai.myqcloud.com/img/%E9%98%BF%E9%87%8C%E4%BA%91%E9%83%A8%E7%BD%B22.webp" alt="image-20230207214227491"></p><h2 id="Xshell连接"><a href="#Xshell连接" class="headerlink" title="Xshell连接"></a>Xshell连接</h2><p><img src="https://blog-1316756713.cos.ap-shanghai.myqcloud.com/img/%E9%98%BF%E9%87%8C%E4%BA%915.webp" alt="image-20230207230127424"></p><h1 id="EMQX配置"><a href="#EMQX配置" class="headerlink" title="EMQX配置"></a>EMQX配置</h1><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><a class="btn-beautify outline blue larger" href="https://www.emqx.io/docs/zh/v5.0/deploy/install-ubuntu.html#deb-%E5%AE%89%E8%A3%85" title="EMQX官方文档"><i class="far fa-hand-point-right"></i><span>EMQX官方文档</span></a><ol><li>下载deb包</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget https://www.emqx.com/downloads/broker/v5.0.14/emqx-5.0.14-ubuntu20.04-amd64.deb</span><br></pre></td></tr></table></figure><ol start="2"><li>安装 EMQX</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install ./emqx-5.0.14-ubuntu20.04-amd64.deb</span><br></pre></td></tr></table></figure><ol start="3"><li>启动 EMQX</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl start emqx</span><br></pre></td></tr></table></figure><h2 id="启动"><a href="#启动" class="headerlink" title="启动"></a>启动</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">emqx start</span></span><br></pre></td></tr></table></figure><p><img src="https://blog-1316756713.cos.ap-shanghai.myqcloud.com/img/%E9%98%BF%E9%87%8C%E4%BA%91%E9%83%A8%E7%BD%B23.webp" alt="image-20230207223011252"></p><h2 id="访问"><a href="#访问" class="headerlink" title="访问"></a>访问</h2><p>地址栏输入<strong>公网IP：18083</strong></p><p>默认账户：admin</p><p>默认密码：public</p><p>自己更改下密码</p><h2 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h2><p>在WebSocket中测试MQTT服务器</p><p><img src="https://blog-1316756713.cos.ap-shanghai.myqcloud.com/img/%E9%98%BF%E9%87%8C%E4%BA%91%E9%83%A8%E7%BD%B24.webp" alt="image-20230207224104873"></p><h1 id="SSL通信"><a href="#SSL通信" class="headerlink" title="SSL通信"></a>SSL通信</h1><h2 id="域名"><a href="#域名" class="headerlink" title="域名"></a>域名</h2><ol><li><p>实名认证–&gt;阿里云万网购买</p></li><li><p>解析：添加记录</p><ul><li>A记录：当输入mqtt.个人域名时，就会被解析到服务器的公网IP</li></ul><p><img src="https://blog-1316756713.cos.ap-shanghai.myqcloud.com/img/%E9%98%BF%E9%87%8C%E4%BA%91%E9%83%A8%E7%BD%B26.webp" alt="image-20230207230821953"></p><ul><li>TXT记录：</li></ul><p><img src="https://blog-1316756713.cos.ap-shanghai.myqcloud.com/img/%E9%98%BF%E9%87%8C%E4%BA%91%E9%83%A8%E7%BD%B27.webp" alt="image-20230207232056357"></p></li></ol><h2 id="证书"><a href="#证书" class="headerlink" title="证书"></a>证书</h2><p>原因：在小程序的开发过程中，域名只支持https和wss协议，所以必须有证书</p><p>发布时，域名必须经过ICP备案。调试时，可以先不备案</p><p>阿里云搜索SSL证书–&gt;购买单域名免费版–&gt;证书绑定域名mqtt.个人域名</p><h1 id="SSL配置"><a href="#SSL配置" class="headerlink" title="SSL配置"></a>SSL配置</h1><ol><li><p>下载<img src="https://blog-1316756713.cos.ap-shanghai.myqcloud.com/img/%E9%98%BF%E9%87%8C%E4%BA%91%E9%83%A8%E7%BD%B29.webp" alt="image-20230207233111565"></p></li><li><p>FinalShell</p></li></ol><p>进入etc目录–&gt;emqx–&gt;certs文件夹–&gt;上传文件</p><p><img src="https://blog-1316756713.cos.ap-shanghai.myqcloud.com/img/%E9%98%BF%E9%87%8C%E4%BA%91%E9%83%A8%E7%BD%B210.webp" alt="image-20230207234142886"></p><ol start="3"><li>配置</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nano /etc/emqx/emqx.conf</span><br></pre></td></tr></table></figure><p>按住ctrl+w搜索 listeners.ssl.default</p><p>修改ssl和wss的以下内容</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">listener.ssl.external.keyfile = /emqttd/emqttd/etc/certs/你证书的名字.key</span><br><span class="line"></span><br><span class="line">listener.ssl.external.certfile = /emqttd/emqttd/etc/certs/你证书的名字.pem</span><br><span class="line"></span><br><span class="line">listener.ssl.external.cacertfile = /emqttd/emqttd/etc/certs/你证书的名字.pem  #这行原来是备注，要把备注去掉</span><br></pre></td></tr></table></figure><div class="note purple icon-padding simple"><i class="note-icon far fa-hand-scissors"></i><p>我一开始是只改了前两行，后来突然看到别人博客里写一定要改这个CA证书的路径。文件和第二行相同。参考：<a href="https://links.jianshu.com/go?to=https://encoderlee.blog.csdn.net/article/details/88381216">EMQ配置SSL访问的一个坑</a>到这里其实就结束了，理论上SSL就可以连接了。</p></div><ol start="4"><li>测试</li></ol><p><img src="https://blog-1316756713.cos.ap-shanghai.myqcloud.com/img/%E9%98%BF%E9%87%8C%E4%BA%91%E9%83%A8%E7%BD%B211.webp" alt="image-20230207235920616"></p>]]></content>
      
      
      <categories>
          
          <category> 物联网 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 阿里云 </tag>
            
            <tag> MQTT </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>阿里云域名绑定</title>
      <link href="/posts/cf98f42e/"/>
      <url>/posts/cf98f42e/</url>
      
        <content type="html"><![CDATA[<h1 id="阿里云"><a href="#阿里云" class="headerlink" title="阿里云"></a>阿里云</h1><h2 id="域名注册"><a href="#域名注册" class="headerlink" title="域名注册"></a>域名注册</h2><p>在阿里云万网输入自己想要购买的域名 ——&gt; <a href="https://wanwang.aliyun.com/?spm=5176.10695662.1158081.1.59854234vGvJdM">域名注册</a></p><p><img src="https://blog-1316756713.cos.ap-shanghai.myqcloud.com/img/%E5%9F%9F%E5%90%8D1.webp" alt="image-20230207181351230"></p><p>选好自己的域名，加入清单，然后支付</p><h2 id="域名解析"><a href="#域名解析" class="headerlink" title="域名解析"></a>域名解析</h2><p>找到域名选项，找到刚才注册的域名，点解析</p><p>添加记录如下图所示</p><p><img src="https://blog-1316756713.cos.ap-shanghai.myqcloud.com/img/%E5%9F%9F%E5%90%8D2.webp" alt="image-20230207181530307"></p><h1 id="GitHub"><a href="#GitHub" class="headerlink" title="GitHub"></a>GitHub</h1><h2 id="Pages设置"><a href="#Pages设置" class="headerlink" title="Pages设置"></a>Pages设置</h2><p>将解析完的域名填入Custom domain（自定义域），点save保存</p><p><img src="https://blog-1316756713.cos.ap-shanghai.myqcloud.com/img/%E5%9F%9F%E5%90%8D3.webp" alt="image-20230207181703484"></p><p> 大概等一小会，颁发安全证书，获得证书后就可以勾选Enforce HTTPS（强制使用HTTPS，HTTPS较HTTP要更安全一些，所以尽量勾选上</p><h2 id="CNAME文件"><a href="#CNAME文件" class="headerlink" title="CNAME文件"></a>CNAME文件</h2><p>然后，在Hexo的博客文件下，进入<code>source</code>，新建一个CNAME文件，无后缀扩展名。<br> 内容写入<strong>刚刚解析的域名</strong></p><h1 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h1><p>在阿里云设置好了自己的dns解析路径，并且输入自己申请的域名后，点击保存，图中那个蓝色区域的位置一直显示的是your site is ready to publish…. 然后访问绑定后的网址，浏览器报无法解析的异常。可能是计算机里面的dns缓存造成的。因为之前用默认的域名访问过博客，计算机会保存该博客IP地址对应的域名信息。当我们对域名进行访问时，不会向dns服务器寻求帮助，会先从缓存的dns列表里面查找,由于dns缓存列表的信息没有改变，在计算机对该域名访问时仍然不会连接Dns服务器获取最新解析信息，会根据自己计算机上保存的缓存</p><ol><li>通过“开始-&gt;运行-&gt;输入CMD”进入命令行模式。</li><li>在命令行模式中我们可以看到在ipconfig /?中有一个名为/flushdns的参数，这个就是清除DNS缓存信息的命令。</li><li>执行<strong>ipconfig /flushdns</strong>命令，当出现“successfully flushed the dns resolver cache”的提示时就说明当前计算机的缓存信息已经被成功清除。</li><li>接下来我们再访问域名时，就会到Dns服务器上获取最新解析地址，再也不会出现因为以前的缓存造成解析错误故障了。</li></ol><p>或者</p><ol><li><p>域名没有实名制，因此dns服务商没有提供解析服务。</p></li><li><p>给解析添加A类型，以下地址任选一</p></li></ol><ul><li>185.199.108.153</li><li>185.199.109.153</li><li>185.199.110.153</li><li>185.199.111.153</li></ul><h1 id="改进"><a href="#改进" class="headerlink" title="改进"></a>改进</h1><p>在source目录下（不是<a href="https://so.csdn.net/so/search?q=hexo&spm=1001.2101.3001.7020">hexo</a>根目录下），创建一个CNAME文件，可以用sublime创建，然后保存成（All files格式）</p><p>CNAME文件里写自己新的域名</p><p><img src="https://img-blog.csdn.net/20180821150011184?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM4MzMyNDM2/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70"></p><h1 id="重新用Vercel部署"><a href="#重新用Vercel部署" class="headerlink" title="重新用Vercel部署"></a>重新用Vercel部署</h1><ol><li>点击Vercel控制面板右上角的<code>View Domains</code>查看当前的域，我们可以看到仅有Vercel给你预分配的一个域名，此时我们输入刚刚购买的域名，我这里以二级域名<code>demo.fomal.cc</code>为例进行说明，添加后他会提示你添加一条DNS解析记录。</li></ol><p><img src="https://blog-1316756713.cos.ap-shanghai.myqcloud.com/img/vercel1.webp" alt="image-20230208221203283"></p><ol start="2"><li><img src="https://blog-1316756713.cos.ap-shanghai.myqcloud.com/img/vercel2.webp" alt="image-20230208221252059"></li></ol><p><strong>PS</strong>：如果你是新买的域名，直接输入你新买的一级域名即可，例如<code>demo123.com</code>，他会推荐你将<code>demo123.com</code>重定向至<code>www.demo123.com</code>，点<code>ADD</code>即可，然后他会提示你添加两条解析记录，一个是<code>@</code>开头的和<code>CNAME</code>开头的，添加记录的方法和二级域名一致。</p><ol start="3"><li>在阿里云域名解析记录里面添加如下记录，其中记录类型对应<code>Type</code>，主机记录对应<code>Name</code>，记录值对应<code>Value</code>，其他的设置默认即可。</li><li>回到Vercel刚刚查看域名的地方，如果操作没问题，应该会显示域名配置成功的提示，此时就可以通过自定义域名来访问我们搭建的网站了。</li><li>当你有了新的域名之后，需要<code>[BlogRoot]\_config.yml</code>文件中的<code>url</code>配置项为自己的新域名，这样博客的文章链接才会正确生成。</li></ol><p><img src="https://blog-1316756713.cos.ap-shanghai.myqcloud.com/img/vercel3.webp" alt="image-20230208221405979"></p>]]></content>
      
      
      <categories>
          
          <category> 博客搭建 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 🦋Butterfly </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>腾讯云 COS + PicGo 搭建图床</title>
      <link href="/posts/d7f6c163/"/>
      <url>/posts/d7f6c163/</url>
      
        <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>平时写博客记笔记大都是使用markdown编辑器 ，插入图片时默认保存在电脑本地磁盘。如果需要在多个平台上发布文章，就要分别多次上传图片，非常繁琐。所以需要一种更好的图片管理方案，就是使用图床服务。将图片文件上传到图床并得到一个 url 地址，就可以方便的分享图片了。</p><p>市面上有一些免费的图床服务。如果仅仅是临时分享，可以使用。如果有大量的图片资源需要保存，最好还是购买图床服务，或者自建图床。</p><p>本文将以腾讯云对象存储 COS 为例，结合 PicGo，演示如何搭建一个属于自己的图床服务。</p><h1 id="PigGo"><a href="#PigGo" class="headerlink" title="PigGo"></a>PigGo</h1><h2 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h2><p><strong>PicGo 是一个用于快速上传图片并获取图片 URL 链接的工具</strong>，支持腾讯云COS、七牛图床、Github 图床、又拍云图床、SM.SM 等。</p><p>我们以 Windows 为例，首先访问 Github 仓库去下载（<a href="https://github.com/Molunerfinn/PicGo/releases">点击跳转</a>）客户端安装包，找到 2.4.0，找到对应平台的安装包，点击下载：</p><h2 id="安装webp插件"><a href="#安装webp插件" class="headerlink" title="安装webp插件"></a>安装webp插件</h2><p>PicGo 有一系列好用的插件，帮助扩展功能，比如压缩图片、添加水印等等。本文将以 <strong>webp 插件</strong>为例，演示如何在 PicGo 中使用插件。</p><p><strong>webp</strong> 插件会在图片上传前将图片转为 <code>.webp</code> 格式，它相比于传统的 <code>.jpg</code>、<code>.png</code> 等格式，同等体积质量更高，同等质量体积更小。图片经过压缩之后再上传至 COS，对于节省存储空间，节省流量都很有帮助。如果对图片格式有特殊要求，不希望转换格式，可以省略这一步。</p><p>打开 PicGo，进入插件设置，在搜索栏输入插件名字即可搜索并安装，非常方便：</p><p><img src="https://blog-1316756713.cos.ap-shanghai.myqcloud.com/img/COS%20+%20PicGo_2.webp" alt="image-20230207160014033"></p><h1 id="COS-对象存储"><a href="#COS-对象存储" class="headerlink" title="COS 对象存储"></a>COS 对象存储</h1><p>COS（Cloud Object  Storage，对象存储）是由腾讯云推出的一种分布式存储服务。它的特点是无目录层次结构、无数据格式限制，可容纳海量数据，支持  HTTP/HTTPS 协议访问。腾讯云 COS 的存储桶空间无容量上限，无需分区管理，适用于 CDN 数据分发、<a href="https://cloud.tencent.com/product/ci?from=10680">数据万象</a>处理或大数据计算与分析的<a href="https://cloud.tencent.com/solution/datalake_storage?from=10680">数据湖</a>等多种场景。</p><p>对于实名认证的新用户，腾讯云 COS 提供了六个月的免费体验服务（50GB 存储空间）。</p><h2 id="创建存储桶"><a href="#创建存储桶" class="headerlink" title="创建存储桶"></a>创建存储桶</h2><p>按需要填写各项即可，需要注意的地方是访问权限的选择，默认是<strong>私有读写，适合存储隐私机密文件</strong>；本文选择了<strong>公有读私有写</strong>，是因为这个存储桶主要是做图床服务，用来<strong>存储图片，并能对外提供公开访问</strong>。</p><p><img src="https://blog-1316756713.cos.ap-shanghai.myqcloud.com/img/COS%20+%20PicGo_3.webp" alt="image-20230207160236739"></p><h2 id="配置-PicGo-图床服务"><a href="#配置-PicGo-图床服务" class="headerlink" title="配置 PicGo 图床服务"></a>配置 PicGo 图床服务</h2><p>打开安装好的 PicGo 客户端，进入【图床设置】 - 【腾讯云 COS】，将上面保存的内容填写到配置中：</p><div class="note purple icon-padding simple"><i class="note-icon far fa-hand-scissors"></i><p>SecretID/Key:在腾讯云访问管理-&gt;访问密钥-&gt;API密钥管理中可以找到。<br>APPID:在右上角头像的用户信息中复制粘贴。<br>存储空间名:存储桶的名字。</p><p>存储路径:指上传到存储桶中的位置，不填则是主目录，若填img/则是存到img文件夹下，后面的/不能省。<br>自定义域名:其实这个就是上传完图片，图片的域名前缀。可以在桶的概览-&gt;域名信息-&gt;访问域名复制粘贴过来。</p></div><p>然后，进入【PicGo 设置】，将【上传前重命名】、【时间戳重命名】打开，这样可以防止图片重名。</p><h1 id="Typora配置"><a href="#Typora配置" class="headerlink" title="Typora配置"></a>Typora配置</h1><p>打开 Typora ，进入【文件】- 【偏好设置】- 【图像设置】，进行三个设置：</p><ol><li>插入图片时，执行上传图片操作</li><li>上传服务采用 PicGo(app)</li><li>设置 PicGo 程序的安装路径</li></ol><p>![image-20230207160511583](</p><p>之后，当我们使用 typora 编写 md 文档，在插入图片时，会自动唤起 PicGo 客户端，并上传图片到目标平台。</p>]]></content>
      
      
      <categories>
          
          <category> 博客搭建 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 🦋Butterfly </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Butterfly主题美化（四）</title>
      <link href="/posts/db698da9/"/>
      <url>/posts/db698da9/</url>
      
        <content type="html"><![CDATA[<h1 id="PDF插件"><a href="#PDF插件" class="headerlink" title="PDF插件"></a>PDF插件</h1><ol><li>安装hexo-pdf插件</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-pdf --save</span><br></pre></td></tr></table></figure><ol start="2"><li>外挂标签的引用格式如下：</li></ol><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% pdf 文件路径 %&#125;</span><br></pre></td></tr></table></figure><p><code>文件路径</code>: 可以是相对路径或者是在线链接</p><ol start="3"><li>示例源码</li></ol><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="section"># 1.本地文件:在md文件路径下创建一个同名文件夹，其内放pdf文件名为xxx.pdf的文件</span></span><br><span class="line">&#123;% pdf xxx.pdf %&#125;</span><br><span class="line"><span class="section"># 2.在线链接</span></span><br><span class="line">&#123;% pdf https://cdn.jsdelivr.net/gh/Justlovesmile/CDN/pdf/小作文讲义.pdf %&#125;</span><br></pre></td></tr></table></figure><ol start="4"><li>插入PDF</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;embed id=&quot;pdfPlayer&quot; src=&quot;https://cdn.mobaijun.com/pdf/JavaDevelopmentManual%28HuangshanEdition%29.pdf&quot; type=&quot;application/pdf&quot; width=&quot;100%&quot; height=&quot;800&quot; &gt;</span><br></pre></td></tr></table></figure><h1 id="gulp-压缩"><a href="#gulp-压缩" class="headerlink" title="gulp 压缩"></a>gulp 压缩</h1><h2 id="插件安装"><a href="#插件安装" class="headerlink" title="插件安装"></a>插件安装</h2><p>一个可以自动压缩 HTML、JS、CSS 文件、图片，可以将 ES6 语法转换成 ES5，减少网络请求，同时降低网络负担</p><ol><li>首先全局安装 gulp</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install --global gulp-cli</span><br></pre></td></tr></table></figure><ol start="2"><li>安装压缩 HTML</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">npm install gulp-htmlclean --save-dev</span><br><span class="line">npm install --save gulp-html-minifier-terser</span><br><span class="line">npm install gulp-htmlclean gulp-htmlmin gulp-minify-css gulp-uglify --save</span><br></pre></td></tr></table></figure><ol start="3"><li>安装压缩 CSS</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install gulp-clean-css --save-dev</span><br></pre></td></tr></table></figure><ol start="4"><li>安装压缩 JS</li></ol><p>这里我选择 gulp-uglify + gulp-babel，可以把 ES6 转换成 ES5，因为兼容所以选择</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">npm install --save-dev gulp-uglify</span><br><span class="line">npm install --save-dev gulp-babel @babel/core @babel/preset-env</span><br><span class="line">cnpm install gulp-terser --save-dev</span><br></pre></td></tr></table></figure><ol start="5"><li>安装如上插件之后，在你的博客根目录创建一个 <code>gulpfile.js</code> 文件并把如下代码 <code>CV</code> 进去</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> gulp = <span class="built_in">require</span>(<span class="string">&#x27;gulp&#x27;</span>);</span><br><span class="line"><span class="keyword">var</span> cleanCSS = <span class="built_in">require</span>(<span class="string">&#x27;gulp-clean-css&#x27;</span>);</span><br><span class="line"><span class="keyword">var</span> htmlmin = <span class="built_in">require</span>(<span class="string">&#x27;gulp-html-minifier-terser&#x27;</span>);</span><br><span class="line"><span class="keyword">var</span> htmlclean = <span class="built_in">require</span>(<span class="string">&#x27;gulp-htmlclean&#x27;</span>);</span><br><span class="line"><span class="keyword">var</span> uglify = <span class="built_in">require</span>(<span class="string">&#x27;gulp-uglify&#x27;</span>)</span><br><span class="line"><span class="keyword">var</span> babel = <span class="built_in">require</span>(<span class="string">&#x27;gulp-babel&#x27;</span>)</span><br><span class="line"><span class="comment">// 压缩js</span></span><br><span class="line">gulp.<span class="title function_">task</span>(<span class="string">&#x27;compress&#x27;</span>, <span class="function">() =&gt;</span></span><br><span class="line">  gulp.<span class="title function_">src</span>([<span class="string">&#x27;./public/**/*.js&#x27;</span>, <span class="string">&#x27;!./public/**/*.min.js&#x27;</span>])</span><br><span class="line">    .<span class="title function_">pipe</span>(<span class="title function_">babel</span>(&#123;</span><br><span class="line">      <span class="attr">presets</span>: [<span class="string">&#x27;@babel/preset-env&#x27;</span>]</span><br><span class="line">    &#125;))</span><br><span class="line">    .<span class="title function_">pipe</span>(<span class="title function_">uglify</span>().<span class="title function_">on</span>(<span class="string">&#x27;error&#x27;</span>, <span class="keyword">function</span> (<span class="params">e</span>) &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(e)</span><br><span class="line">    &#125;))</span><br><span class="line">    .<span class="title function_">pipe</span>(gulp.<span class="title function_">dest</span>(<span class="string">&#x27;./public&#x27;</span>))</span><br><span class="line">)</span><br><span class="line"><span class="comment">// 压缩css</span></span><br><span class="line">gulp.<span class="title function_">task</span>(<span class="string">&#x27;minify-css&#x27;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> gulp.<span class="title function_">src</span>([<span class="string">&#x27;./public/**/*.css&#x27;</span>])</span><br><span class="line">        .<span class="title function_">pipe</span>(<span class="title function_">cleanCSS</span>(&#123;</span><br><span class="line">            <span class="attr">compatibility</span>: <span class="string">&#x27;ie11&#x27;</span></span><br><span class="line">        &#125;))</span><br><span class="line">        .<span class="title function_">pipe</span>(gulp.<span class="title function_">dest</span>(<span class="string">&#x27;./public&#x27;</span>));</span><br><span class="line">&#125;);</span><br><span class="line"><span class="comment">// 压缩html</span></span><br><span class="line">gulp.<span class="title function_">task</span>(<span class="string">&#x27;minify-html&#x27;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> gulp.<span class="title function_">src</span>(<span class="string">&#x27;./public/**/*.html&#x27;</span>)</span><br><span class="line">        .<span class="title function_">pipe</span>(<span class="title function_">htmlclean</span>())</span><br><span class="line">        .<span class="title function_">pipe</span>(<span class="title function_">htmlmin</span>(&#123;</span><br><span class="line">            <span class="attr">removeComments</span>: <span class="literal">true</span>,   <span class="comment">// 清除 html 注释</span></span><br><span class="line">            <span class="attr">collapseWhitespace</span>: <span class="literal">true</span>, <span class="comment">// 压缩 html</span></span><br><span class="line">            <span class="attr">collapseBooleanAttributes</span>: <span class="literal">true</span>,</span><br><span class="line">            <span class="comment">// 省略布尔属性的值，例如：&lt;input checked=&quot;true&quot;/&gt; ==&gt; &lt;input /&gt;</span></span><br><span class="line">            <span class="attr">removeEmptyAttributes</span>: <span class="literal">true</span>,</span><br><span class="line">            <span class="comment">// 删除所有空格作属性值，例如：&lt;input id=&quot;&quot; /&gt; ==&gt; &lt;input /&gt;</span></span><br><span class="line">            <span class="attr">removeScriptTypeAttributes</span>: <span class="literal">true</span>,</span><br><span class="line">            <span class="comment">// 删除&lt;script&gt;的type=&quot;text/javascript&quot;</span></span><br><span class="line">            <span class="attr">removeStyleLinkTypeAttributes</span>: <span class="literal">true</span>,</span><br><span class="line">            <span class="comment">// 删除&lt;style&gt;和&lt;link&gt;的 type=&quot;text/css&quot;</span></span><br><span class="line">            <span class="attr">minifyJS</span>: <span class="literal">true</span>, <span class="comment">// 压缩页面 JS</span></span><br><span class="line">            <span class="attr">minifyCSS</span>: <span class="literal">true</span>, <span class="comment">// 压缩页面 CSS</span></span><br><span class="line">            <span class="attr">minifyURLs</span>: <span class="literal">true</span> <span class="comment">// 压缩页面 URL</span></span><br><span class="line">        &#125;))</span><br><span class="line">        .<span class="title function_">pipe</span>(gulp.<span class="title function_">dest</span>(<span class="string">&#x27;./public&#x27;</span>))</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 运行gulp命令时依次执行以下任务</span></span><br><span class="line">gulp.<span class="title function_">task</span>(<span class="string">&#x27;default&#x27;</span>, gulp.<span class="title function_">parallel</span>(</span><br><span class="line">  <span class="string">&#x27;compress&#x27;</span>, <span class="string">&#x27;minify-css&#x27;</span>, <span class="string">&#x27;minify-html&#x27;</span></span><br><span class="line">))</span><br></pre></td></tr></table></figure><p><strong>使用：</strong></p><p>在 hexo g 之后运行 gulp 即可</p><p>例如：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo cl &amp;&amp; hexo g &amp;&amp; gulp &amp;&amp; hexo d</span><br></pre></td></tr></table></figure><h2 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h2><p>html有问题，未解决</p><h1 id="插入视频"><a href="#插入视频" class="headerlink" title="插入视频"></a>插入视频</h1><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">embed</span> <span class="attr">id</span>=<span class="string">&quot;pdfPlayer&quot;</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.mobaijun.com/pdf/JavaDevelopmentManual%28HuangshanEdition%29.pdf&quot;</span> <span class="attr">type</span>=<span class="string">&quot;application/pdf&quot;</span> <span class="attr">width</span>=<span class="string">&quot;100%&quot;</span> <span class="attr">height</span>=<span class="string">&quot;800&quot;</span> &gt;</span></span></span><br></pre></td></tr></table></figure><h1 id="飞机"><a href="#飞机" class="headerlink" title="飞机"></a>飞机</h1><ol><li>在BlogRoot/node_modules/hexo-theme-butterfly/layout/includes/header文件夹下新建一个plane.pug文件。</li></ol>]]></content>
      
      
      <categories>
          
          <category> 博客搭建 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 🦋Butterfly </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Butterfly主题美化（三）</title>
      <link href="/posts/96772ef/"/>
      <url>/posts/96772ef/</url>
      
        <content type="html"><![CDATA[<h1 id="Hexo-博客文章统计图"><a href="#Hexo-博客文章统计图" class="headerlink" title="Hexo 博客文章统计图"></a>Hexo 博客文章统计图</h1><a class="btn-beautify outline blue larger" href="https://blog.eurkon.com/post/1213ef82.html#%E6%96%B0%E5%BB%BA-charts-%E9%A1%B5%E9%9D%A2" title="Eurkon大佬的博客"><i class="far fa-hand-point-right"></i><span>Eurkon大佬的博客</span></a><h2 id="新建-charts-页面"><a href="#新建-charts-页面" class="headerlink" title="新建 charts 页面"></a>新建 charts 页面</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new page charts</span><br></pre></td></tr></table></figure><h2 id="引入新建-charts-页面"><a href="#引入新建-charts-页面" class="headerlink" title="引入新建 charts 页面"></a>引入新建 charts 页面</h2><p>以 butterfly 主题为例，可以在 <code>[Blogroot]\_config.butterfly.yml</code> 的 <code>inject</code> 配置项中引入 <code>echart.js</code> 文件</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">inject:</span></span><br><span class="line">  <span class="attr">head:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">&lt;script</span> <span class="string">src=&quot;https://npm.elemecdn.com/echarts@4.9.0/dist/echarts.min.js&quot;&gt;&lt;/script&gt;</span></span><br></pre></td></tr></table></figure><h2 id="文章统计代码"><a href="#文章统计代码" class="headerlink" title="文章统计代码"></a>文章统计代码</h2><p>以 butterfly 主题为例，可以在 <code>[Blogroot]\themes\butterfly\scripts\helpers\</code> 目录下新建 <code>charts.js</code> 文件，然后添加以下内容：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> cheerio = <span class="built_in">require</span>(<span class="string">&#x27;cheerio&#x27;</span>)</span><br><span class="line"><span class="keyword">const</span> moment = <span class="built_in">require</span>(<span class="string">&#x27;moment&#x27;</span>)</span><br><span class="line"></span><br><span class="line">hexo.<span class="property">extend</span>.<span class="property">filter</span>.<span class="title function_">register</span>(<span class="string">&#x27;after_render:html&#x27;</span>, <span class="keyword">function</span> (<span class="params">locals</span>) &#123;</span><br><span class="line">  <span class="keyword">const</span> $ = cheerio.<span class="title function_">load</span>(locals)</span><br><span class="line">  <span class="keyword">const</span> post = $(<span class="string">&#x27;#posts-chart&#x27;</span>)</span><br><span class="line">  <span class="keyword">const</span> tag = $(<span class="string">&#x27;#tags-chart&#x27;</span>)</span><br><span class="line">  <span class="keyword">const</span> category = $(<span class="string">&#x27;#categories-chart&#x27;</span>)</span><br><span class="line">  <span class="keyword">const</span> htmlEncode = <span class="literal">false</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (post.<span class="property">length</span> &gt; <span class="number">0</span> || tag.<span class="property">length</span> &gt; <span class="number">0</span> || category.<span class="property">length</span> &gt; <span class="number">0</span>) &#123;</span><br><span class="line">    <span class="keyword">if</span> (post.<span class="property">length</span> &gt; <span class="number">0</span> &amp;&amp; $(<span class="string">&#x27;#postsChart&#x27;</span>).<span class="property">length</span> === <span class="number">0</span>) &#123;</span><br><span class="line">      <span class="keyword">if</span> (post.<span class="title function_">attr</span>(<span class="string">&#x27;data-encode&#x27;</span>) === <span class="string">&#x27;true&#x27;</span>) htmlEncode = <span class="literal">true</span></span><br><span class="line">      post.<span class="title function_">after</span>(<span class="title function_">postsChart</span>(post.<span class="title function_">attr</span>(<span class="string">&#x27;data-start&#x27;</span>)))</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (tag.<span class="property">length</span> &gt; <span class="number">0</span> &amp;&amp; $(<span class="string">&#x27;#tagsChart&#x27;</span>).<span class="property">length</span> === <span class="number">0</span>) &#123;</span><br><span class="line">      <span class="keyword">if</span> (tag.<span class="title function_">attr</span>(<span class="string">&#x27;data-encode&#x27;</span>) === <span class="string">&#x27;true&#x27;</span>) htmlEncode = <span class="literal">true</span></span><br><span class="line">      tag.<span class="title function_">after</span>(<span class="title function_">tagsChart</span>(tag.<span class="title function_">attr</span>(<span class="string">&#x27;data-length&#x27;</span>)))</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (category.<span class="property">length</span> &gt; <span class="number">0</span> &amp;&amp; $(<span class="string">&#x27;#categoriesChart&#x27;</span>).<span class="property">length</span> === <span class="number">0</span>) &#123;</span><br><span class="line">      <span class="keyword">if</span> (category.<span class="title function_">attr</span>(<span class="string">&#x27;data-encode&#x27;</span>) === <span class="string">&#x27;true&#x27;</span>) htmlEncode = <span class="literal">true</span></span><br><span class="line">      category.<span class="title function_">after</span>(<span class="title function_">categoriesChart</span>(category.<span class="title function_">attr</span>(<span class="string">&#x27;data-parent&#x27;</span>)))</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (htmlEncode) &#123;</span><br><span class="line">      <span class="keyword">return</span> $.<span class="title function_">root</span>().<span class="title function_">html</span>().<span class="title function_">replace</span>(<span class="regexp">/&amp;amp;#/g</span>, <span class="string">&#x27;&amp;#&#x27;</span>)</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="keyword">return</span> $.<span class="title function_">root</span>().<span class="title function_">html</span>()</span><br><span class="line">    &#125;</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> locals</span><br><span class="line">  &#125;</span><br><span class="line">&#125;, <span class="number">15</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">postsChart</span> (startMonth) &#123;</span><br><span class="line">  <span class="keyword">const</span> startDate = <span class="title function_">moment</span>(startMonth || <span class="string">&#x27;2020-01&#x27;</span>)</span><br><span class="line">  <span class="keyword">const</span> endDate = <span class="title function_">moment</span>()</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> monthMap = <span class="keyword">new</span> <span class="title class_">Map</span>()</span><br><span class="line">  <span class="keyword">const</span> dayTime = <span class="number">3600</span> * <span class="number">24</span> * <span class="number">1000</span></span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">let</span> time = startDate; time &lt;= endDate; time += dayTime) &#123;</span><br><span class="line">    <span class="keyword">const</span> month = <span class="title function_">moment</span>(time).<span class="title function_">format</span>(<span class="string">&#x27;YYYY-MM&#x27;</span>)</span><br><span class="line">    <span class="keyword">if</span> (!monthMap.<span class="title function_">has</span>(month)) &#123;</span><br><span class="line">      monthMap.<span class="title function_">set</span>(month, <span class="number">0</span>)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  hexo.<span class="property">locals</span>.<span class="title function_">get</span>(<span class="string">&#x27;posts&#x27;</span>).<span class="title function_">forEach</span>(<span class="keyword">function</span> (<span class="params">post</span>) &#123;</span><br><span class="line">    <span class="keyword">const</span> month = post.<span class="property">date</span>.<span class="title function_">format</span>(<span class="string">&#x27;YYYY-MM&#x27;</span>)</span><br><span class="line">    <span class="keyword">if</span> (monthMap.<span class="title function_">has</span>(month)) &#123;</span><br><span class="line">      monthMap.<span class="title function_">set</span>(month, monthMap.<span class="title function_">get</span>(month) + <span class="number">1</span>)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;)</span><br><span class="line">  <span class="keyword">const</span> monthArr = <span class="title class_">JSON</span>.<span class="title function_">stringify</span>([...monthMap.<span class="title function_">keys</span>()])</span><br><span class="line">  <span class="keyword">const</span> monthValueArr = <span class="title class_">JSON</span>.<span class="title function_">stringify</span>([...monthMap.<span class="title function_">values</span>()])</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> <span class="string">`</span></span><br><span class="line"><span class="string">  &lt;script id=&quot;postsChart&quot;&gt;</span></span><br><span class="line"><span class="string">    var color = document.documentElement.getAttribute(&#x27;data-theme&#x27;) === &#x27;light&#x27; ? &#x27;#4c4948&#x27; : &#x27;rgba(255,255,255,0.7)&#x27;</span></span><br><span class="line"><span class="string">    var postsChart = echarts.init(document.getElementById(&#x27;posts-chart&#x27;), &#x27;light&#x27;);</span></span><br><span class="line"><span class="string">    var postsOption = &#123;</span></span><br><span class="line"><span class="string">      title: &#123;</span></span><br><span class="line"><span class="string">        text: &#x27;文章发布统计图&#x27;,</span></span><br><span class="line"><span class="string">        x: &#x27;center&#x27;,</span></span><br><span class="line"><span class="string">        textStyle: &#123;</span></span><br><span class="line"><span class="string">          color: color</span></span><br><span class="line"><span class="string">        &#125;</span></span><br><span class="line"><span class="string">      &#125;,</span></span><br><span class="line"><span class="string">      tooltip: &#123;</span></span><br><span class="line"><span class="string">        trigger: &#x27;axis&#x27;</span></span><br><span class="line"><span class="string">      &#125;,</span></span><br><span class="line"><span class="string">      xAxis: &#123;</span></span><br><span class="line"><span class="string">        name: &#x27;日期&#x27;,</span></span><br><span class="line"><span class="string">        type: &#x27;category&#x27;,</span></span><br><span class="line"><span class="string">        boundaryGap: false,</span></span><br><span class="line"><span class="string">        nameTextStyle: &#123;</span></span><br><span class="line"><span class="string">          color: color</span></span><br><span class="line"><span class="string">        &#125;,</span></span><br><span class="line"><span class="string">        axisTick: &#123;</span></span><br><span class="line"><span class="string">          show: false</span></span><br><span class="line"><span class="string">        &#125;,</span></span><br><span class="line"><span class="string">        axisLabel: &#123;</span></span><br><span class="line"><span class="string">          show: true,</span></span><br><span class="line"><span class="string">          color: color</span></span><br><span class="line"><span class="string">        &#125;,</span></span><br><span class="line"><span class="string">        axisLine: &#123;</span></span><br><span class="line"><span class="string">          show: true,</span></span><br><span class="line"><span class="string">          lineStyle: &#123;</span></span><br><span class="line"><span class="string">            color: color</span></span><br><span class="line"><span class="string">          &#125;</span></span><br><span class="line"><span class="string">        &#125;,</span></span><br><span class="line"><span class="string">        data: <span class="subst">$&#123;monthArr&#125;</span></span></span><br><span class="line"><span class="string">      &#125;,</span></span><br><span class="line"><span class="string">      yAxis: &#123;</span></span><br><span class="line"><span class="string">        name: &#x27;文章篇数&#x27;,</span></span><br><span class="line"><span class="string">        type: &#x27;value&#x27;,</span></span><br><span class="line"><span class="string">        nameTextStyle: &#123;</span></span><br><span class="line"><span class="string">          color: color</span></span><br><span class="line"><span class="string">        &#125;,</span></span><br><span class="line"><span class="string">        splitLine: &#123;</span></span><br><span class="line"><span class="string">          show: false</span></span><br><span class="line"><span class="string">        &#125;,</span></span><br><span class="line"><span class="string">        axisTick: &#123;</span></span><br><span class="line"><span class="string">          show: false</span></span><br><span class="line"><span class="string">        &#125;,</span></span><br><span class="line"><span class="string">        axisLabel: &#123;</span></span><br><span class="line"><span class="string">          show: true,</span></span><br><span class="line"><span class="string">          color: color</span></span><br><span class="line"><span class="string">        &#125;,</span></span><br><span class="line"><span class="string">        axisLine: &#123;</span></span><br><span class="line"><span class="string">          show: true,</span></span><br><span class="line"><span class="string">          lineStyle: &#123;</span></span><br><span class="line"><span class="string">            color: color</span></span><br><span class="line"><span class="string">          &#125;</span></span><br><span class="line"><span class="string">        &#125;</span></span><br><span class="line"><span class="string">      &#125;,</span></span><br><span class="line"><span class="string">      series: [&#123;</span></span><br><span class="line"><span class="string">        name: &#x27;文章篇数&#x27;,</span></span><br><span class="line"><span class="string">        type: &#x27;line&#x27;,</span></span><br><span class="line"><span class="string">        smooth: true,</span></span><br><span class="line"><span class="string">        lineStyle: &#123;</span></span><br><span class="line"><span class="string">            width: 0</span></span><br><span class="line"><span class="string">        &#125;,</span></span><br><span class="line"><span class="string">        showSymbol: false,</span></span><br><span class="line"><span class="string">        itemStyle: &#123;</span></span><br><span class="line"><span class="string">          opacity: 1,</span></span><br><span class="line"><span class="string">          color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [&#123;</span></span><br><span class="line"><span class="string">            offset: 0,</span></span><br><span class="line"><span class="string">            color: &#x27;rgba(128, 255, 165)&#x27;</span></span><br><span class="line"><span class="string">          &#125;,</span></span><br><span class="line"><span class="string">          &#123;</span></span><br><span class="line"><span class="string">            offset: 1,</span></span><br><span class="line"><span class="string">            color: &#x27;rgba(1, 191, 236)&#x27;</span></span><br><span class="line"><span class="string">          &#125;])</span></span><br><span class="line"><span class="string">        &#125;,</span></span><br><span class="line"><span class="string">        areaStyle: &#123;</span></span><br><span class="line"><span class="string">          opacity: 1,</span></span><br><span class="line"><span class="string">          color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [&#123;</span></span><br><span class="line"><span class="string">            offset: 0,</span></span><br><span class="line"><span class="string">            color: &#x27;rgba(128, 255, 165)&#x27;</span></span><br><span class="line"><span class="string">          &#125;, &#123;</span></span><br><span class="line"><span class="string">            offset: 1,</span></span><br><span class="line"><span class="string">            color: &#x27;rgba(1, 191, 236)&#x27;</span></span><br><span class="line"><span class="string">          &#125;])</span></span><br><span class="line"><span class="string">        &#125;,</span></span><br><span class="line"><span class="string">        data: <span class="subst">$&#123;monthValueArr&#125;</span>,</span></span><br><span class="line"><span class="string">        markLine: &#123;</span></span><br><span class="line"><span class="string">          data: [&#123;</span></span><br><span class="line"><span class="string">            name: &#x27;平均值&#x27;,</span></span><br><span class="line"><span class="string">            type: &#x27;average&#x27;,</span></span><br><span class="line"><span class="string">            label: &#123;</span></span><br><span class="line"><span class="string">              color: color</span></span><br><span class="line"><span class="string">            &#125;</span></span><br><span class="line"><span class="string">          &#125;]</span></span><br><span class="line"><span class="string">        &#125;</span></span><br><span class="line"><span class="string">      &#125;]</span></span><br><span class="line"><span class="string">    &#125;;</span></span><br><span class="line"><span class="string">    postsChart.setOption(postsOption);</span></span><br><span class="line"><span class="string">    window.addEventListener(&#x27;resize&#x27;, () =&gt; &#123; </span></span><br><span class="line"><span class="string">      postsChart.resize();</span></span><br><span class="line"><span class="string">    &#125;);</span></span><br><span class="line"><span class="string">    postsChart.on(&#x27;click&#x27;, &#x27;series&#x27;, (event) =&gt; &#123;</span></span><br><span class="line"><span class="string">      if (event.componentType === &#x27;series&#x27;) window.location.href = &#x27;/archives/&#x27; + event.name.replace(&#x27;-&#x27;, &#x27;/&#x27;);</span></span><br><span class="line"><span class="string">    &#125;);</span></span><br><span class="line"><span class="string">  &lt;/script&gt;`</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">tagsChart</span> (len) &#123;</span><br><span class="line">  <span class="keyword">const</span> tagArr = []</span><br><span class="line">  hexo.<span class="property">locals</span>.<span class="title function_">get</span>(<span class="string">&#x27;tags&#x27;</span>).<span class="title function_">map</span>(<span class="keyword">function</span> (<span class="params">tag</span>) &#123;</span><br><span class="line">    tagArr.<span class="title function_">push</span>(&#123; <span class="attr">name</span>: tag.<span class="property">name</span>, <span class="attr">value</span>: tag.<span class="property">length</span>, <span class="attr">path</span>: tag.<span class="property">path</span> &#125;)</span><br><span class="line">  &#125;)</span><br><span class="line">  tagArr.<span class="title function_">sort</span>(<span class="function">(<span class="params">a, b</span>) =&gt;</span> &#123; <span class="keyword">return</span> b.<span class="property">value</span> - a.<span class="property">value</span> &#125;)</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> dataLength = <span class="title class_">Math</span>.<span class="title function_">min</span>(tagArr.<span class="property">length</span>, len) || tagArr.<span class="property">length</span></span><br><span class="line">  <span class="keyword">const</span> tagNameArr = []</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; dataLength; i++) &#123;</span><br><span class="line">    tagNameArr.<span class="title function_">push</span>(tagArr[i].<span class="property">name</span>)</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">const</span> tagNameArrJson = <span class="title class_">JSON</span>.<span class="title function_">stringify</span>(tagNameArr)</span><br><span class="line">  <span class="keyword">const</span> tagArrJson = <span class="title class_">JSON</span>.<span class="title function_">stringify</span>(tagArr)</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> <span class="string">`</span></span><br><span class="line"><span class="string">  &lt;script id=&quot;tagsChart&quot;&gt;</span></span><br><span class="line"><span class="string">    var color = document.documentElement.getAttribute(&#x27;data-theme&#x27;) === &#x27;light&#x27; ? &#x27;#4c4948&#x27; : &#x27;rgba(255,255,255,0.7)&#x27;</span></span><br><span class="line"><span class="string">    var tagsChart = echarts.init(document.getElementById(&#x27;tags-chart&#x27;), &#x27;light&#x27;);</span></span><br><span class="line"><span class="string">    var tagsOption = &#123;</span></span><br><span class="line"><span class="string">      title: &#123;</span></span><br><span class="line"><span class="string">        text: &#x27;Top <span class="subst">$&#123;dataLength&#125;</span> 标签统计图&#x27;,</span></span><br><span class="line"><span class="string">        x: &#x27;center&#x27;,</span></span><br><span class="line"><span class="string">        textStyle: &#123;</span></span><br><span class="line"><span class="string">          color: color</span></span><br><span class="line"><span class="string">        &#125;</span></span><br><span class="line"><span class="string">      &#125;,</span></span><br><span class="line"><span class="string">      tooltip: &#123;&#125;,</span></span><br><span class="line"><span class="string">      xAxis: &#123;</span></span><br><span class="line"><span class="string">        name: &#x27;标签&#x27;,</span></span><br><span class="line"><span class="string">        type: &#x27;category&#x27;,</span></span><br><span class="line"><span class="string">        nameTextStyle: &#123;</span></span><br><span class="line"><span class="string">          color: color</span></span><br><span class="line"><span class="string">        &#125;,</span></span><br><span class="line"><span class="string">        axisTick: &#123;</span></span><br><span class="line"><span class="string">          show: false</span></span><br><span class="line"><span class="string">        &#125;,</span></span><br><span class="line"><span class="string">        axisLabel: &#123;</span></span><br><span class="line"><span class="string">          show: true,</span></span><br><span class="line"><span class="string">          color: color,</span></span><br><span class="line"><span class="string">          interval: 0</span></span><br><span class="line"><span class="string">        &#125;,</span></span><br><span class="line"><span class="string">        axisLine: &#123;</span></span><br><span class="line"><span class="string">          show: true,</span></span><br><span class="line"><span class="string">          lineStyle: &#123;</span></span><br><span class="line"><span class="string">            color: color</span></span><br><span class="line"><span class="string">          &#125;</span></span><br><span class="line"><span class="string">        &#125;,</span></span><br><span class="line"><span class="string">        data: <span class="subst">$&#123;tagNameArrJson&#125;</span></span></span><br><span class="line"><span class="string">      &#125;,</span></span><br><span class="line"><span class="string">      yAxis: &#123;</span></span><br><span class="line"><span class="string">        name: &#x27;文章篇数&#x27;,</span></span><br><span class="line"><span class="string">        type: &#x27;value&#x27;,</span></span><br><span class="line"><span class="string">        splitLine: &#123;</span></span><br><span class="line"><span class="string">          show: false</span></span><br><span class="line"><span class="string">        &#125;,</span></span><br><span class="line"><span class="string">        nameTextStyle: &#123;</span></span><br><span class="line"><span class="string">          color: color</span></span><br><span class="line"><span class="string">        &#125;,</span></span><br><span class="line"><span class="string">        axisTick: &#123;</span></span><br><span class="line"><span class="string">          show: false</span></span><br><span class="line"><span class="string">        &#125;,</span></span><br><span class="line"><span class="string">        axisLabel: &#123;</span></span><br><span class="line"><span class="string">          show: true,</span></span><br><span class="line"><span class="string">          color: color</span></span><br><span class="line"><span class="string">        &#125;,</span></span><br><span class="line"><span class="string">        axisLine: &#123;</span></span><br><span class="line"><span class="string">          show: true,</span></span><br><span class="line"><span class="string">          lineStyle: &#123;</span></span><br><span class="line"><span class="string">            color: color</span></span><br><span class="line"><span class="string">          &#125;</span></span><br><span class="line"><span class="string">        &#125;</span></span><br><span class="line"><span class="string">      &#125;,</span></span><br><span class="line"><span class="string">      series: [&#123;</span></span><br><span class="line"><span class="string">        name: &#x27;文章篇数&#x27;,</span></span><br><span class="line"><span class="string">        type: &#x27;bar&#x27;,</span></span><br><span class="line"><span class="string">        data: <span class="subst">$&#123;tagArrJson&#125;</span>,</span></span><br><span class="line"><span class="string">        itemStyle: &#123;</span></span><br><span class="line"><span class="string">          borderRadius: [5, 5, 0, 0],</span></span><br><span class="line"><span class="string">          color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [&#123;</span></span><br><span class="line"><span class="string">            offset: 0,</span></span><br><span class="line"><span class="string">            color: &#x27;rgba(128, 255, 165)&#x27;</span></span><br><span class="line"><span class="string">          &#125;,</span></span><br><span class="line"><span class="string">          &#123;</span></span><br><span class="line"><span class="string">            offset: 1,</span></span><br><span class="line"><span class="string">            color: &#x27;rgba(1, 191, 236)&#x27;</span></span><br><span class="line"><span class="string">          &#125;])</span></span><br><span class="line"><span class="string">        &#125;,</span></span><br><span class="line"><span class="string">        emphasis: &#123;</span></span><br><span class="line"><span class="string">          itemStyle: &#123;</span></span><br><span class="line"><span class="string">            color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [&#123;</span></span><br><span class="line"><span class="string">              offset: 0,</span></span><br><span class="line"><span class="string">              color: &#x27;rgba(128, 255, 195)&#x27;</span></span><br><span class="line"><span class="string">            &#125;,</span></span><br><span class="line"><span class="string">            &#123;</span></span><br><span class="line"><span class="string">              offset: 1,</span></span><br><span class="line"><span class="string">              color: &#x27;rgba(1, 211, 255)&#x27;</span></span><br><span class="line"><span class="string">            &#125;])</span></span><br><span class="line"><span class="string">          &#125;</span></span><br><span class="line"><span class="string">        &#125;,</span></span><br><span class="line"><span class="string">        markLine: &#123;</span></span><br><span class="line"><span class="string">          data: [&#123;</span></span><br><span class="line"><span class="string">            name: &#x27;平均值&#x27;,</span></span><br><span class="line"><span class="string">            type: &#x27;average&#x27;,</span></span><br><span class="line"><span class="string">            label: &#123;</span></span><br><span class="line"><span class="string">              color: color</span></span><br><span class="line"><span class="string">            &#125;</span></span><br><span class="line"><span class="string">          &#125;]</span></span><br><span class="line"><span class="string">        &#125;</span></span><br><span class="line"><span class="string">      &#125;]</span></span><br><span class="line"><span class="string">    &#125;;</span></span><br><span class="line"><span class="string">    tagsChart.setOption(tagsOption);</span></span><br><span class="line"><span class="string">    window.addEventListener(&#x27;resize&#x27;, () =&gt; &#123; </span></span><br><span class="line"><span class="string">      tagsChart.resize();</span></span><br><span class="line"><span class="string">    &#125;);</span></span><br><span class="line"><span class="string">    tagsChart.on(&#x27;click&#x27;, &#x27;series&#x27;, (event) =&gt; &#123;</span></span><br><span class="line"><span class="string">      if(event.data.path) window.location.href = &#x27;/&#x27; + event.data.path;</span></span><br><span class="line"><span class="string">    &#125;);</span></span><br><span class="line"><span class="string">  &lt;/script&gt;`</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">categoriesChart</span> (dataParent) &#123;</span><br><span class="line">  <span class="keyword">const</span> categoryArr = []</span><br><span class="line">  <span class="keyword">let</span> categoryParentFlag = <span class="literal">false</span></span><br><span class="line">  hexo.<span class="property">locals</span>.<span class="title function_">get</span>(<span class="string">&#x27;categories&#x27;</span>).<span class="title function_">map</span>(<span class="keyword">function</span> (<span class="params">category</span>) &#123;</span><br><span class="line">    <span class="keyword">if</span> (category.<span class="property">parent</span>) categoryParentFlag = <span class="literal">true</span></span><br><span class="line">    categoryArr.<span class="title function_">push</span>(&#123;</span><br><span class="line">      <span class="attr">name</span>: category.<span class="property">name</span>,</span><br><span class="line">      <span class="attr">value</span>: category.<span class="property">length</span>,</span><br><span class="line">      <span class="attr">path</span>: category.<span class="property">path</span>,</span><br><span class="line">      <span class="attr">id</span>: category.<span class="property">_id</span>,</span><br><span class="line">      <span class="attr">parentId</span>: category.<span class="property">parent</span> || <span class="string">&#x27;0&#x27;</span></span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;)</span><br><span class="line">  categoryParentFlag = categoryParentFlag &amp;&amp; dataParent === <span class="string">&#x27;true&#x27;</span></span><br><span class="line">  categoryArr.<span class="title function_">sort</span>(<span class="function">(<span class="params">a, b</span>) =&gt;</span> &#123; <span class="keyword">return</span> b.<span class="property">value</span> - a.<span class="property">value</span> &#125;)</span><br><span class="line">  <span class="keyword">function</span> <span class="title function_">translateListToTree</span> (data, parent) &#123;</span><br><span class="line">    <span class="keyword">let</span> tree = []</span><br><span class="line">    <span class="keyword">let</span> temp</span><br><span class="line">    data.<span class="title function_">forEach</span>(<span class="function">(<span class="params">item, index</span>) =&gt;</span> &#123;</span><br><span class="line">      <span class="keyword">if</span> (data[index].<span class="property">parentId</span> == parent) &#123;</span><br><span class="line">        <span class="keyword">let</span> obj = data[index];</span><br><span class="line">        temp = <span class="title function_">translateListToTree</span>(data, data[index].<span class="property">id</span>);</span><br><span class="line">        <span class="keyword">if</span> (temp.<span class="property">length</span> &gt; <span class="number">0</span>) &#123;</span><br><span class="line">          obj.<span class="property">children</span> = temp</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (tree.<span class="title function_">indexOf</span>())</span><br><span class="line">          tree.<span class="title function_">push</span>(obj)</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">    <span class="keyword">return</span> tree</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">const</span> categoryNameJson = <span class="title class_">JSON</span>.<span class="title function_">stringify</span>(categoryArr.<span class="title function_">map</span>(<span class="keyword">function</span> (<span class="params">category</span>) &#123; <span class="keyword">return</span> category.<span class="property">name</span> &#125;))</span><br><span class="line">  <span class="keyword">const</span> categoryArrJson = <span class="title class_">JSON</span>.<span class="title function_">stringify</span>(categoryArr)</span><br><span class="line">  <span class="keyword">const</span> categoryArrParentJson = <span class="title class_">JSON</span>.<span class="title function_">stringify</span>(<span class="title function_">translateListToTree</span>(categoryArr, <span class="string">&#x27;0&#x27;</span>))</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> <span class="string">`</span></span><br><span class="line"><span class="string">  &lt;script id=&quot;categoriesChart&quot;&gt;</span></span><br><span class="line"><span class="string">    var color = document.documentElement.getAttribute(&#x27;data-theme&#x27;) === &#x27;light&#x27; ? &#x27;#4c4948&#x27; : &#x27;rgba(255,255,255,0.7)&#x27;</span></span><br><span class="line"><span class="string">    var categoriesChart = echarts.init(document.getElementById(&#x27;categories-chart&#x27;), &#x27;light&#x27;);</span></span><br><span class="line"><span class="string">    var categoryParentFlag = <span class="subst">$&#123;categoryParentFlag&#125;</span></span></span><br><span class="line"><span class="string">    var categoriesOption = &#123;</span></span><br><span class="line"><span class="string">      title: &#123;</span></span><br><span class="line"><span class="string">        text: &#x27;文章分类统计图&#x27;,</span></span><br><span class="line"><span class="string">        x: &#x27;center&#x27;,</span></span><br><span class="line"><span class="string">        textStyle: &#123;</span></span><br><span class="line"><span class="string">          color: color</span></span><br><span class="line"><span class="string">        &#125;</span></span><br><span class="line"><span class="string">      &#125;,</span></span><br><span class="line"><span class="string">      legend: &#123;</span></span><br><span class="line"><span class="string">        top: &#x27;bottom&#x27;,</span></span><br><span class="line"><span class="string">        data: <span class="subst">$&#123;categoryNameJson&#125;</span>,</span></span><br><span class="line"><span class="string">        textStyle: &#123;</span></span><br><span class="line"><span class="string">          color: color</span></span><br><span class="line"><span class="string">        &#125;</span></span><br><span class="line"><span class="string">      &#125;,</span></span><br><span class="line"><span class="string">      tooltip: &#123;</span></span><br><span class="line"><span class="string">        trigger: &#x27;item&#x27;</span></span><br><span class="line"><span class="string">      &#125;,</span></span><br><span class="line"><span class="string">      series: []</span></span><br><span class="line"><span class="string">    &#125;;</span></span><br><span class="line"><span class="string">    categoriesOption.series.push(</span></span><br><span class="line"><span class="string">      categoryParentFlag ? </span></span><br><span class="line"><span class="string">      &#123;</span></span><br><span class="line"><span class="string">        nodeClick :false,</span></span><br><span class="line"><span class="string">        name: &#x27;文章篇数&#x27;,</span></span><br><span class="line"><span class="string">        type: &#x27;sunburst&#x27;,</span></span><br><span class="line"><span class="string">        radius: [&#x27;15%&#x27;, &#x27;90%&#x27;],</span></span><br><span class="line"><span class="string">        center: [&#x27;50%&#x27;, &#x27;55%&#x27;],</span></span><br><span class="line"><span class="string">        sort: &#x27;desc&#x27;,</span></span><br><span class="line"><span class="string">        data: <span class="subst">$&#123;categoryArrParentJson&#125;</span>,</span></span><br><span class="line"><span class="string">        itemStyle: &#123;</span></span><br><span class="line"><span class="string">          borderColor: &#x27;#fff&#x27;,</span></span><br><span class="line"><span class="string">          borderWidth: 2,</span></span><br><span class="line"><span class="string">          emphasis: &#123;</span></span><br><span class="line"><span class="string">            focus: &#x27;ancestor&#x27;,</span></span><br><span class="line"><span class="string">            shadowBlur: 10,</span></span><br><span class="line"><span class="string">            shadowOffsetX: 0,</span></span><br><span class="line"><span class="string">            shadowColor: &#x27;rgba(255, 255, 255, 0.5)&#x27;</span></span><br><span class="line"><span class="string">          &#125;</span></span><br><span class="line"><span class="string">        &#125;</span></span><br><span class="line"><span class="string">      &#125;</span></span><br><span class="line"><span class="string">      :</span></span><br><span class="line"><span class="string">      &#123;</span></span><br><span class="line"><span class="string">        name: &#x27;文章篇数&#x27;,</span></span><br><span class="line"><span class="string">        type: &#x27;pie&#x27;,</span></span><br><span class="line"><span class="string">        radius: [30, 80],</span></span><br><span class="line"><span class="string">        roseType: &#x27;area&#x27;,</span></span><br><span class="line"><span class="string">        label: &#123;</span></span><br><span class="line"><span class="string">          color: color,</span></span><br><span class="line"><span class="string">          formatter: &#x27;&#123;b&#125; : &#123;c&#125; (&#123;d&#125;%)&#x27;</span></span><br><span class="line"><span class="string">        &#125;,</span></span><br><span class="line"><span class="string">        data: <span class="subst">$&#123;categoryArrJson&#125;</span>,</span></span><br><span class="line"><span class="string">        itemStyle: &#123;</span></span><br><span class="line"><span class="string">          emphasis: &#123;</span></span><br><span class="line"><span class="string">            shadowBlur: 10,</span></span><br><span class="line"><span class="string">            shadowOffsetX: 0,</span></span><br><span class="line"><span class="string">            shadowColor: &#x27;rgba(255, 255, 255, 0.5)&#x27;</span></span><br><span class="line"><span class="string">          &#125;</span></span><br><span class="line"><span class="string">        &#125;</span></span><br><span class="line"><span class="string">      &#125;</span></span><br><span class="line"><span class="string">    )</span></span><br><span class="line"><span class="string">    categoriesChart.setOption(categoriesOption);</span></span><br><span class="line"><span class="string">    window.addEventListener(&#x27;resize&#x27;, () =&gt; &#123; </span></span><br><span class="line"><span class="string">      categoriesChart.resize();</span></span><br><span class="line"><span class="string">    &#125;);</span></span><br><span class="line"><span class="string">    categoriesChart.on(&#x27;click&#x27;, &#x27;series&#x27;, (event) =&gt; &#123;</span></span><br><span class="line"><span class="string">      if(event.data.path) window.location.href = &#x27;/&#x27; + event.data.path;</span></span><br><span class="line"><span class="string">    &#125;);</span></span><br><span class="line"><span class="string">  &lt;/script&gt;`</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="使用统计图"><a href="#使用统计图" class="headerlink" title="使用统计图"></a>使用统计图</h2><p>在上文新建的 <code>[Blogroot]\source\charts\index.md</code> 文件中添加以下内容：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 文章发布时间统计图 --&gt;</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;posts-chart&quot;</span> <span class="attr">data-start</span>=<span class="string">&quot;2021-01&quot;</span> <span class="attr">style</span>=<span class="string">&quot;border-radius: 8px; height: 300px; padding: 10px;&quot;</span>&gt;</span></span><span class="language-xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">&lt;!-- 文章标签统计图 --&gt;</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;tags-chart&quot;</span> <span class="attr">data-length</span>=<span class="string">&quot;10&quot;</span> <span class="attr">style</span>=<span class="string">&quot;border-radius: 8px; height: 300px; padding: 10px;&quot;</span>&gt;</span></span><span class="language-xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">&lt;!-- 文章分类统计图 --&gt;</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;categories-chart&quot;</span> <span class="attr">data-parent</span>=<span class="string">&quot;true&quot;</span> <span class="attr">style</span>=<span class="string">&quot;border-radius: 8px; height: 300px; padding: 10px;&quot;</span>&gt;</span></span><span class="language-xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br></pre></td></tr></table></figure><p>当然也可以在其他页面引入文章统计图，如果出现图表显示不全的现象可以修改 <code>div</code> 的 <code>height</code> 属性。。</p><ul><li><code>posts-chart</code> 的 <code>data-start=&quot;2021-01&quot;</code> 属性表示文章发布时间统计图仅显示 <code>2021-01</code> 及以后的文章数据。</li><li><code>tags-chart</code> 的 <code>data-length=&quot;10&quot;</code> 属性表示仅显示排名前 <code>10</code> 的标签。</li><li><code>categories-chart</code> 的 <code>data-parent=&quot;true&quot;</code> 属性表示 <code>有子分类</code> 时以旭日图显示分类，其他 <code>无子分类</code> 或 <code>设置为false</code> 或 <code>不设置该属性</code> 或 <code>设置为其他非true属性</code> 情况都以饼状图显示分类。</li></ul><h3 id="在归档页使用统计图"><a href="#在归档页使用统计图" class="headerlink" title="在归档页使用统计图"></a>在归档页使用统计图</h3><p>在[Blogroot]\themes\butterfly\layout\archive.pug</p><figure class="highlight diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">extends includes/layout.pug</span><br><span class="line"></span><br><span class="line">block content</span><br><span class="line">  include ./includes/mixins/article-sort.pug</span><br><span class="line">  #archive</span><br><span class="line"><span class="addition">+   &lt;div id=&quot;posts-chart&quot; data-start=&quot;2021-01&quot; style=&quot;height: 300px; padding: 10px;&quot;&gt;&lt;/div&gt;</span></span><br></pre></td></tr></table></figure><p>或者写成 pug 文件语法 <code>#posts-chart(data-start=&quot;2021-01&quot; style=&quot;height: 300px; padding: 10px;&quot;)</code>。</p><h3 id="在分类页使用统计图"><a href="#在分类页使用统计图" class="headerlink" title="在分类页使用统计图"></a>在分类页使用统计图</h3><p>在[Blogroot]\themes\butterfly\layout\category.pug</p><figure class="highlight diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">extends includes/layout.pug</span><br><span class="line"></span><br><span class="line">block content</span><br><span class="line">  if theme.category_ui == &#x27;index&#x27;</span><br><span class="line">    include ./includes/mixins/post-ui.pug</span><br><span class="line">    #recent-posts.recent-posts.category_ui</span><br><span class="line">      +postUI</span><br><span class="line">      include includes/pagination.pug</span><br><span class="line">  else</span><br><span class="line">    include ./includes/mixins/article-sort.pug</span><br><span class="line">    #category</span><br><span class="line"><span class="addition">+     &lt;div id=&quot;categories-chart&quot; data-parent=&quot;true&quot; style=&quot;height: 300px; padding: 10px;&quot;&gt;&lt;/div&gt;</span></span><br></pre></td></tr></table></figure><p>或者写成 pug 文件语法 <code>#categories-chart(data-parent=&quot;true&quot; style=&quot;height: 300px; padding: 10px;&quot;)</code>。</p><h3 id="在标签页使用统计图"><a href="#在标签页使用统计图" class="headerlink" title="在标签页使用统计图"></a>在标签页使用统计图</h3><p>在[Blogroot]\themes\butterfly\layout\tag.pug</p><figure class="highlight diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">extends includes/layout.pug</span><br><span class="line"></span><br><span class="line">block content</span><br><span class="line">  if theme.tag_ui == &#x27;index&#x27;</span><br><span class="line">    include ./includes/mixins/post-ui.pug</span><br><span class="line">    #recent-posts.recent-posts</span><br><span class="line">      +postUI</span><br><span class="line">      include includes/pagination.pug</span><br><span class="line">  else</span><br><span class="line">    include ./includes/mixins/article-sort.pug</span><br><span class="line">    #tag</span><br><span class="line"><span class="addition">+     &lt;div id=&quot;tags-chart&quot; data-length=&quot;10&quot; style=&quot;height: 300px; padding: 10px;&quot;&gt;&lt;/div&gt;</span></span><br></pre></td></tr></table></figure><p>或者写成 pug 文件语法 <code>#tags-chart(data-length=&quot;10&quot; style=&quot;height: 300px; padding: 10px;&quot;)</code>。</p><h2 id="Hexo-三连"><a href="#Hexo-三连" class="headerlink" title="Hexo 三连"></a>Hexo 三连</h2><p>执行 Hexo 三连</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo clean &amp;&amp; hexo g &amp;&amp; hexo s</span><br></pre></td></tr></table></figure><h1 id="分类页和标签页隐藏侧栏"><a href="#分类页和标签页隐藏侧栏" class="headerlink" title="分类页和标签页隐藏侧栏"></a>分类页和标签页隐藏侧栏</h1><h2 id="修改主题配置文件"><a href="#修改主题配置文件" class="headerlink" title="修改主题配置文件"></a>修改主题配置文件</h2><p>打开 <code>_config.butterfly.yml</code> 文件，找到 <code>aside</code> 配置项，添加 <code>友链页</code> 是否显示侧栏的设置项。</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">  <span class="attr">aside:</span></span><br><span class="line">    <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">hide:</span> <span class="literal">false</span></span><br><span class="line">    <span class="attr">button:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">mobile:</span> <span class="literal">true</span> <span class="comment"># display on mobile</span></span><br><span class="line">    <span class="attr">position:</span> <span class="string">right</span> <span class="comment"># left or right</span></span><br><span class="line">    <span class="attr">display:</span></span><br><span class="line">      <span class="attr">archive:</span> <span class="literal">false</span> <span class="comment"># 归档页隐藏侧栏</span></span><br><span class="line">      <span class="attr">tag:</span> <span class="literal">false</span> <span class="comment"># 分类页隐藏侧栏</span></span><br><span class="line">      <span class="attr">category:</span> <span class="literal">false</span> <span class="comment"># 标签页隐藏侧栏</span></span><br><span class="line"><span class="string">+</span>     <span class="attr">link:</span> <span class="literal">false</span> <span class="comment"># 友链页隐藏侧栏</span></span><br><span class="line">    <span class="attr">card_author:</span></span><br><span class="line">      <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">      <span class="attr">description:</span></span><br></pre></td></tr></table></figure><h2 id="普通页面"><a href="#普通页面" class="headerlink" title="普通页面"></a>普通页面</h2><p>修改<strong>Page Front-matter</strong></p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title:</span><br><span class="line">date:</span><br><span class="line">updated:</span><br><span class="line">type:</span><br><span class="line">comments:</span><br><span class="line">description:</span><br><span class="line">keywords:</span><br><span class="line">top<span class="emphasis">_img:</span></span><br><span class="line"><span class="emphasis">mathjax:</span></span><br><span class="line"><span class="emphasis">katex:</span></span><br><span class="line"><span class="emphasis">aside: false</span></span><br><span class="line"><span class="emphasis">aplayer:</span></span><br><span class="line"><span class="emphasis">highlight_</span>shrink:</span><br><span class="line">---</span><br></pre></td></tr></table></figure><h1 id="标签云增加文章数上下标"><a href="#标签云增加文章数上下标" class="headerlink" title="标签云增加文章数上下标"></a>标签云增加文章数上下标</h1><p>修改 page.js</p><p>搜索 <code>cloudTags</code> 函数，可以在 <code>\themes\butterfly\scripts\helpers\page.js</code> 找到绘制标签云的代码，增加 <code>&lt;sup&gt;$&#123;tag.length&#125;&lt;/sup&gt;</code> 或 <code>&lt;sub&gt;$&#123;tag.length&#125;&lt;/sub&gt;</code> 可绘制表示标签文章数的上下标。</p><figure class="highlight diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">hexo.extend.helper.register(&#x27;cloudTags&#x27;, function (options = &#123;&#125;) &#123;</span><br><span class="line">  const theme = hexo.theme.config</span><br><span class="line">  const env = this</span><br><span class="line">  let source = options.source</span><br><span class="line">  const minfontsize = options.minfontsize</span><br><span class="line">  const maxfontsize = options.maxfontsize</span><br><span class="line">  const limit = options.limit</span><br><span class="line">  const unit = options.unit || &#x27;px&#x27;</span><br><span class="line"></span><br><span class="line">  let result = &#x27;&#x27;</span><br><span class="line">  if (limit &gt; 0) &#123;</span><br><span class="line">    source = source.limit(limit)</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  const sizes = []</span><br><span class="line">  source.sort(&#x27;length&#x27;).forEach(tag =&gt; &#123;</span><br><span class="line">    const &#123; length &#125; = tag</span><br><span class="line">    if (sizes.includes(length)) return</span><br><span class="line">    sizes.push(length)</span><br><span class="line">  &#125;)</span><br><span class="line"></span><br><span class="line">  const length = sizes.length - 1</span><br><span class="line">  source.forEach(tag =&gt; &#123;</span><br><span class="line">    const ratio = length ? sizes.indexOf(tag.length) / length : 0</span><br><span class="line">    const size = minfontsize + ((maxfontsize - minfontsize) * ratio)</span><br><span class="line">    let style = `font-size: $&#123;parseFloat(size.toFixed(2))&#125;$&#123;unit&#125;;`</span><br><span class="line">    const color = &#x27;rgb(&#x27; + Math.floor(Math.random() * 201) + &#x27;, &#x27; + Math.floor(Math.random() * 201) + &#x27;, &#x27; + Math.floor(Math.random() * 201) + &#x27;)&#x27; // 0,0,0 -&gt; 200,200,200</span><br><span class="line">    style += ` color: $&#123;color&#125;`</span><br><span class="line"><span class="deletion">-   result += `&lt;a href=&quot;$&#123;env.url_for(tag.path)&#125;&quot; style=&quot;$&#123;style&#125;&quot;&gt;$&#123;tag.name&#125;&lt;/a&gt;`</span></span><br><span class="line"><span class="addition">+   result += `&lt;a href=&quot;$&#123;env.url_for(tag.path)&#125;&quot; style=&quot;$&#123;style&#125;&quot;&gt;$&#123;tag.name&#125;&lt;sup&gt;$&#123;tag.length&#125;&lt;/sup&gt;&lt;/a&gt;`</span></span><br><span class="line">  &#125;)</span><br><span class="line">  return result</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h1 id="标签云增加emoji表情"><a href="#标签云增加emoji表情" class="headerlink" title="标签云增加emoji表情"></a>标签云增加emoji表情</h1><h2 id="教程"><a href="#教程" class="headerlink" title="教程"></a>教程</h2><p>修改<strong>Page Front-matter</strong></p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">categories:</span></span><br><span class="line">  <span class="string">博客搭建:</span> <span class="string">📝</span></span><br><span class="line">  <span class="string">算法:</span> <span class="string">📜</span></span><br><span class="line">  <span class="string">嵌入式:</span> <span class="string">🎛️</span></span><br><span class="line">  <span class="string">物联网:</span> <span class="string">💻</span></span><br><span class="line"><span class="attr">tags:</span></span><br><span class="line">  <span class="attr">Butterfly:</span> <span class="string">🦋</span></span><br><span class="line">  <span class="string">阿里云:</span> <span class="string">🐳</span></span><br><span class="line">  <span class="string">云服务器:</span> <span class="string">📊</span></span><br><span class="line">  <span class="attr">ESP32:</span> <span class="string">💠</span></span><br><span class="line">  <span class="attr">algoritnm:</span> <span class="string">📖</span></span><br></pre></td></tr></table></figure><h2 id="Emoji-表情大全"><a href="#Emoji-表情大全" class="headerlink" title="Emoji 表情大全"></a>Emoji 表情大全</h2><p> <a href="https://blog.eurkon.com/post/f349e1f0.html">https://blog.eurkon.com/post/f349e1f0.html</a></p><h3 id="物品"><a href="#物品" class="headerlink" title="物品"></a>物品</h3><table><thead><tr><th>表情</th><th>名称</th><th>表情</th><th>名称</th><th>表情</th><th>名称</th></tr></thead><tbody><tr><td>👓</td><td>眼镜</td><td>🕶️</td><td>墨镜</td><td>🥽</td><td>护目镜</td></tr><tr><td>🥼</td><td>白大褂</td><td>🦺</td><td>救生衣</td><td>👔</td><td>领带</td></tr><tr><td>👕</td><td>T恤</td><td>👖</td><td>牛仔裤</td><td>🧣</td><td>围巾</td></tr><tr><td>🧤</td><td>手套</td><td>🧥</td><td>外套</td><td>🧦</td><td>袜子</td></tr><tr><td>👗</td><td>连衣裙</td><td>👘</td><td>和服</td><td>🥻</td><td>纱丽</td></tr><tr><td>🩱</td><td>连体泳衣</td><td>🩲</td><td>三角裤</td><td>🩳</td><td>短裤</td></tr><tr><td>👙</td><td>比基尼</td><td>👚</td><td>女装</td><td>👛</td><td>钱包</td></tr><tr><td>👜</td><td>手提包</td><td>👝</td><td>手袋</td><td>🛍️</td><td>购物袋</td></tr><tr><td>🎒</td><td>书包</td><td>👞</td><td>男鞋</td><td>👟</td><td>跑鞋</td></tr><tr><td>🥾</td><td>登山鞋</td><td>🥿</td><td>平底鞋</td><td>👠</td><td>高跟鞋</td></tr><tr><td>👡</td><td>女式凉鞋</td><td>🩰</td><td>芭蕾舞鞋</td><td>👢</td><td>女靴</td></tr><tr><td>👑</td><td>皇冠</td><td>👒</td><td>女帽</td><td>🎩</td><td>礼帽</td></tr><tr><td>🎓</td><td>毕业帽</td><td>🧢</td><td>鸭舌帽</td><td>⛑️</td><td>白十字头盔</td></tr><tr><td>📿</td><td>念珠</td><td>💄</td><td>唇膏</td><td>💍</td><td>戒指</td></tr><tr><td>💎</td><td>宝石</td><td>🔇</td><td>已静音的扬声器</td><td>🔈</td><td>低音量的扬声器</td></tr><tr><td>🔉</td><td>中等音量的扬声器</td><td>🔊</td><td>高音量的扬声器</td><td>📢</td><td>喇叭</td></tr><tr><td>📣</td><td>扩音器</td><td>📯</td><td>邮号</td><td>🔔</td><td>铃铛</td></tr><tr><td>🔕</td><td>禁止响铃</td><td>🎼</td><td>乐谱</td><td>🎵</td><td>音符</td></tr><tr><td>🎶</td><td>多个音符</td><td>🎙️</td><td>录音室麦克风</td><td>🎚️</td><td>电平滑块</td></tr><tr><td>🎛️</td><td>控制旋钮</td><td>🎤</td><td>麦克风</td><td>🎧</td><td>耳机</td></tr><tr><td>📻</td><td>收音机</td><td>🎷</td><td>萨克斯管</td><td>🎸</td><td>吉他</td></tr><tr><td>🎹</td><td>音乐键盘</td><td>🎺</td><td>小号</td><td>🎻</td><td>小提琴</td></tr><tr><td>🪕</td><td>班卓琴</td><td>🥁</td><td>鼓</td><td>📱</td><td>手机</td></tr><tr><td>📲</td><td>带有箭头的手机</td><td>☎️</td><td>电话</td><td>📞</td><td>电话听筒</td></tr><tr><td>📟</td><td>寻呼机</td><td>📠</td><td>传真机</td><td>🔋</td><td>电池</td></tr><tr><td>🔌</td><td>电源插头</td><td>💻</td><td>笔记本电脑</td><td>🖥️</td><td>台式电脑</td></tr><tr><td>🖨️</td><td>打印机</td><td>⌨️</td><td>键盘</td><td>🖱️</td><td>电脑鼠标</td></tr><tr><td>🖲️</td><td>轨迹球</td><td>💽</td><td>电脑光盘</td><td>💾</td><td>软盘</td></tr><tr><td>💿</td><td>光盘</td><td>📀</td><td>DVD</td><td>🧮</td><td>算盘</td></tr><tr><td>🎥</td><td>电影摄影机</td><td>🎞️</td><td>影片帧</td><td>📽️</td><td>电影放映机</td></tr><tr><td>🎬</td><td>场记板</td><td>📺</td><td>电视机</td><td>📷</td><td>相机</td></tr><tr><td>📸</td><td>开闪光灯的相机</td><td>📹</td><td>摄像机</td><td>📼</td><td>录像带</td></tr><tr><td>🔍</td><td>左斜的放大镜</td><td>🔎</td><td>右斜的放大镜</td><td>🕯️</td><td>蜡烛</td></tr><tr><td>💡</td><td>灯泡</td><td>🔦</td><td>手电筒</td><td>🏮</td><td>红灯笼</td></tr><tr><td>🪔</td><td>印度油灯</td><td>📔</td><td>精装笔记本</td><td>📕</td><td>合上的书本</td></tr><tr><td>📖</td><td>打开的书本</td><td>📗</td><td>绿色书本</td><td>📘</td><td>蓝色书本</td></tr><tr><td>📙</td><td>橙色书本</td><td>📚</td><td>书</td><td>📓</td><td>笔记本</td></tr><tr><td>📒</td><td>账本</td><td>📃</td><td>带卷边的页面</td><td>📜</td><td>卷轴</td></tr><tr><td>📄</td><td>文件</td><td>📰</td><td>报纸</td><td>🗞️</td><td>报纸卷</td></tr><tr><td>📑</td><td>标签页</td><td>🔖</td><td>书签</td><td>🏷️</td><td>标签</td></tr><tr><td>💰</td><td>钱袋</td><td>💴</td><td>日元</td><td>💵</td><td>美元</td></tr><tr><td>💶</td><td>欧元</td><td>💷</td><td>英镑</td><td>💸</td><td>长翅膀的钱</td></tr><tr><td>💳</td><td>信用卡</td><td>🧾</td><td>收据</td><td>💹</td><td>趋势向上且带有日元符号的图表</td></tr><tr><td>💱</td><td>货币兑换</td><td>💲</td><td>美元符号</td><td>✉️</td><td>信封</td></tr><tr><td>📧</td><td>电子邮件</td><td>📨</td><td>来信</td><td>📩</td><td>收邮件</td></tr><tr><td>📤</td><td>发件箱</td><td>📥</td><td>收件箱</td><td>📦</td><td>包裹</td></tr><tr><td>📫</td><td>有待收信件</td><td>📪</td><td>无待收信件</td><td>📬</td><td>有新信件</td></tr><tr><td>📭</td><td>无新信件</td><td>📮</td><td>邮筒</td><td>🗳️</td><td>投票箱</td></tr><tr><td>✏️</td><td>铅笔</td><td>✒️</td><td>钢笔尖</td><td>🖋️</td><td>钢笔</td></tr><tr><td>🖊️</td><td>笔</td><td>🖌️</td><td>画笔</td><td>🖍️</td><td>蜡笔</td></tr><tr><td>📝</td><td>备忘录</td><td>💼</td><td>公文包</td><td>📁</td><td>文件夹</td></tr><tr><td>📂</td><td>打开的文件夹</td><td>🗂️</td><td>索引分隔文件夹</td><td>📅</td><td>日历</td></tr><tr><td>📆</td><td>手撕日历</td><td>🗒️</td><td>线圈本</td><td>🗓️</td><td>线圈日历</td></tr><tr><td>📇</td><td>卡片索引</td><td>📈</td><td>趋势向上的图表</td><td>📉</td><td>趋势向下的图表</td></tr><tr><td>📊</td><td>条形图</td><td>📋</td><td>剪贴板</td><td>📌</td><td>图钉</td></tr><tr><td>📍</td><td>圆图钉</td><td>📎</td><td>回形针</td><td>🖇️</td><td>连起来的两个回形针</td></tr><tr><td>📏</td><td>直尺</td><td>📐</td><td>三角尺</td><td>✂️</td><td>剪刀</td></tr><tr><td>🗃️</td><td>卡片盒</td><td>🗄️</td><td>文件柜</td><td>🗑️</td><td>垃圾桶</td></tr><tr><td>🔒</td><td>合上的锁</td><td>🔓</td><td>打开的锁</td><td>🔏</td><td>墨水笔和锁</td></tr><tr><td>🔐</td><td>钥匙和锁</td><td>🔑</td><td>钥匙</td><td>🗝️</td><td>老式钥匙</td></tr><tr><td>🔨</td><td>锤子</td><td>🪓</td><td>斧头</td><td>⛏️</td><td>铁镐</td></tr><tr><td>⚒️</td><td>锤子与镐</td><td>🛠️</td><td>锤子与扳手</td><td>🗡️</td><td>匕首</td></tr><tr><td>⚔️</td><td>交叉放置的剑</td><td>🔫</td><td>手枪</td><td>🏹</td><td>弓和箭</td></tr><tr><td>🛡️</td><td>盾牌</td><td>🔧</td><td>扳手</td><td>🔩</td><td>螺母与螺栓</td></tr><tr><td>⚙️</td><td>齿轮</td><td>🗜️</td><td>夹钳</td><td>⚖️</td><td>天平</td></tr><tr><td>🦯</td><td>盲杖</td><td>🔗</td><td>链接</td><td>⛓️</td><td>链条</td></tr><tr><td>🧰</td><td>工具箱</td><td>🧲</td><td>磁铁</td><td>⚗️</td><td>蒸馏器</td></tr><tr><td>🧪</td><td>试管</td><td>🧫</td><td>培养皿</td><td>🧬</td><td>DNA</td></tr><tr><td>🔬</td><td>显微镜</td><td>🔭</td><td>望远镜</td><td>📡</td><td>卫星天线</td></tr><tr><td>💉</td><td>注射器</td><td>🩸</td><td>血滴</td><td>💊</td><td>药丸</td></tr><tr><td>🩹</td><td>创可贴</td><td>🩺</td><td>听诊器</td><td>🚪</td><td>门</td></tr><tr><td>🛏️</td><td>床</td><td>🛋️</td><td>沙发和灯</td><td>🪑</td><td>椅子</td></tr><tr><td>🚽</td><td>马桶</td><td>🚿</td><td>淋浴</td><td>🛁</td><td>浴缸</td></tr><tr><td>🪒</td><td>剃须刀</td><td>🧴</td><td>乳液瓶</td><td>🧷</td><td>安全别针</td></tr><tr><td>🧹</td><td>扫帚</td><td>🧺</td><td>筐</td><td>🧻</td><td>卷纸</td></tr><tr><td>🧼</td><td>皂</td><td>🧽</td><td>海绵</td><td>🧯</td><td>灭火器</td></tr><tr><td>🛒</td><td>购物车</td><td>🚬</td><td>香烟</td><td>⚰️</td><td>棺材</td></tr><tr><td>⚱️</td><td>骨灰缸</td><td>🗿</td><td>摩埃</td><td></td><td></td></tr></tbody></table><h3 id="活动"><a href="#活动" class="headerlink" title="活动"></a>活动</h3><table><thead><tr><th>表情</th><th>名称</th><th>表情</th><th>名称</th><th>表情</th><th>名称</th></tr></thead><tbody><tr><td>🎃</td><td>南瓜灯</td><td>🎄</td><td>圣诞树</td><td>🎆</td><td>焰火</td></tr><tr><td>🎇</td><td>烟花</td><td>🧨</td><td>爆竹</td><td>✨</td><td>闪亮</td></tr><tr><td>🎈</td><td>气球</td><td>🎉</td><td>拉炮彩带</td><td>🎊</td><td>五彩纸屑球</td></tr><tr><td>🎋</td><td>七夕树</td><td>🎍</td><td>门松</td><td>🎎</td><td>日本人形</td></tr><tr><td>🎏</td><td>鲤鱼旗</td><td>🎐</td><td>风铃</td><td>🎑</td><td>赏月</td></tr><tr><td>🧧</td><td>红包</td><td>🎀</td><td>蝴蝶结</td><td>🎁</td><td>礼物</td></tr><tr><td>🎗️</td><td>提示丝带</td><td>🎟️</td><td>入场券</td><td>🎫</td><td>票</td></tr><tr><td>🎖️</td><td>军功章</td><td>🏆</td><td>奖杯</td><td>🏅</td><td>奖牌</td></tr><tr><td>🥇</td><td>金牌</td><td>🥈</td><td>银牌</td><td>🥉</td><td>铜牌</td></tr><tr><td>⚽</td><td>足球</td><td>⚾</td><td>棒球</td><td>🥎</td><td>垒球</td></tr><tr><td>🏀</td><td>篮球</td><td>🏐</td><td>排球</td><td>🏈</td><td>美式橄榄球</td></tr><tr><td>🏉</td><td>英式橄榄球</td><td>🎾</td><td>网球</td><td>🥏</td><td>飞盘</td></tr><tr><td>🎳</td><td>保龄球</td><td>🏏</td><td>板球</td><td>🏑</td><td>曲棍球</td></tr><tr><td>🏒</td><td>冰球</td><td>🥍</td><td>袋棍球</td><td>🏓</td><td>乒乓球</td></tr><tr><td>🏸</td><td>羽毛球</td><td>🥊</td><td>拳击手套</td><td>🥋</td><td>练武服</td></tr><tr><td>🥅</td><td>球门</td><td>⛳</td><td>高尔夫球洞</td><td>⛸️</td><td>滑冰</td></tr><tr><td>🎣</td><td>钓鱼竿</td><td>🤿</td><td>潜水面罩</td><td>🎽</td><td>运动背心</td></tr><tr><td>🎿</td><td>滑雪</td><td>🛷</td><td>雪橇</td><td>🥌</td><td>冰壶</td></tr><tr><td>🎯</td><td>正中靶心的飞镖</td><td>🪀</td><td>悠悠球</td><td>🪁</td><td>风筝</td></tr><tr><td>🎱</td><td>台球</td><td>🔮</td><td>水晶球</td><td>🧿</td><td>纳扎尔护身符</td></tr><tr><td>🎮</td><td>游戏手柄</td><td>🕹️</td><td>游戏操控杆</td><td>🎰</td><td>老虎机</td></tr><tr><td>🎲</td><td>骰子</td><td>🧩</td><td>拼图</td><td>🧸</td><td>泰迪熊</td></tr><tr><td>♠️</td><td>黑桃</td><td>♥️</td><td>红桃</td><td>♦️</td><td>方片</td></tr><tr><td>♣️</td><td>梅花</td><td>♟️</td><td>兵</td><td>🃏</td><td>大小王</td></tr><tr><td>🀄</td><td>红中</td><td>🎴</td><td>花札</td><td>🎭</td><td>面具</td></tr><tr><td>🖼️</td><td>带框的画</td><td>🎨</td><td>调色盘</td><td>🧵</td><td>线</td></tr><tr><td>🧶</td><td>毛线</td><td></td><td></td><td></td><td></td></tr></tbody></table><h3 id="食物和饮料"><a href="#食物和饮料" class="headerlink" title="食物和饮料"></a>食物和饮料</h3><table><thead><tr><th>表情</th><th>名称</th><th>表情</th><th>名称</th><th>表情</th><th>名称</th></tr></thead><tbody><tr><td>🍇</td><td>葡萄</td><td>🍈</td><td>甜瓜</td><td>🍉</td><td>西瓜</td></tr><tr><td>🍊</td><td>橘子</td><td>🍋</td><td>柠檬</td><td>🍌</td><td>香蕉</td></tr><tr><td>🍍</td><td>菠萝</td><td>🥭</td><td>芒果</td><td>🍎</td><td>红苹果</td></tr><tr><td>🍏</td><td>青苹果</td><td>🍐</td><td>梨</td><td>🍑</td><td>桃</td></tr><tr><td>🍒</td><td>樱桃</td><td>🍓</td><td>草莓</td><td>🥝</td><td>猕猴桃</td></tr><tr><td>🍅</td><td>西红柿</td><td>🥥</td><td>椰子</td><td>🥑</td><td>鳄梨</td></tr><tr><td>🍆</td><td>茄子</td><td>🥔</td><td>土豆</td><td>🥕</td><td>胡萝卜</td></tr><tr><td>🌽</td><td>玉米</td><td>🌶️</td><td>红辣椒</td><td>🥒</td><td>黄瓜</td></tr><tr><td>🥬</td><td>绿叶蔬菜</td><td>🥦</td><td>西兰花</td><td>🧄</td><td>蒜</td></tr><tr><td>🧅</td><td>洋葱</td><td>🍄</td><td>蘑菇</td><td>🥜</td><td>花生</td></tr><tr><td>🌰</td><td>栗子</td><td>🍞</td><td>面包</td><td>🥐</td><td>羊角面包</td></tr><tr><td>🥖</td><td>法式长棍面包</td><td>🥨</td><td>椒盐卷饼</td><td>🥯</td><td>面包圈</td></tr><tr><td>🥞</td><td>烙饼</td><td>🧇</td><td>华夫饼</td><td>🧀</td><td>芝士</td></tr><tr><td>🍖</td><td>排骨</td><td>🍗</td><td>家禽的腿</td><td>🥩</td><td>肉块</td></tr><tr><td>🥓</td><td>培根</td><td>🍔</td><td>汉堡</td><td>🍟</td><td>薯条</td></tr><tr><td>🍕</td><td>披萨</td><td>🌭</td><td>热狗</td><td>🥪</td><td>三明治</td></tr><tr><td>🌮</td><td>墨西哥卷饼</td><td>🌯</td><td>墨西哥玉米煎饼</td><td>🥙</td><td>夹心饼</td></tr><tr><td>🧆</td><td>炸豆丸子</td><td>🥚</td><td>蛋</td><td>🍳</td><td>煎蛋</td></tr><tr><td>🥘</td><td>装有食物的浅底锅</td><td>🍲</td><td>一锅食物</td><td>🥣</td><td>碗勺</td></tr><tr><td>🥗</td><td>绿色沙拉</td><td>🍿</td><td>爆米花</td><td>🧈</td><td>黄油</td></tr><tr><td>🧂</td><td>盐</td><td>🥫</td><td>罐头食品</td><td>🍱</td><td>盒饭</td></tr><tr><td>🍘</td><td>米饼</td><td>🍙</td><td>饭团</td><td>🍚</td><td>米饭</td></tr><tr><td>🍛</td><td>咖喱饭</td><td>🍜</td><td>面条</td><td>🍝</td><td>意粉</td></tr><tr><td>🍠</td><td>烤红薯</td><td>🍢</td><td>关东煮</td><td>🍣</td><td>寿司</td></tr><tr><td>🍤</td><td>天妇罗</td><td>🍥</td><td>鱼板</td><td>🥮</td><td>月饼</td></tr><tr><td>🍡</td><td>团子</td><td>🥟</td><td>饺子</td><td>🥠</td><td>幸运饼干</td></tr><tr><td>🥡</td><td>外卖盒</td><td>🦀</td><td>蟹</td><td>🦞</td><td>龙虾</td></tr><tr><td>🦐</td><td>虾</td><td>🦑</td><td>乌贼</td><td>🦪</td><td>牡蛎</td></tr><tr><td>🍦</td><td>圆筒冰激凌</td><td>🍧</td><td>刨冰</td><td>🍨</td><td>冰淇淋</td></tr><tr><td>🍩</td><td>甜甜圈</td><td>🍪</td><td>饼干</td><td>🎂</td><td>生日蛋糕</td></tr><tr><td>🍰</td><td>水果蛋糕</td><td>🧁</td><td>纸杯蛋糕</td><td>🥧</td><td>派</td></tr><tr><td>🍫</td><td>巧克力</td><td>🍬</td><td>糖</td><td>🍭</td><td>棒棒糖</td></tr><tr><td>🍮</td><td>奶黄</td><td>🍯</td><td>蜂蜜</td><td>🍼</td><td>奶瓶</td></tr><tr><td>🥛</td><td>一杯奶</td><td>☕</td><td>热饮</td><td>🍵</td><td>热茶</td></tr><tr><td>🍶</td><td>清酒</td><td>🍾</td><td>开香槟</td><td>🍷</td><td>葡萄酒</td></tr><tr><td>🍸</td><td>鸡尾酒</td><td>🍹</td><td>热带水果饮料</td><td>🍺</td><td>啤酒</td></tr><tr><td>🍻</td><td>干杯</td><td>🥂</td><td>碰杯</td><td>🥃</td><td>平底杯</td></tr><tr><td>🥤</td><td>带吸管杯</td><td>🧃</td><td>饮料盒</td><td>🧉</td><td>马黛茶</td></tr><tr><td>🧊</td><td>冰块</td><td>🥢</td><td>筷子</td><td>🍽️</td><td>餐具</td></tr><tr><td>🍴</td><td>刀叉</td><td>🥄</td><td>匙</td><td>🔪</td><td>菜刀</td></tr><tr><td>🏺</td><td>双耳瓶</td><td></td><td></td><td></td><td></td></tr></tbody></table><h3 id="旅行和地点"><a href="#旅行和地点" class="headerlink" title="旅行和地点"></a>旅行和地点</h3><table><thead><tr><th>表情</th><th>名称</th><th>表情</th><th>名称</th><th>表情</th><th>名称</th></tr></thead><tbody><tr><td>🌍</td><td>地球上的欧洲非洲</td><td>🌎</td><td>地球上的美洲</td><td>🌏</td><td>地球上的亚洲澳洲</td></tr><tr><td>🌐</td><td>带经纬线的地球</td><td>🗺️</td><td>世界地图</td><td>🗾</td><td>日本地图</td></tr><tr><td>🧭</td><td>指南针</td><td>🏔️</td><td>雪山</td><td>⛰️</td><td>山</td></tr><tr><td>🌋</td><td>火山</td><td>🗻</td><td>富士山</td><td>🏕️</td><td>露营</td></tr><tr><td>🏖️</td><td>沙滩伞</td><td>🏜️</td><td>沙漠</td><td>🏝️</td><td>无人荒岛</td></tr><tr><td>🏞️</td><td>国家公园</td><td>🏟️</td><td>体育馆</td><td>🏛️</td><td>古典建筑</td></tr><tr><td>🏗️</td><td>施工</td><td>🧱</td><td>砖</td><td>🏘️</td><td>房屋建筑</td></tr><tr><td>🏚️</td><td>废墟</td><td>🏠</td><td>房子</td><td>🏡</td><td>别墅</td></tr><tr><td>🏢</td><td>办公楼</td><td>🏣</td><td>日本邮局</td><td>🏤</td><td>邮局</td></tr><tr><td>🏥</td><td>医院</td><td>🏦</td><td>银行</td><td>🏨</td><td>酒店</td></tr><tr><td>🏩</td><td>情人酒店</td><td>🏪</td><td>便利店</td><td>🏫</td><td>学校</td></tr><tr><td>🏬</td><td>商场</td><td>🏭</td><td>工厂</td><td>🏯</td><td>日本城堡</td></tr><tr><td>🏰</td><td>欧洲城堡</td><td>💒</td><td>婚礼</td><td>🗼</td><td>东京塔</td></tr><tr><td>🗽</td><td>自由女神像</td><td>⛪</td><td>教堂</td><td>🕌</td><td>清真寺</td></tr><tr><td>🛕</td><td>印度寺庙</td><td>🕍</td><td>犹太教堂</td><td>⛩️</td><td>神社</td></tr><tr><td>🕋</td><td>克尔白</td><td>⛲</td><td>喷泉</td><td>⛺</td><td>帐篷</td></tr><tr><td>🌁</td><td>有雾</td><td>🌃</td><td>夜晚</td><td>🏙️</td><td>城市风光</td></tr><tr><td>🌄</td><td>山顶日出</td><td>🌅</td><td>日出</td><td>🌆</td><td>城市黄昏</td></tr><tr><td>🌇</td><td>日落</td><td>🌉</td><td>夜幕下的桥</td><td>♨️</td><td>温泉</td></tr><tr><td>🎠</td><td>旋转木马</td><td>🎡</td><td>摩天轮</td><td>🎢</td><td>过山车</td></tr><tr><td>💈</td><td>理发店</td><td>🎪</td><td>马戏团帐篷</td><td>🚂</td><td>蒸汽火车</td></tr><tr><td>🚃</td><td>轨道车</td><td>🚄</td><td>高速列车</td><td>🚅</td><td>子弹头高速列车</td></tr><tr><td>🚆</td><td>火车</td><td>🚇</td><td>地铁</td><td>🚈</td><td>轻轨</td></tr><tr><td>🚉</td><td>车站</td><td>🚊</td><td>路面电车</td><td>🚝</td><td>单轨</td></tr><tr><td>🚞</td><td>山区铁路</td><td>🚋</td><td>有轨电车</td><td>🚌</td><td>公交车</td></tr><tr><td>🚍</td><td>迎面驶来的公交车</td><td>🚎</td><td>无轨电车</td><td>🚐</td><td>小巴</td></tr><tr><td>🚑</td><td>救护车</td><td>🚒</td><td>消防车</td><td>🚓</td><td>警车</td></tr><tr><td>🚔</td><td>迎面驶来的警车</td><td>🚕</td><td>出租车</td><td>🚖</td><td>迎面驶来的出租车</td></tr><tr><td>🚗</td><td>汽车</td><td>🚘</td><td>迎面驶来的汽车</td><td>🚙</td><td>运动型多用途车</td></tr><tr><td>🚚</td><td>货车</td><td>🚛</td><td>铰接式货车</td><td>🚜</td><td>拖拉机</td></tr><tr><td>🏎️</td><td>赛车</td><td>🏍️</td><td>摩托车</td><td>🛵</td><td>小型摩托车</td></tr><tr><td>🦽</td><td>手动轮椅</td><td>🦼</td><td>电动轮椅</td><td>🛺</td><td>三轮摩托车</td></tr><tr><td>🚲</td><td>自行车</td><td>🛴</td><td>滑板车</td><td>🛹</td><td>滑板</td></tr><tr><td>🚏</td><td>公交车站</td><td>🛣️</td><td>高速公路</td><td>🛤️</td><td>铁轨</td></tr><tr><td>🛢️</td><td>石油桶</td><td>⛽</td><td>油泵</td><td>🚨</td><td>警车灯</td></tr><tr><td>🚥</td><td>横向的红绿灯</td><td>🚦</td><td>纵向的红绿灯</td><td>🛑</td><td>停止标志</td></tr><tr><td>🚧</td><td>路障</td><td>⚓</td><td>锚</td><td>⛵</td><td>帆船</td></tr><tr><td>🛶</td><td>独木舟</td><td>🚤</td><td>快艇</td><td>🛳️</td><td>客轮</td></tr><tr><td>⛴️</td><td>渡轮</td><td>🛥️</td><td>摩托艇</td><td>🚢</td><td>船</td></tr><tr><td>✈️</td><td>飞机</td><td>🛩️</td><td>小型飞机</td><td>🛫</td><td>航班起飞</td></tr><tr><td>🛬</td><td>航班降落</td><td>🪂</td><td>降落伞</td><td>💺</td><td>座位</td></tr><tr><td>🚁</td><td>直升机</td><td>🚟</td><td>空轨</td><td>🚠</td><td>缆车</td></tr><tr><td>🚡</td><td>索道</td><td>🛰️</td><td>卫星</td><td>🚀</td><td>火箭</td></tr><tr><td>🛸</td><td>飞碟</td><td>🛎️</td><td>服务铃</td><td>🧳</td><td>行李箱</td></tr><tr><td>⌛</td><td>沙漏</td><td>⏳</td><td>沙正往下流的沙漏</td><td>⌚</td><td>手表</td></tr><tr><td>⏰</td><td>闹钟</td><td>⏱️</td><td>秒表</td><td>⏲️</td><td>定时器</td></tr><tr><td>🕰️</td><td>座钟</td><td>🕛</td><td>十二点</td><td>🕧</td><td>十二点半</td></tr><tr><td>🕐</td><td>一点</td><td>🕜</td><td>一点半</td><td>🕑</td><td>两点</td></tr><tr><td>🕝</td><td>两点半</td><td>🕒</td><td>三点</td><td>🕞</td><td>三点半</td></tr><tr><td>🕓</td><td>四点</td><td>🕟</td><td>四点半</td><td>🕔</td><td>五点</td></tr><tr><td>🕠</td><td>五点半</td><td>🕕</td><td>六点</td><td>🕡</td><td>六点半</td></tr><tr><td>🕖</td><td>七点</td><td>🕢</td><td>七点半</td><td>🕗</td><td>八点</td></tr><tr><td>🕣</td><td>八点半</td><td>🕘</td><td>九点</td><td>🕤</td><td>九点半</td></tr><tr><td>🕙</td><td>十点</td><td>🕥</td><td>十点半</td><td>🕚</td><td>十一点</td></tr><tr><td>🕦</td><td>十一点半</td><td>🌑</td><td>朔月</td><td>🌒</td><td>娥眉月</td></tr><tr><td>🌓</td><td>上弦月</td><td>🌔</td><td>盈凸月</td><td>🌕</td><td>满月</td></tr><tr><td>🌖</td><td>亏凸月</td><td>🌗</td><td>下弦月</td><td>🌘</td><td>残月</td></tr><tr><td>🌙</td><td>弯月</td><td>🌚</td><td>微笑的朔月</td><td>🌛</td><td>微笑的上弦月</td></tr><tr><td>🌜</td><td>微笑的下弦月</td><td>🌡️</td><td>温度计</td><td>☀️</td><td>太阳</td></tr><tr><td>🌝</td><td>微笑的月亮</td><td>🌞</td><td>微笑的太阳</td><td>🪐</td><td>有环行星</td></tr><tr><td>⭐</td><td>星星</td><td>🌟</td><td>闪亮的星星</td><td>🌠</td><td>流星</td></tr><tr><td>🌌</td><td>银河</td><td>☁️</td><td>云</td><td>⛅</td><td>阴</td></tr><tr><td>⛈️</td><td>雷阵雨</td><td>🌤️</td><td>晴偶有云</td><td>🌥️</td><td>多云</td></tr><tr><td>🌦️</td><td>晴转雨</td><td>🌧️</td><td>下雨</td><td>🌨️</td><td>下雪</td></tr><tr><td>🌩️</td><td>打雷</td><td>🌪️</td><td>龙卷风</td><td>🌫️</td><td>雾</td></tr><tr><td>🌬️</td><td>大风</td><td>🌀</td><td>台风</td><td>🌈</td><td>彩虹</td></tr><tr><td>🌂</td><td>收起的伞</td><td>☂️</td><td>伞</td><td>☔</td><td>雨伞</td></tr><tr><td>⛱️</td><td>阳伞</td><td>⚡</td><td>高压</td><td>❄️</td><td>雪花</td></tr><tr><td>☃️</td><td>雪与雪人</td><td>⛄</td><td>雪人</td><td>☄️</td><td>彗星</td></tr><tr><td>🔥</td><td>火焰</td><td>💧</td><td>水滴</td><td>🌊</td><td>浪花</td></tr></tbody></table><h3 id="动物和自然"><a href="#动物和自然" class="headerlink" title="动物和自然"></a>动物和自然</h3><table><thead><tr><th>表情</th><th>名称</th><th>表情</th><th>名称</th><th>表情</th><th>名称</th></tr></thead><tbody><tr><td>🐵</td><td>猴头</td><td>🐒</td><td>猴子</td><td>🦍</td><td>大猩猩</td></tr><tr><td>🦧</td><td>红毛猩猩</td><td>🐶</td><td>狗脸</td><td>🐕</td><td>狗</td></tr><tr><td>🦮</td><td>导盲犬</td><td>🐕‍🦺</td><td>服务犬</td><td>🐩</td><td>贵宾犬</td></tr><tr><td>🐺</td><td>狼</td><td>🦊</td><td>狐狸</td><td>🦝</td><td>浣熊</td></tr><tr><td>🐱</td><td>猫脸</td><td>🐈</td><td>猫</td><td>🦁</td><td>狮子</td></tr><tr><td>🐯</td><td>老虎头</td><td>🐅</td><td>老虎</td><td>🐆</td><td>豹子</td></tr><tr><td>🐴</td><td>马头</td><td>🐎</td><td>马</td><td>🦄</td><td>独角兽</td></tr><tr><td>🦓</td><td>斑马</td><td>🦌</td><td>鹿</td><td>🐮</td><td>奶牛头</td></tr><tr><td>🐂</td><td>公牛</td><td>🐃</td><td>水牛</td><td>🐄</td><td>奶牛</td></tr><tr><td>🐷</td><td>猪头</td><td>🐖</td><td>猪</td><td>🐗</td><td>野猪</td></tr><tr><td>🐽</td><td>猪鼻子</td><td>🐏</td><td>公羊</td><td>🐑</td><td>母羊</td></tr><tr><td>🐐</td><td>山羊</td><td>🐪</td><td>骆驼</td><td>🐫</td><td>双峰骆驼</td></tr><tr><td>🦙</td><td>美洲鸵</td><td>🦒</td><td>长颈鹿</td><td>🐘</td><td>大象</td></tr><tr><td>🦏</td><td>犀牛</td><td>🦛</td><td>河马</td><td>🐭</td><td>老鼠头</td></tr><tr><td>🐁</td><td>老鼠</td><td>🐀</td><td>耗子</td><td>🐹</td><td>仓鼠</td></tr><tr><td>🐰</td><td>兔子头</td><td>🐇</td><td>兔子</td><td>🐿️</td><td>松鼠</td></tr><tr><td>🦔</td><td>刺猬</td><td>🦇</td><td>蝙蝠</td><td>🐻</td><td>熊</td></tr><tr><td>🐨</td><td>考拉</td><td>🐼</td><td>熊猫</td><td>🦥</td><td>树懒</td></tr><tr><td>🦦</td><td>水獭</td><td>🦨</td><td>臭鼬</td><td>🦘</td><td>袋鼠</td></tr><tr><td>🦡</td><td>獾</td><td>🐾</td><td>爪印</td><td>🦃</td><td>火鸡</td></tr><tr><td>🐔</td><td>鸡</td><td>🐓</td><td>公鸡</td><td>🐣</td><td>小鸡破壳</td></tr><tr><td>🐤</td><td>小鸡</td><td>🐥</td><td>正面朝向的小鸡</td><td>🐦</td><td>鸟</td></tr><tr><td>🐧</td><td>企鹅</td><td>🕊️</td><td>鸽</td><td>🦅</td><td>鹰</td></tr><tr><td>🦆</td><td>鸭子</td><td>🦢</td><td>天鹅</td><td>🦉</td><td>猫头鹰</td></tr><tr><td>🦩</td><td>火烈鸟</td><td>🦚</td><td>孔雀</td><td>🦜</td><td>鹦鹉</td></tr><tr><td>🐸</td><td>青蛙</td><td>🐊</td><td>鳄鱼</td><td>🐢</td><td>龟</td></tr><tr><td>🦎</td><td>蜥蜴</td><td>🐍</td><td>蛇</td><td>🐲</td><td>龙头</td></tr><tr><td>🐉</td><td>龙</td><td>🦕</td><td>蜥蜴类</td><td>🦖</td><td>霸王龙</td></tr><tr><td>🐳</td><td>喷水的鲸</td><td>🐋</td><td>鲸鱼</td><td>🐬</td><td>海豚</td></tr><tr><td>🐟</td><td>鱼</td><td>🐠</td><td>热带鱼</td><td>🐡</td><td>河豚</td></tr><tr><td>🦈</td><td>鲨鱼</td><td>🐙</td><td>章鱼</td><td>🐚</td><td>海螺</td></tr><tr><td>🐌</td><td>蜗牛</td><td>🦋</td><td>蝴蝶</td><td>🐛</td><td>毛毛虫</td></tr><tr><td>🐜</td><td>蚂蚁</td><td>🐝</td><td>蜜蜂</td><td>🐞</td><td>瓢虫</td></tr><tr><td>🦗</td><td>蟋蟀</td><td>🕷️</td><td>蜘蛛</td><td>🕸️</td><td>蜘蛛网</td></tr><tr><td>🦂</td><td>蝎子</td><td>🦟</td><td>蚊子</td><td>🦠</td><td>细菌</td></tr><tr><td>💐</td><td>花束</td><td>🌸</td><td>樱花</td><td>💮</td><td>白花</td></tr><tr><td>🏵️</td><td>圆形花饰</td><td>🌹</td><td>玫瑰</td><td>🥀</td><td>枯萎的花</td></tr><tr><td>🌺</td><td>芙蓉</td><td>🌻</td><td>向日葵</td><td>🌼</td><td>开花</td></tr><tr><td>🌷</td><td>郁金香</td><td>🌱</td><td>幼苗</td><td>🌲</td><td>松树</td></tr><tr><td>🌳</td><td>落叶树</td><td>🌴</td><td>棕榈树</td><td>🌵</td><td>仙人掌</td></tr><tr><td>🌾</td><td>稻子</td><td>🌿</td><td>药草</td><td>☘️</td><td>三叶草</td></tr><tr><td>🍀</td><td>四叶草</td><td>🍁</td><td>枫叶</td><td>🍂</td><td>落叶</td></tr><tr><td>🍃</td><td>风吹叶落</td><td></td><td></td><td></td><td></td></tr></tbody></table><h3 id="人类和身体"><a href="#人类和身体" class="headerlink" title="人类和身体"></a>人类和身体</h3><table><thead><tr><th>表情</th><th>名称</th><th>表情</th><th>名称</th><th>表情</th><th>名称</th></tr></thead><tbody><tr><td>👋</td><td>挥手</td><td>🤚</td><td>立起的手背</td><td>🖐️</td><td>手掌</td></tr><tr><td>✋</td><td>举起手</td><td>🖖</td><td>瓦肯举手礼</td><td>👌</td><td>OK</td></tr><tr><td>🤏</td><td>捏合的手势</td><td>✌️</td><td>胜利手势</td><td>🤞</td><td>交叉的手指</td></tr><tr><td>🤟</td><td>爱你的手势</td><td>🤘</td><td>摇滚</td><td>🤙</td><td>给我打电话</td></tr><tr><td>👈</td><td>反手食指向左指</td><td>👉</td><td>反手食指向右指</td><td>👆</td><td>反手食指向上指</td></tr><tr><td>🖕</td><td>竖中指</td><td>👇</td><td>反手食指向下指</td><td>☝️</td><td>食指向上指</td></tr><tr><td>👍</td><td>拇指向上</td><td>👎</td><td>拇指向下</td><td>✊</td><td>举起拳头</td></tr><tr><td>👊</td><td>出拳</td><td>🤛</td><td>朝左的拳头</td><td>🤜</td><td>朝右的拳头</td></tr><tr><td>👏</td><td>鼓掌</td><td>🙌</td><td>举双手</td><td>👐</td><td>张开双手</td></tr><tr><td>🤲</td><td>掌心向上托起</td><td>🤝</td><td>握手</td><td>🙏</td><td>双手合十</td></tr><tr><td>✍️</td><td>写字</td><td>💅</td><td>涂指甲油</td><td>🤳</td><td>自拍</td></tr><tr><td>💪</td><td>肌肉</td><td>🦾</td><td>机械手臂</td><td>🦿</td><td>机械腿</td></tr><tr><td>🦵</td><td>腿</td><td>🦶</td><td>脚</td><td>👂</td><td>耳朵</td></tr><tr><td>🦻</td><td>戴助听器的耳朵</td><td>👃</td><td>鼻子</td><td>🧠</td><td>脑</td></tr><tr><td>🦷</td><td>牙齿</td><td>🦴</td><td>骨头</td><td>👀</td><td>双眼</td></tr><tr><td>👁️</td><td>眼睛</td><td>👅</td><td>舌头</td><td>👄</td><td>嘴</td></tr><tr><td>👶</td><td>小宝贝</td><td>🧒</td><td>儿童</td><td>👦</td><td>男孩</td></tr><tr><td>👧</td><td>女孩</td><td>🧑</td><td>成人</td><td>👱</td><td>金色头发的人</td></tr><tr><td>👨</td><td>男人</td><td>🧔</td><td>有胡子的人</td><td>👱‍♂️</td><td>金发男</td></tr><tr><td>👨‍🦰</td><td>男人: 红发</td><td>👨‍🦱</td><td>男人: 卷发</td><td>👨‍🦳</td><td>男人: 白发</td></tr><tr><td>👨‍🦲</td><td>男人: 秃顶</td><td>👩</td><td>女人</td><td>👱‍♀️</td><td>金发女</td></tr><tr><td>👩‍🦰</td><td>女人: 红发</td><td>👩‍🦱</td><td>女人: 卷发</td><td>👩‍🦳</td><td>女人: 白发</td></tr><tr><td>👩‍🦲</td><td>女人: 秃顶</td><td>🧓</td><td>老年人</td><td>👴</td><td>老爷爷</td></tr><tr><td>👵</td><td>老奶奶</td><td>🙍</td><td>皱眉</td><td>🙍‍♂️</td><td>皱眉男</td></tr><tr><td>🙍‍♀️</td><td>皱眉女</td><td>🙎</td><td>撅嘴</td><td>🙎‍♂️</td><td>撅嘴男</td></tr><tr><td>🙎‍♀️</td><td>撅嘴女</td><td>🙅</td><td>禁止手势</td><td>🙅‍♂️</td><td>禁止手势男</td></tr><tr><td>🙅‍♀️</td><td>禁止手势女</td><td>🙆</td><td>OK手势</td><td>🙆‍♂️</td><td>OK手势男</td></tr><tr><td>🙆‍♀️</td><td>OK手势女</td><td>💁</td><td>前台</td><td>💁‍♂️</td><td>前台男</td></tr><tr><td>💁‍♀️</td><td>前台女</td><td>🙋</td><td>举手</td><td>🙋‍♂️</td><td>男生举手</td></tr><tr><td>🙋‍♀️</td><td>女生举手</td><td>🧏</td><td>失聪者</td><td>🧏‍♂️</td><td>失聪的男人</td></tr><tr><td>🧏‍♀️</td><td>失聪的女人</td><td>🙇</td><td>鞠躬</td><td>🙇‍♂️</td><td>男生鞠躬</td></tr><tr><td>🙇‍♀️</td><td>女生鞠躬</td><td>🤦</td><td>捂脸</td><td>🤦‍♂️</td><td>男生捂脸</td></tr><tr><td>🤦‍♀️</td><td>女生捂脸</td><td>🤷</td><td>耸肩</td><td>🤷‍♂️</td><td>男生耸肩</td></tr><tr><td>🤷‍♀️</td><td>女生耸肩</td><td>👨‍⚕️</td><td>男医生</td><td>👩‍⚕️</td><td>女医生</td></tr><tr><td>👨‍🎓</td><td>男学生</td><td>👩‍🎓</td><td>女学生</td><td>👨‍🏫</td><td>男老师</td></tr><tr><td>👩‍🏫</td><td>女老师</td><td>👨‍⚖️</td><td>男法官</td><td>👩‍⚖️</td><td>女法官</td></tr><tr><td>👨‍🌾</td><td>农夫</td><td>👩‍🌾</td><td>农妇</td><td>👨‍🍳</td><td>男厨师</td></tr><tr><td>👩‍🍳</td><td>女厨师</td><td>👨‍🔧</td><td>男技工</td><td>👩‍🔧</td><td>女技工</td></tr><tr><td>👨‍🏭</td><td>男工人</td><td>👩‍🏭</td><td>女工人</td><td>👨‍💼</td><td>男白领</td></tr><tr><td>👩‍💼</td><td>女白领</td><td>👨‍🔬</td><td>男科学家</td><td>👩‍🔬</td><td>女科学家</td></tr><tr><td>👨‍💻</td><td>男程序员</td><td>👩‍💻</td><td>女程序员</td><td>👨‍🎤</td><td>男歌手</td></tr><tr><td>👩‍🎤</td><td>女歌手</td><td>👨‍🎨</td><td>男艺术家</td><td>👩‍🎨</td><td>女艺术家</td></tr><tr><td>👨‍✈️</td><td>男飞行员</td><td>👩‍✈️</td><td>女飞行员</td><td>👨‍🚀</td><td>男宇航员</td></tr><tr><td>👩‍🚀</td><td>女宇航员</td><td>👨‍🚒</td><td>男消防员</td><td>👩‍🚒</td><td>女消防员</td></tr><tr><td>👮</td><td>警察</td><td>👮‍♂️</td><td>男警察</td><td>👮‍♀️</td><td>女警察</td></tr><tr><td>🕵️</td><td>侦探</td><td>🕵️‍♂️</td><td>男侦探</td><td>🕵️‍♀️</td><td>女侦探</td></tr><tr><td>💂</td><td>卫兵</td><td>💂‍♂️</td><td>男卫兵</td><td>💂‍♀️</td><td>女卫兵</td></tr><tr><td>👷</td><td>建筑工人</td><td>👷‍♂️</td><td>男建筑工人</td><td>👷‍♀️</td><td>女建筑工人</td></tr><tr><td>🤴</td><td>王子</td><td>👸</td><td>公主</td><td>👳</td><td>戴头巾的人</td></tr><tr><td>👳‍♂️</td><td>戴头巾的男人</td><td>👳‍♀️</td><td>戴头巾的女人</td><td>👲</td><td>戴瓜皮帽的人</td></tr><tr><td>🧕</td><td>带头饰的女人</td><td>🤵</td><td>穿燕尾服的男人</td><td>👰</td><td>戴头纱的新娘</td></tr><tr><td>🤰</td><td>孕妇</td><td>🤱</td><td>母乳喂养</td><td>👼</td><td>小天使</td></tr><tr><td>🎅</td><td>圣诞老人</td><td>🤶</td><td>圣诞奶奶</td><td>🦸</td><td>超级英雄</td></tr><tr><td>🦸‍♂️</td><td>男超级英雄</td><td>🦸‍♀️</td><td>女超级英雄</td><td>🦹</td><td>超级大坏蛋</td></tr><tr><td>🦹‍♂️</td><td>男超级大坏蛋</td><td>🦹‍♀️</td><td>女超级大坏蛋</td><td>🧙</td><td>法师</td></tr><tr><td>🧙‍♂️</td><td>男法师</td><td>🧙‍♀️</td><td>女法师</td><td>🧚</td><td>精灵</td></tr><tr><td>🧚‍♂️</td><td>仙人</td><td>🧚‍♀️</td><td>仙女</td><td>🧛</td><td>吸血鬼</td></tr><tr><td>🧛‍♂️</td><td>男吸血鬼</td><td>🧛‍♀️</td><td>女吸血鬼</td><td>🧜</td><td>人鱼</td></tr><tr><td>🧜‍♂️</td><td>男人鱼</td><td>🧜‍♀️</td><td>美人鱼</td><td>🧝</td><td>小精灵</td></tr><tr><td>🧝‍♂️</td><td>男小精灵</td><td>🧝‍♀️</td><td>女小精灵</td><td>🧞</td><td>妖怪</td></tr><tr><td>🧞‍♂️</td><td>男妖怪</td><td>🧞‍♀️</td><td>女妖怪</td><td>🧟</td><td>僵尸</td></tr><tr><td>🧟‍♂️</td><td>男僵尸</td><td>🧟‍♀️</td><td>女僵尸</td><td>💆</td><td>按摩</td></tr><tr><td>💆‍♂️</td><td>男生按摩</td><td>💆‍♀️</td><td>女生按摩</td><td>💇</td><td>理发</td></tr><tr><td>💇‍♂️</td><td>男生理发</td><td>💇‍♀️</td><td>女生理发</td><td>🚶</td><td>行人</td></tr><tr><td>🚶‍♂️</td><td>男行人</td><td>🚶‍♀️</td><td>女行人</td><td>🧍</td><td>站立者</td></tr><tr><td>🧍‍♂️</td><td>站立的男人</td><td>🧍‍♀️</td><td>站立的女人</td><td>🧎</td><td>下跪者</td></tr><tr><td>🧎‍♂️</td><td>跪下的男人</td><td>🧎‍♀️</td><td>跪下的女人</td><td>👨‍🦯</td><td>拄盲杖的男人</td></tr><tr><td>👩‍🦯</td><td>拄盲杖的女人</td><td>👨‍🦼</td><td>坐电动轮椅的男人</td><td>👩‍🦼</td><td>坐电动轮椅的女人</td></tr><tr><td>👨‍🦽</td><td>坐手动轮椅的男人</td><td>👩‍🦽</td><td>坐手动轮椅的女人</td><td>🏃</td><td>跑步者</td></tr><tr><td>🏃‍♂️</td><td>男生跑步</td><td>🏃‍♀️</td><td>女生跑步</td><td>💃</td><td>跳舞的女人</td></tr><tr><td>🕺</td><td>跳舞的男人</td><td>🕴️</td><td>西装革履的人</td><td>👯</td><td>戴兔耳朵的人</td></tr><tr><td>👯‍♂️</td><td>兔先生</td><td>👯‍♀️</td><td>兔女郎</td><td>🧖</td><td>蒸房里的人</td></tr><tr><td>🧖‍♂️</td><td>蒸房里的男人</td><td>🧖‍♀️</td><td>蒸房里的女人</td><td>🧗</td><td>攀爬的人</td></tr><tr><td>🧗‍♂️</td><td>攀爬的男人</td><td>🧗‍♀️</td><td>攀爬的女人</td><td>🤺</td><td>击剑选手</td></tr><tr><td>🏇</td><td>赛马</td><td>⛷️</td><td>滑雪的人</td><td>🏂</td><td>滑雪板</td></tr><tr><td>🏌️</td><td>打高尔夫的人</td><td>🏌️‍♂️</td><td>男生打高尔夫</td><td>🏌️‍♀️</td><td>女生打高尔夫</td></tr><tr><td>🏄</td><td>冲浪</td><td>🏄‍♂️</td><td>男生冲浪</td><td>🏄‍♀️</td><td>女生冲浪</td></tr><tr><td>🚣</td><td>划艇</td><td>🚣‍♂️</td><td>男生划船</td><td>🚣‍♀️</td><td>女生划船</td></tr><tr><td>🏊</td><td>游泳</td><td>🏊‍♂️</td><td>男生游泳</td><td>🏊‍♀️</td><td>女生游泳</td></tr><tr><td>⛹️</td><td>玩球</td><td>⛹️‍♂️</td><td>男生玩球</td><td>⛹️‍♀️</td><td>女生玩球</td></tr><tr><td>🏋️</td><td>举重</td><td>🏋️‍♂️</td><td>男生举重</td><td>🏋️‍♀️</td><td>女生举重</td></tr><tr><td>🚴</td><td>骑自行车</td><td>🚴‍♂️</td><td>男生骑自行车</td><td>🚴‍♀️</td><td>女生骑自行车</td></tr><tr><td>🚵</td><td>骑山地车</td><td>🚵‍♂️</td><td>男生骑山地车</td><td>🚵‍♀️</td><td>女生骑山地车</td></tr><tr><td>🤸</td><td>侧手翻</td><td>🤸‍♂️</td><td>男生侧手翻</td><td>🤸‍♀️</td><td>女生侧手翻</td></tr><tr><td>🤼</td><td>摔跤选手</td><td>🤼‍♂️</td><td>男生摔跤</td><td>🤼‍♀️</td><td>女生摔跤</td></tr><tr><td>🤽</td><td>水球</td><td>🤽‍♂️</td><td>男生玩水球</td><td>🤽‍♀️</td><td>女生玩水球</td></tr><tr><td>🤾</td><td>手球</td><td>🤾‍♂️</td><td>男生玩手球</td><td>🤾‍♀️</td><td>女生玩手球</td></tr><tr><td>🤹</td><td>抛接杂耍</td><td>🤹‍♂️</td><td>男生抛接杂耍</td><td>🤹‍♀️</td><td>女生抛接杂耍</td></tr><tr><td>🧘</td><td>盘腿的人</td><td>🧘‍♂️</td><td>盘腿的男人</td><td>🧘‍♀️</td><td>盘腿的女人</td></tr><tr><td>🛀</td><td>洗澡的人</td><td>🛌</td><td>躺在床上的人</td><td>🧑‍🤝‍🧑</td><td>手拉手的两个人</td></tr><tr><td>🧑🏻‍🤝‍🧑🏻</td><td>手拉手的两个人 较浅肤色</td><td>🧑🏼‍🤝‍🧑🏻</td><td>手拉手的两个人 中等-浅肤色较浅肤色</td><td>🧑🏼‍🤝‍🧑🏼</td><td>手拉手的两个人 中等-浅肤色</td></tr><tr><td>🧑🏽‍🤝‍🧑🏻</td><td>手拉手的两个人 中等肤色较浅肤色</td><td>🧑🏽‍🤝‍🧑🏼</td><td>手拉手的两个人 中等肤色中等-浅肤色</td><td>🧑🏽‍🤝‍🧑🏽</td><td>手拉手的两个人 中等肤色</td></tr><tr><td>🧑🏾‍🤝‍🧑🏻</td><td>手拉手的两个人 中等-深肤色较浅肤色</td><td>🧑🏾‍🤝‍🧑🏼</td><td>手拉手的两个人 中等-深肤色中等-浅肤色</td><td>🧑🏾‍🤝‍🧑🏽</td><td>手拉手的两个人 中等-深肤色中等肤色</td></tr><tr><td>🧑🏾‍🤝‍🧑🏾</td><td>手拉手的两个人 中等-深肤色</td><td>🧑🏿‍🤝‍🧑🏻</td><td>手拉手的两个人 较深肤色较浅肤色</td><td>🧑🏿‍🤝‍🧑🏼</td><td>手拉手的两个人 较深肤色中等-浅肤色</td></tr><tr><td>🧑🏿‍🤝‍🧑🏽</td><td>手拉手的两个人 较深肤色中等肤色</td><td>🧑🏿‍🤝‍🧑🏾</td><td>手拉手的两个人 较深肤色中等-深肤色</td><td>🧑🏿‍🤝‍🧑🏿</td><td>手拉手的两个人 较深肤色</td></tr><tr><td>👭</td><td>手拉手的两个女人</td><td>👭🏻</td><td>手拉手的两个女人 较浅肤色</td><td>👩🏼‍🤝‍👩🏻</td><td>手拉手的两个女人 中等-浅肤色较浅肤色</td></tr><tr><td>👭🏼</td><td>手拉手的两个女人 中等-浅肤色</td><td>👩🏽‍🤝‍👩🏻</td><td>手拉手的两个女人 中等肤色较浅肤色</td><td>👩🏽‍🤝‍👩🏼</td><td>手拉手的两个女人 中等肤色中等-浅肤色</td></tr><tr><td>👭🏽</td><td>手拉手的两个女人 中等肤色</td><td>👩🏾‍🤝‍👩🏻</td><td>手拉手的两个女人 中等-深肤色较浅肤色</td><td>👩🏾‍🤝‍👩🏼</td><td>手拉手的两个女人 中等-深肤色中等-浅肤色</td></tr><tr><td>👩🏾‍🤝‍👩🏽</td><td>手拉手的两个女人 中等-深肤色中等肤色</td><td>👭🏾</td><td>手拉手的两个女人 中等-深肤色</td><td>👩🏿‍🤝‍👩🏻</td><td>手拉手的两个女人 较深肤色较浅肤色</td></tr><tr><td>👩🏿‍🤝‍👩🏼</td><td>手拉手的两个女人 较深肤色中等-浅肤色</td><td>👩🏿‍🤝‍👩🏽</td><td>手拉手的两个女人 较深肤色中等肤色</td><td>👩🏿‍🤝‍👩🏾</td><td>手拉手的两个女人 较深肤色中等-深肤色</td></tr><tr><td>👭🏿</td><td>手拉手的两个女人 较深肤色</td><td>👫</td><td>手拉手的一男一女</td><td>👫🏻</td><td>手拉手的一男一女 较浅肤色</td></tr><tr><td>👩🏻‍🤝‍👨🏼</td><td>手拉手的一男一女 较浅肤色中等-浅肤色</td><td>👩🏻‍🤝‍👨🏽</td><td>手拉手的一男一女 较浅肤色中等肤色</td><td>👩🏻‍🤝‍👨🏾</td><td>手拉手的一男一女 较浅肤色中等-深肤色</td></tr><tr><td>👩🏻‍🤝‍👨🏿</td><td>手拉手的一男一女 较浅肤色较深肤色</td><td>👩🏼‍🤝‍👨🏻</td><td>手拉手的一男一女 中等-浅肤色较浅肤色</td><td>👫🏼</td><td>手拉手的一男一女 中等-浅肤色</td></tr><tr><td>👩🏼‍🤝‍👨🏽</td><td>手拉手的一男一女 中等-浅肤色中等肤色</td><td>👩🏼‍🤝‍👨🏾</td><td>手拉手的一男一女 中等-浅肤色中等-深肤色</td><td>👩🏼‍🤝‍👨🏿</td><td>手拉手的一男一女 中等-浅肤色较深肤色</td></tr><tr><td>👩🏽‍🤝‍👨🏻</td><td>手拉手的一男一女 中等肤色较浅肤色</td><td>👩🏽‍🤝‍👨🏼</td><td>手拉手的一男一女 中等肤色中等-浅肤色</td><td>👫🏽</td><td>手拉手的一男一女 中等肤色</td></tr><tr><td>👩🏽‍🤝‍👨🏾</td><td>手拉手的一男一女 中等肤色中等-深肤色</td><td>👩🏽‍🤝‍👨🏿</td><td>手拉手的一男一女 中等肤色较深肤色</td><td>👩🏾‍🤝‍👨🏻</td><td>手拉手的一男一女 中等-深肤色较浅肤色</td></tr><tr><td>👩🏾‍🤝‍👨🏼</td><td>手拉手的一男一女 中等-深肤色中等-浅肤色</td><td>👩🏾‍🤝‍👨🏽</td><td>手拉手的一男一女 中等-深肤色中等肤色</td><td>👫🏾</td><td>手拉手的一男一女 中等-深肤色</td></tr><tr><td>👩🏾‍🤝‍👨🏿</td><td>手拉手的一男一女 中等-深肤色较深肤色</td><td>👩🏿‍🤝‍👨🏻</td><td>手拉手的一男一女 较深肤色较浅肤色</td><td>👩🏿‍🤝‍👨🏼</td><td>手拉手的一男一女 较深肤色中等-浅肤色</td></tr><tr><td>👩🏿‍🤝‍👨🏽</td><td>手拉手的一男一女 较深肤色中等肤色</td><td>👩🏿‍🤝‍👨🏾</td><td>手拉手的一男一女 较深肤色中等-深肤色</td><td>👫🏿</td><td>手拉手的一男一女 较深肤色</td></tr><tr><td>👬</td><td>手拉手的两个男人</td><td>👬🏻</td><td>手拉手的两个男人 较浅肤色</td><td>👨🏼‍🤝‍👨🏻</td><td>手拉手的两个男人 中等-浅肤色较浅肤色</td></tr><tr><td>👬🏼</td><td>手拉手的两个男人 中等-浅肤色</td><td>👨🏽‍🤝‍👨🏻</td><td>手拉手的两个男人 中等肤色较浅肤色</td><td>👨🏽‍🤝‍👨🏼</td><td>手拉手的两个男人 中等肤色中等-浅肤色</td></tr><tr><td>👬🏽</td><td>手拉手的两个男人 中等肤色</td><td>👨🏾‍🤝‍👨🏻</td><td>手拉手的两个男人 中等-深肤色较浅肤色</td><td>👨🏾‍🤝‍👨🏼</td><td>手拉手的两个男人 中等-深肤色中等-浅肤色</td></tr><tr><td>👨🏾‍🤝‍👨🏽</td><td>手拉手的两个男人 中等-深肤色中等肤色</td><td>👬🏾</td><td>手拉手的两个男人 中等-深肤色</td><td>👨🏿‍🤝‍👨🏻</td><td>手拉手的两个男人 较深肤色较浅肤色</td></tr><tr><td>👨🏿‍🤝‍👨🏼</td><td>手拉手的两个男人 较深肤色中等-浅肤色</td><td>👨🏿‍🤝‍👨🏽</td><td>手拉手的两个男人 较深肤色中等肤色</td><td>👨🏿‍🤝‍👨🏾</td><td>手拉手的两个男人 较深肤色中等-深肤色</td></tr><tr><td>👬🏿</td><td>手拉手的两个男人 较深肤色</td><td>💏</td><td>亲吻</td><td>👩‍❤️‍💋‍👨</td><td>亲吻 女人男人</td></tr><tr><td>👨‍❤️‍💋‍👨</td><td>亲吻 男人男人</td><td>👩‍❤️‍💋‍👩</td><td>亲吻 女人女人</td><td>💑</td><td>情侣</td></tr><tr><td>👩‍❤️‍👨</td><td>情侣 女人男人</td><td>👨‍❤️‍👨</td><td>情侣 男人男人</td><td>👩‍❤️‍👩</td><td>情侣 女人女人</td></tr><tr><td>👪</td><td>家庭</td><td>👨‍👩‍👦</td><td>家庭 男人女人男孩</td><td>👨‍👩‍👧</td><td>家庭 男人女人女孩</td></tr><tr><td>👨‍👩‍👧‍👦</td><td>家庭 男人女人女孩男孩</td><td>👨‍👩‍👦‍👦</td><td>家庭 男人女人男孩男孩</td><td>👨‍👩‍👧‍👧</td><td>家庭 男人女人女孩女孩</td></tr><tr><td>👨‍👨‍👦</td><td>家庭 男人男人男孩</td><td>👨‍👨‍👧</td><td>家庭 男人男人女孩</td><td>👨‍👨‍👧‍👦</td><td>家庭 男人男人女孩男孩</td></tr><tr><td>👨‍👨‍👦‍👦</td><td>家庭 男人男人男孩男孩</td><td>👨‍👨‍👧‍👧</td><td>家庭 男人男人女孩女孩</td><td>👩‍👩‍👦</td><td>家庭 女人女人男孩</td></tr><tr><td>👩‍👩‍👧</td><td>家庭 女人女人女孩</td><td>👩‍👩‍👧‍👦</td><td>家庭 女人女人女孩男孩</td><td>👩‍👩‍👦‍👦</td><td>家庭 女人女人男孩男孩</td></tr><tr><td>👩‍👩‍👧‍👧</td><td>家庭 女人女人女孩女孩</td><td>👨‍👦</td><td>家庭 男人男孩</td><td>👨‍👦‍👦</td><td>家庭 男人男孩男孩</td></tr><tr><td>👨‍👧</td><td>家庭 男人女孩</td><td>👨‍👧‍👦</td><td>家庭 男人女孩男孩</td><td>👨‍👧‍👧</td><td>家庭 男人女孩女孩</td></tr><tr><td>👩‍👦</td><td>家庭 女人男孩</td><td>👩‍👦‍👦</td><td>家庭 女人男孩男孩</td><td>👩‍👧</td><td>家庭 女人女孩</td></tr><tr><td>👩‍👧‍👦</td><td>家庭 女人女孩男孩</td><td>👩‍👧‍👧</td><td>家庭 女人女孩女孩</td><td>🗣️</td><td>说话</td></tr><tr><td>👤</td><td>人像</td><td>👥</td><td>双人像</td><td>👣</td><td>脚印</td></tr></tbody></table><h3 id="表情与情感"><a href="#表情与情感" class="headerlink" title="表情与情感"></a>表情与情感</h3><table><thead><tr><th>表情</th><th>名称</th><th>表情</th><th>名称</th><th>表情</th><th>名称</th></tr></thead><tbody><tr><td>😀</td><td>嘿嘿</td><td>😃</td><td>哈哈</td><td>😄</td><td>大笑</td></tr><tr><td>😁</td><td>嘻嘻</td><td>😆</td><td>斜眼笑</td><td>😅</td><td>苦笑</td></tr><tr><td>🤣</td><td>笑得满地打滚</td><td>😂</td><td>笑哭了</td><td>🙂</td><td>呵呵</td></tr><tr><td>🙃</td><td>倒脸</td><td>😉</td><td>眨眼</td><td>😊</td><td>羞涩微笑</td></tr><tr><td>😇</td><td>微笑天使</td><td>🥰</td><td>喜笑颜开</td><td>😍</td><td>花痴</td></tr><tr><td>🤩</td><td>好崇拜哦</td><td>😘</td><td>飞吻</td><td>😗</td><td>亲亲</td></tr><tr><td>☺️</td><td>微笑</td><td>😚</td><td>羞涩亲亲</td><td>😙</td><td>微笑亲亲</td></tr><tr><td>😋</td><td>好吃</td><td>😛</td><td>吐舌</td><td>😜</td><td>单眼吐舌</td></tr><tr><td>🤪</td><td>滑稽</td><td>😝</td><td>眯眼吐舌</td><td>🤑</td><td>发财</td></tr><tr><td>🤗</td><td>抱抱</td><td>🤭</td><td>不说</td><td>🤫</td><td>安静的脸</td></tr><tr><td>🤔</td><td>想一想</td><td>🤐</td><td>闭嘴</td><td>🤨</td><td>挑眉</td></tr><tr><td>😐</td><td>冷漠</td><td>😑</td><td>无语</td><td>😶</td><td>沉默</td></tr><tr><td>😏</td><td>得意</td><td>😒</td><td>不高兴</td><td>🙄</td><td>翻白眼</td></tr><tr><td>😬</td><td>龇牙咧嘴</td><td>🤥</td><td>说谎</td><td>😌</td><td>松了口气</td></tr><tr><td>😔</td><td>沉思</td><td>😪</td><td>困</td><td>🤤</td><td>流口水</td></tr><tr><td>😴</td><td>睡着了</td><td>😷</td><td>感冒</td><td>🤒</td><td>发烧</td></tr><tr><td>🤕</td><td>受伤</td><td>🤢</td><td>恶心</td><td>🤮</td><td>呕吐</td></tr><tr><td>🤧</td><td>打喷嚏</td><td>🥵</td><td>脸发烧</td><td>🥶</td><td>冷脸</td></tr><tr><td>🥴</td><td>头昏眼花</td><td>😵</td><td>晕头转向</td><td>🤯</td><td>爆炸头</td></tr><tr><td>🤠</td><td>牛仔帽脸</td><td>🥳</td><td>聚会笑脸</td><td>😎</td><td>墨镜笑脸</td></tr><tr><td>🤓</td><td>书呆子脸</td><td>🧐</td><td>带单片眼镜的脸</td><td>😕</td><td>困扰</td></tr><tr><td>😟</td><td>担心</td><td>🙁</td><td>微微不满</td><td>☹️</td><td>不满</td></tr><tr><td>😮</td><td>吃惊</td><td>😯</td><td>缄默</td><td>😲</td><td>震惊</td></tr><tr><td>😳</td><td>脸红</td><td>🥺</td><td>恳求的脸</td><td>😦</td><td>啊</td></tr><tr><td>😧</td><td>极度痛苦</td><td>😨</td><td>害怕</td><td>😰</td><td>冷汗</td></tr><tr><td>😥</td><td>失望但如释重负</td><td>😢</td><td>哭</td><td>😭</td><td>放声大哭</td></tr><tr><td>😱</td><td>吓死了</td><td>😖</td><td>困惑</td><td>😣</td><td>痛苦</td></tr><tr><td>😞</td><td>失望</td><td>😓</td><td>汗</td><td>😩</td><td>累死了</td></tr><tr><td>😫</td><td>累</td><td>🥱</td><td>打呵欠</td><td>😤</td><td>傲慢</td></tr><tr><td>😡</td><td>怒火中烧</td><td>😠</td><td>生气</td><td>🤬</td><td>嘴上有符号的脸</td></tr><tr><td>😈</td><td>恶魔微笑</td><td>👿</td><td>生气的恶魔</td><td>💀</td><td>头骨</td></tr><tr><td>☠️</td><td>骷髅</td><td>💩</td><td>大便</td><td>🤡</td><td>小丑脸</td></tr><tr><td>👹</td><td>食人魔</td><td>👺</td><td>小妖精</td><td>👻</td><td>鬼</td></tr><tr><td>👽</td><td>外星人</td><td>👾</td><td>外星怪物</td><td>🤖</td><td>机器人</td></tr><tr><td>😺</td><td>大笑的猫</td><td>😸</td><td>微笑的猫</td><td>😹</td><td>笑出眼泪的猫</td></tr><tr><td>😻</td><td>花痴的猫</td><td>😼</td><td>奸笑的猫</td><td>😽</td><td>亲亲猫</td></tr><tr><td>🙀</td><td>疲倦的猫</td><td>😿</td><td>哭泣的猫</td><td>😾</td><td>生气的猫</td></tr><tr><td>🙈</td><td>非礼勿视</td><td>🙉</td><td>非礼勿听</td><td>🙊</td><td>非礼勿言</td></tr><tr><td>💋</td><td>唇印</td><td>💌</td><td>情书</td><td>💘</td><td>心中箭了</td></tr><tr><td>💝</td><td>系有缎带的心</td><td>💖</td><td>闪亮的心</td><td>💗</td><td>搏动的心</td></tr><tr><td>💓</td><td>心跳</td><td>💞</td><td>舞动的心</td><td>💕</td><td>两颗心</td></tr><tr><td>💟</td><td>心型装饰</td><td>❣️</td><td>心叹号</td><td>💔</td><td>心碎</td></tr><tr><td>❤️</td><td>红心</td><td>🧡</td><td>橙心</td><td>💛</td><td>黄心</td></tr><tr><td>💚</td><td>绿心</td><td>💙</td><td>蓝心</td><td>💜</td><td>紫心</td></tr><tr><td>🤎</td><td>棕心</td><td>🖤</td><td>黑心</td><td>🤍</td><td>白心</td></tr><tr><td>💯</td><td>一百分</td><td>💢</td><td>怒</td><td>💥</td><td>爆炸</td></tr><tr><td>💫</td><td>头晕</td><td>💦</td><td>汗滴</td><td>💨</td><td>尾气</td></tr><tr><td>🕳️</td><td>洞</td><td>💣</td><td>炸弹</td><td>💬</td><td>话语气泡</td></tr><tr><td>👁️‍🗨️</td><td>眼睛对话框</td><td>🗨️</td><td>朝左的话语气泡</td><td>🗯️</td><td>愤怒话语气泡</td></tr><tr><td>💭</td><td>内心活动气泡</td><td>💤</td><td>睡着</td><td></td><td></td></tr></tbody></table><h1 id="页面样式调节"><a href="#页面样式调节" class="headerlink" title="页面样式调节"></a>页面样式调节</h1><p>这个教程是通过css样式调节各个页面透明度、模糊度（亚克力效果）、圆角、边框样式等，看起来会更加舒适。</p><h2 id="教程-1"><a href="#教程-1" class="headerlink" title="教程"></a>教程</h2><p>复制以下代码进去自定义的<code>custom.css</code>文件</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-pseudo">:root</span> &#123;</span><br><span class="line">  <span class="attr">--trans-light</span>: <span class="built_in">rgba</span>(<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>, <span class="number">0.88</span>);</span><br><span class="line">  <span class="attr">--trans-dark</span>: <span class="built_in">rgba</span>(<span class="number">25</span>, <span class="number">25</span>, <span class="number">25</span>, <span class="number">0.88</span>);</span><br><span class="line">  <span class="attr">--border-style</span>: <span class="number">1px</span> solid <span class="built_in">rgb</span>(<span class="number">169</span>, <span class="number">169</span>, <span class="number">169</span>);</span><br><span class="line">  <span class="attr">--backdrop-filter</span>: <span class="built_in">blur</span>(<span class="number">5px</span>) <span class="built_in">saturate</span>(<span class="number">150%</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 首页文章卡片 */</span></span><br><span class="line"><span class="selector-id">#recent-posts</span> &gt; <span class="selector-class">.recent-post-item</span> &#123;</span><br><span class="line">  <span class="attribute">background</span>: <span class="built_in">var</span>(--trans-light);</span><br><span class="line">  backdrop-<span class="attribute">filter</span>: <span class="built_in">var</span>(--backdrop-filter);</span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="number">25px</span>;</span><br><span class="line">  <span class="attribute">border</span>: <span class="built_in">var</span>(--border-style);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 首页侧栏卡片 */</span></span><br><span class="line"><span class="selector-id">#aside-content</span> <span class="selector-class">.card-widget</span> &#123;</span><br><span class="line">  <span class="attribute">background</span>: <span class="built_in">var</span>(--trans-light);</span><br><span class="line">  backdrop-<span class="attribute">filter</span>: <span class="built_in">var</span>(--backdrop-filter);</span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="number">18px</span>;</span><br><span class="line">  <span class="attribute">border</span>: <span class="built_in">var</span>(--border-style);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 文章页、归档页、普通页面 */</span></span><br><span class="line"><span class="selector-tag">div</span><span class="selector-id">#post</span>,</span><br><span class="line"><span class="selector-tag">div</span><span class="selector-id">#page</span>,</span><br><span class="line"><span class="selector-tag">div</span><span class="selector-id">#archive</span> &#123;</span><br><span class="line">  <span class="attribute">background</span>: <span class="built_in">var</span>(--trans-light);</span><br><span class="line">  backdrop-<span class="attribute">filter</span>: <span class="built_in">var</span>(--backdrop-filter);</span><br><span class="line">  <span class="attribute">border</span>: <span class="built_in">var</span>(--border-style);</span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="number">20px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 导航栏 */</span></span><br><span class="line"><span class="selector-id">#page-header</span><span class="selector-class">.nav-fixed</span> <span class="selector-id">#nav</span> &#123;</span><br><span class="line">  <span class="attribute">background</span>: <span class="built_in">rgba</span>(<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>, <span class="number">0.75</span>);</span><br><span class="line">  backdrop-<span class="attribute">filter</span>: <span class="built_in">var</span>(--backdrop-filter);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-attr">[data-theme=<span class="string">&quot;dark&quot;</span>]</span> <span class="selector-id">#page-header</span><span class="selector-class">.nav-fixed</span> <span class="selector-id">#nav</span> &#123;</span><br><span class="line">  <span class="attribute">background</span>: <span class="built_in">rgba</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0.7</span>) <span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 夜间模式遮罩 */</span></span><br><span class="line"><span class="selector-attr">[data-theme=<span class="string">&quot;dark&quot;</span>]</span> <span class="selector-id">#recent-posts</span> &gt; <span class="selector-class">.recent-post-item</span>,</span><br><span class="line"><span class="selector-attr">[data-theme=<span class="string">&quot;dark&quot;</span>]</span> <span class="selector-id">#aside-content</span> <span class="selector-class">.card-widget</span>,</span><br><span class="line"><span class="selector-attr">[data-theme=<span class="string">&quot;dark&quot;</span>]</span> <span class="selector-tag">div</span><span class="selector-id">#post</span>,</span><br><span class="line"><span class="selector-attr">[data-theme=<span class="string">&quot;dark&quot;</span>]</span> <span class="selector-tag">div</span><span class="selector-id">#archive</span>,</span><br><span class="line"><span class="selector-attr">[data-theme=<span class="string">&quot;dark&quot;</span>]</span> <span class="selector-tag">div</span><span class="selector-id">#page</span> &#123;</span><br><span class="line">  <span class="attribute">background</span>: <span class="built_in">var</span>(--trans-dark);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/* 夜间模式页脚页头遮罩透明 */</span></span><br><span class="line"><span class="selector-attr">[data-theme=<span class="string">&quot;dark&quot;</span>]</span> <span class="selector-id">#footer</span><span class="selector-pseudo">::before</span> &#123;</span><br><span class="line">  <span class="attribute">background</span>: transparent <span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-attr">[data-theme=<span class="string">&quot;dark&quot;</span>]</span> <span class="selector-id">#page-header</span><span class="selector-pseudo">::before</span> &#123;</span><br><span class="line">  <span class="attribute">background</span>: transparent <span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 阅读模式 */</span></span><br><span class="line"><span class="selector-class">.read-mode</span> <span class="selector-id">#aside-content</span> <span class="selector-class">.card-widget</span> &#123;</span><br><span class="line">  <span class="attribute">background</span>: <span class="built_in">rgba</span>(<span class="number">158</span>, <span class="number">204</span>, <span class="number">171</span>, <span class="number">0.5</span>) <span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.read-mode</span> <span class="selector-tag">div</span><span class="selector-id">#post</span> &#123;</span><br><span class="line">  <span class="attribute">background</span>: <span class="built_in">rgba</span>(<span class="number">158</span>, <span class="number">204</span>, <span class="number">171</span>, <span class="number">0.5</span>) <span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 夜间模式下的阅读模式 */</span></span><br><span class="line"><span class="selector-attr">[data-theme=<span class="string">&quot;dark&quot;</span>]</span> <span class="selector-class">.read-mode</span> <span class="selector-id">#aside-content</span> <span class="selector-class">.card-widget</span> &#123;</span><br><span class="line">  <span class="attribute">background</span>: <span class="built_in">rgba</span>(<span class="number">25</span>, <span class="number">25</span>, <span class="number">25</span>, <span class="number">0.9</span>) <span class="meta">!important</span>;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#ffffff</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-attr">[data-theme=<span class="string">&quot;dark&quot;</span>]</span> <span class="selector-class">.read-mode</span> <span class="selector-tag">div</span><span class="selector-id">#post</span> &#123;</span><br><span class="line">  <span class="attribute">background</span>: <span class="built_in">rgba</span>(<span class="number">25</span>, <span class="number">25</span>, <span class="number">25</span>, <span class="number">0.9</span>) <span class="meta">!important</span>;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#ffffff</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>记住在主题配置文件<code>_config.butterfly.yml</code>的<code>inject</code>配置项中引入该css文件：</p><figure class="highlight diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">inject: </span><br><span class="line">  head: </span><br><span class="line"><span class="addition">+    - &lt;link rel=&quot;stylesheet&quot; href=&quot;/css/custom.css&quot;&gt;</span></span><br></pre></td></tr></table></figure><h2 id="参数说明"><a href="#参数说明" class="headerlink" title="参数说明"></a>参数说明</h2><ul><li><code>--trans-light</code>：白天模式带透明度的背景色，如<code>rgba(255, 255, 255, 0.88)</code>底色是纯白色，其中0.88就透明度，在0-1之间调节，值越大越不透明；</li><li><code>--trans-dark</code>: 夜间模式带透明度的背景色，如<code>rgba(25, 25, 25, 0.88)</code>底色是柔和黑色，其中0.88就透明度，在0-1之间调节，值越大越不透明;</li><li><code>--border-style</code>: 边框样式，<code>1px solid rgb(169, 169, 169)</code>指宽度为1px的灰色实体边框;</li><li><code>--backdrop-filter</code>: 背景过滤器，如<code>blur(5px) saturate(150%)</code>表示饱和度为150%的、高斯模糊半径为5px的过滤器，这是亚克力效果的一种实现方法;</li><li>大家可以根据自己喜好进行调节，不用拘泥于我的样式！</li></ul>]]></content>
      
      
      <categories>
          
          <category> 博客搭建 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 🦋Butterfly </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>排序算法</title>
      <link href="/posts/67a5c110/"/>
      <url>/posts/67a5c110/</url>
      
        <content type="html"><![CDATA[<h1 id="基本排序"><a href="#基本排序" class="headerlink" title="基本排序"></a>基本排序</h1><h2 id="快排"><a href="#快排" class="headerlink" title="快排"></a>快排</h2><h3 id="二分-分治"><a href="#二分-分治" class="headerlink" title="二分 + 分治"></a>二分 + 分治</h3><h4 id="思路："><a href="#思路：" class="headerlink" title="思路："></a>思路：</h4><ol><li>令x=q[mid]，比x大的数放在x左边，比x小的数，放在x右边，然后递归；</li><li>考虑时间复杂度，采用双哨兵，当两个哨兵都不符合条件时，交换两个哨兵的位置；</li><li>结论: while 循环结束后, q[l..j] ≤x,q[j+1..r] ≥x 。</li></ol><h4 id="分治算法三步走"><a href="#分治算法三步走" class="headerlink" title="分治算法三步走"></a>分治算法三步走</h4><ol><li>分成子问题，确定分界点</li><li>递归处理子问题</li><li>归并：子问题合并 </li></ol><h4 id="边界问题："><a href="#边界问题：" class="headerlink" title="边界问题："></a>边界问题：</h4><div class="note purple icon-padding simple"><i class="note-icon far fa-hand-scissors"></i><p>快排属于<strong>分治算法</strong>，最怕的就是 <strong>n分成0和n</strong>，或 <strong>n分成n和0</strong>,这会造成<mark class="hl-label red">无限划分</mark> </p><ol><li><p>x=q[l],取(l,j),(j+1,r)，不能取(l,i) (i+1,r)因为j的最小值就是1,i的最小值为0,可能会分成0和n，造成无限划分</p></li><li><p>以j为划分时，x<strong>不能选</strong>q[r]； 若x选为q[r],数组中q[l..r-1] &lt; x, i=r,j=r,显然会造成无限划分</p><p>以i为划分时, 则x<strong>不能选</strong>q[l]  <strong>j &gt;= l</strong></p></li><li><p>do i++; while(q[i] &lt; x)和do j–; while(q[j] &gt; x) 中 能否用 q[i] &lt;= x 和 q[j] &gt;= x <span class="hide-inline"><button type="button" class="hide-button" style>Click<br></button><span class="hide-content">不能</span></span> </p><p><mark class="hl-label red">假设q[l..r]全相等</mark> ，则执行完do i++; while(q[i] &lt;= x);之后，i会自增到r+1，并且如果之后的q[i] &lt;= x (此时i &gt; r) 条件也不幸成立，就会造成一直循环下去，造成<strong>内存超限</strong>(Memory Limit Exceeded)</p></li><li><p>if(i &lt; j) swap(q[i], q[j]) <strong>可以使用</strong> if(i &lt;= j) swap(q[i], q[j]);</p><p>因为 i = j 时，交换一下q[i],q[j] 无影响，因为马上就会跳出循环了</p></li><li><p>最后一句能否改用quick_sort(q, l, j-1), quick_sort(q, j, r)作为划分,用i做划分时也是同样的道理? <span class="hide-inline"><button type="button" class="hide-button" style>Click<br></button><span class="hide-content">不能</span></span></p><p>可能会 q[l..i-1] &lt;= x, q[i] &gt;= x 或者 q[j+1..r] &gt;= x, q[j] &lt;= x 或者 i &gt;= j</p></li><li><p>while(i &lt; j) 能否改为 while(i &lt;= j) <span class="hide-inline"><button type="button" class="hide-button" style>Click<br></button><span class="hide-content">不能</span></span></p></li></ol></div><a class="btn-beautify outline blue larger" href="https://www.acwing.com/solution/content/16777/" title="边界问题证明"><i class="far fa-hand-point-right"></i><span>边界问题证明</span></a><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><div class="tabs" id="test4"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#test4-1">以j为分界</button></li><li class="tab"><button type="button" data-href="#test4-2"><i class="fas fa-bomb"></i>以i为分界</button></li><li class="tab"><button type="button" data-href="#test4-3">从小到大排序的模板</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="test4-1"><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">quick_sort</span><span class="params">(<span class="type">int</span> q[], <span class="type">int</span> l, <span class="type">int</span> r)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">//递归的终止情况</span></span><br><span class="line">    <span class="keyword">if</span>(l &gt;= r) <span class="keyword">return</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//第一步：分成子问题</span></span><br><span class="line">    <span class="type">int</span> i = l - <span class="number">1</span>, j = r + <span class="number">1</span>, x = q[l + r &gt;&gt; <span class="number">1</span>];</span><br><span class="line">    <span class="keyword">while</span>(i &lt; j)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">do</span> i++; <span class="keyword">while</span>(q[i] &lt; x);</span><br><span class="line">        <span class="keyword">do</span> j--; <span class="keyword">while</span>(q[j] &gt; x);</span><br><span class="line">        <span class="keyword">if</span>(i &lt; j) <span class="built_in">swap</span>(q[i], q[j]);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//第二步：递归处理子问题</span></span><br><span class="line">    <span class="built_in">quick_sort</span>(q, l, j), <span class="built_in">quick_sort</span>(q, j + <span class="number">1</span>, r);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//第三步：子问题合并.快排这一步不需要操作，但归并排序的核心在这一步骤</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test4-2"><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> q[N];</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">quick_sort</span><span class="params">(<span class="type">int</span> q[], <span class="type">int</span> l, <span class="type">int</span> r)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(l &gt;= r) <span class="keyword">return</span>;</span><br><span class="line">    <span class="type">int</span> i = l - <span class="number">1</span>, j = r + <span class="number">1</span>, x = q[l + r + <span class="number">1</span> &gt;&gt; <span class="number">1</span>];</span><br><span class="line">    <span class="comment">//注意是向上取整,因为向下取整可能使得x取到q[l]</span></span><br><span class="line">    <span class="keyword">while</span>(i &lt; j)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">do</span> i++; <span class="keyword">while</span>(q[i] &lt; x);</span><br><span class="line">        <span class="keyword">do</span> j--; <span class="keyword">while</span>(q[j] &gt; x);</span><br><span class="line">        <span class="keyword">if</span>(i &lt; j) <span class="built_in">swap</span>(q[i], q[j]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">quick_sort</span>(q, l, i - <span class="number">1</span>), <span class="built_in">quick_sort</span>(q, i, r); <span class="comment">//不用q[l..i],q[i+1..r]划分的道理和分析4中j的情况一样</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test4-3"><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">quick_sort</span><span class="params">(<span class="type">int</span> q[], <span class="type">int</span> l, <span class="type">int</span> r)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(l &gt;= r) <span class="keyword">return</span>;</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> i = l - <span class="number">1</span>, j = r + <span class="number">1</span>, x = q[l + r &gt;&gt; <span class="number">1</span>];</span><br><span class="line">    <span class="keyword">while</span>(i &lt; j)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">do</span> i++; <span class="keyword">while</span>(q[i] &gt; x); <span class="comment">// 这里和下面</span></span><br><span class="line">        <span class="keyword">do</span> j--; <span class="keyword">while</span>(q[j] &lt; x); <span class="comment">// 这行的判断条件改一下</span></span><br><span class="line">        <span class="keyword">if</span>(i &lt; j) <span class="built_in">swap</span>(q[i], q[j]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">quick_sort</span>(q, l, j), <span class="built_in">quick_sort</span>(q, j + <span class="number">1</span>, r);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="归并排序"><a href="#归并排序" class="headerlink" title="归并排序"></a>归并排序</h2>]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> algorithm </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Butterfly主题美化（二）</title>
      <link href="/posts/3da518b/"/>
      <url>/posts/3da518b/</url>
      
        <content type="html"><![CDATA[<h1 id="滚动条"><a href="#滚动条" class="headerlink" title="滚动条"></a>滚动条</h1><p>在<code>custom.css</code>中加入以下代码，其中<code>var(--theme-color)</code>换成你自己的主题色：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 滚动条样式 */</span></span><br><span class="line">::-webkit-scrollbar &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">8px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">8px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">::-webkit-scrollbar-track &#123;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="built_in">rgba</span>(<span class="number">73</span>, <span class="number">177</span>, <span class="number">245</span>, <span class="number">0.2</span>);</span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="number">2em</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">::-webkit-scrollbar-thumb &#123;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="built_in">var</span>(--theme-color);</span><br><span class="line">  <span class="attribute">background-image</span>: <span class="built_in">-webkit-linear-gradient</span>(</span><br><span class="line">    <span class="number">45deg</span>,</span><br><span class="line">    <span class="built_in">rgba</span>(<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>, <span class="number">0.4</span>) <span class="number">25%</span>,</span><br><span class="line">    transparent <span class="number">25%</span>,</span><br><span class="line">    transparent <span class="number">50%</span>,</span><br><span class="line">    <span class="built_in">rgba</span>(<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>, <span class="number">0.4</span>) <span class="number">50%</span>,</span><br><span class="line">    <span class="built_in">rgba</span>(<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>, <span class="number">0.4</span>) <span class="number">75%</span>,</span><br><span class="line">    transparent <span class="number">75%</span>,</span><br><span class="line">    transparent</span><br><span class="line">  );</span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="number">2em</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">::-webkit-scrollbar-corner &#123;</span><br><span class="line">  <span class="attribute">background-color</span>: transparent;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">::-moz-selection &#123;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#fff</span>;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="built_in">var</span>(--theme-color);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="彩色图标"><a href="#彩色图标" class="headerlink" title="彩色图标"></a>彩色图标</h1><h2 id="阿里巴巴矢量库"><a href="#阿里巴巴矢量库" class="headerlink" title="阿里巴巴矢量库"></a>阿里巴巴矢量库</h2><p>新建项目，勾选<strong>彩色</strong></p><p><img src="https://s2.loli.net/2023/02/03/Gx6HV9yIwYhdcPM.png" alt="图片.png"></p><h2 id="生成代码，引入"><a href="#生成代码，引入" class="headerlink" title="生成代码，引入"></a>生成代码，引入</h2><p><img src="https://s2.loli.net/2023/02/03/1xpziVljtHuocIN.png"></p><ol><li><strong>在/source目录下新建文件夹 source/css，新建文件font.css，然后将刚刚复制的.css代码粘贴进去</strong></li></ol><p>YML批量注释：选择块，在Linux和Windows上使用CTRL + /</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">@font-face</span> &#123;</span><br><span class="line">  <span class="attr">font-family:</span> <span class="string">&quot;iconfont&quot;</span><span class="string">;</span> <span class="string">/*</span> <span class="string">Project</span> <span class="string">id</span> <span class="number">3879074</span> <span class="string">*/</span></span><br><span class="line">  <span class="string">/*</span> <span class="string">Color</span> <span class="string">fonts</span> <span class="string">*/</span></span><br><span class="line">  <span class="attr">src:</span> </span><br><span class="line">       <span class="string">url(&#x27;//at.alicdn.com/t/c/font_3879074_gm2ud8juiik.woff2?t=1675411232260&#x27;)</span> <span class="string">format(&#x27;woff2&#x27;)</span>,</span><br><span class="line">       <span class="string">url(&#x27;//at.alicdn.com/t/c/font_3879074_gm2ud8juiik.woff?t=1675411232260&#x27;)</span> <span class="string">format(&#x27;woff&#x27;)</span>,</span><br><span class="line">       <span class="string">url(&#x27;//at.alicdn.com/t/c/font_3879074_gm2ud8juiik.ttf?t=1675411232260&#x27;)</span> <span class="string">format(&#x27;truetype&#x27;);</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="string">.iconfont</span> &#123;</span><br><span class="line">  <span class="attr">font-family:</span> <span class="string">&quot;iconfont&quot;</span> <span class="type">!important;</span></span><br><span class="line">  <span class="attr">font-size:</span> <span class="string">16px;</span></span><br><span class="line">  <span class="attr">font-style:</span> <span class="string">normal;</span></span><br><span class="line">  <span class="string">-webkit-font-smoothing:</span> <span class="string">antialiased;</span></span><br><span class="line">  <span class="string">-moz-osx-font-smoothing:</span> <span class="string">grayscale;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="string">.icon-icon-hengxiangshijianzhou:before</span> &#123;</span><br><span class="line">  <span class="attr">content:</span> <span class="string">&quot;\e6b3&quot;</span><span class="string">;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="string">.icon-home:before</span> &#123;</span><br><span class="line">  <span class="attr">content:</span> <span class="string">&quot;\e699&quot;</span><span class="string">;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="2"><li>添加inject</li></ol><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">inject:</span> </span><br><span class="line">  <span class="attr">head:</span> </span><br><span class="line">    <span class="bullet">-</span> <span class="string">&lt;link</span> <span class="string">rel=&quot;stylesheet&quot;</span> <span class="string">href=&quot;/css/font.css&quot;&gt;</span> <span class="comment"># 引入刚刚新建的图标库css文件</span></span><br><span class="line">  <span class="attr">bottom:</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><ol start="2"><li>更改菜单栏代码</li></ol><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">menu:</span></span><br><span class="line">  <span class="string">首页:</span> <span class="string">/</span> <span class="string">||</span> <span class="string">iconfont</span> <span class="string">icon-home</span> </span><br><span class="line">  <span class="string">时间轴:</span> <span class="string">/archives/</span> <span class="string">||</span> <span class="string">iconfont</span> <span class="string">icon-icon-hengxiangshijianzhou</span></span><br><span class="line">  <span class="string">标签:</span> <span class="string">/tags/</span> <span class="string">||</span> <span class="string">iconfont</span> <span class="string">icon-tag</span></span><br><span class="line">  <span class="string">分类:</span> <span class="string">/categories/</span> <span class="string">||</span> <span class="string">iconfont</span> <span class="string">icon-fenlei</span></span><br><span class="line">  <span class="string">日常</span> <span class="string">||</span> <span class="attr">fas fa-battery:</span></span><br><span class="line">    <span class="string">算法基础:</span> <span class="string">/algorithm/</span> <span class="string">||</span> <span class="string">iconfont</span> <span class="string">icon-suanfaku</span></span><br><span class="line">    <span class="string">算法题目:</span> <span class="string">/problem/</span> <span class="string">||</span> <span class="string">iconfont</span> <span class="string">icon-he_41timuguanli</span></span><br><span class="line">    <span class="string">嵌入式:</span> <span class="string">/embedded/</span> <span class="string">||</span> <span class="string">iconfont</span> <span class="string">icon-agora-iconography-12</span></span><br><span class="line">    <span class="string">物联网:</span> <span class="string">/internet/</span> <span class="string">||</span> <span class="string">iconfont</span> <span class="string">icon-wulianwang</span></span><br><span class="line">    <span class="attr">Linux:</span> <span class="string">/linux/</span> <span class="string">||</span> <span class="string">iconfont</span> <span class="string">icon-linux</span></span><br><span class="line">    <span class="string">个人博客搭建:</span> <span class="string">/blog/</span> <span class="string">||</span> <span class="string">iconfont</span> <span class="string">icon-blog</span></span><br><span class="line">    <span class="string">音乐:</span> <span class="string">/music/</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-music</span></span><br><span class="line">  <span class="comment"># 清单 ||fa fa-heartbeat:</span></span><br><span class="line">    <span class="comment"># 音乐: /music/ || fas fa-music</span></span><br><span class="line">    <span class="comment"># 电影: /movies/ || fas fa-video</span></span><br><span class="line">  <span class="string">友链:</span> <span class="string">/link/</span> <span class="string">||</span> <span class="string">iconfont</span> <span class="string">icon-lianjie</span></span><br><span class="line">  <span class="string">关于:</span> <span class="string">/about/</span> <span class="string">||</span> <span class="string">iconfont</span> <span class="string">icon-guanyu-banben</span></span><br></pre></td></tr></table></figure><h2 id="效果展示"><a href="#效果展示" class="headerlink" title="效果展示"></a>效果展示</h2><p>更改前：</p><p><img src="https://s2.loli.net/2023/02/03/din5BN9aqfyVsrG.png" alt="图片.png"></p><p>更改后：</p><p><img src="https://s2.loli.net/2023/02/03/JAmax6dF3eXf2WD.png" alt="图片.png"></p><h1 id="主页文章节选"><a href="#主页文章节选" class="headerlink" title="主页文章节选"></a>主页文章节选</h1><p>因为主题UI的关係，主页文章节选只支持自动节选和文章页description。</p><p>在butterfly里，有四种可供选择</p><ol><li>description： 只显示description</li><li>both： 优先选择description，如果没有配置description，则显示自动节选的内容</li><li>auto_excerpt：只显示自动节选<br>4.false： 不显示文章内容</li></ol><p>修改主题配置文件:</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">index_post_content:</span></span><br><span class="line">  <span class="attr">method:</span> <span class="number">3</span></span><br><span class="line">  <span class="attr">length:</span> <span class="number">500</span> <span class="comment"># if you set method to 2 or 3, the length need to config</span></span><br></pre></td></tr></table></figure><h1 id="加载效果"><a href="#加载效果" class="headerlink" title="加载效果"></a>加载效果</h1><p>页面没有加载完毕的的时候，加载的效果</p><p>配置 butterly.yml</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">preloader:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">false</span></span><br><span class="line">  <span class="comment"># source</span></span><br><span class="line">  <span class="comment"># 1. fullpage-loading</span></span><br><span class="line">  <span class="comment"># 2. pace (progress bar)</span></span><br><span class="line">  <span class="attr">source:</span> <span class="number">1</span></span><br><span class="line">  <span class="comment"># pace theme (see https://codebyzach.github.io/pace/)</span></span><br><span class="line">  <span class="attr">pace_css_url:</span></span><br></pre></td></tr></table></figure><p><img src="https://fastly.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-docs-preloader.gif"></p><h1 id="双栏布局"><a href="#双栏布局" class="headerlink" title="双栏布局"></a>双栏布局</h1><ol><li>安装插件</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">npm i hexo-butterfly-article-double-row --save</span><br><span class="line"><span class="comment"># 或者</span></span><br><span class="line">cnpm i hexo-butterfly-article-double-row --save</span><br></pre></td></tr></table></figure><ol start="2"><li>修改站点配置(<strong>根配置文件</strong>）_config.yml</li></ol><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">butterfly_article_double_row:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><ol start="3"><li>这样之后我们的页码会出现一个小bug，在自定义css文件中加入下面的代码，调整页码的位置</li></ol><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 翻页按钮居中 */</span></span><br><span class="line"><span class="selector-id">#pagination</span> &#123;</span><br><span class="line"><span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line"><span class="attribute">margin</span>: auto;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="旋转小风车"><a href="#旋转小风车" class="headerlink" title="旋转小风车"></a>旋转小风车</h1><p>在主题配置文件中，更改如下，下面对应的为小风车的编号，可以更改为自己的编号</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">beautify:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">field:</span> <span class="string">post</span> <span class="comment"># site/post</span></span><br><span class="line">  <span class="attr">title-prefix-icon:</span> <span class="string">&#x27;\f863&#x27;</span></span><br><span class="line">  <span class="attr">title-prefix-icon-color:</span> <span class="string">&quot;#F47466&quot;</span></span><br></pre></td></tr></table></figure><p>复制以下代码到css文件中</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 文章页H1-H6图标样式效果 */</span></span><br><span class="line"><span class="comment">/* 控制风车转动速度 4s那里可以自己调节快慢 */</span></span><br><span class="line"><span class="selector-tag">h1</span><span class="selector-pseudo">::before</span>,</span><br><span class="line"><span class="selector-tag">h2</span><span class="selector-pseudo">::before</span>,</span><br><span class="line"><span class="selector-tag">h3</span><span class="selector-pseudo">::before</span>,</span><br><span class="line"><span class="selector-tag">h4</span><span class="selector-pseudo">::before</span>,</span><br><span class="line"><span class="selector-tag">h5</span><span class="selector-pseudo">::before</span>,</span><br><span class="line"><span class="selector-tag">h6</span><span class="selector-pseudo">::before</span> &#123;</span><br><span class="line">  -webkit-<span class="attribute">animation</span>: ccc <span class="number">4s</span> linear infinite;</span><br><span class="line">  <span class="attribute">animation</span>: ccc <span class="number">4s</span> linear infinite;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 控制风车转动方向 -1turn 为逆时针转动，1turn 为顺时针转动，相同数字部分记得统一修改 */</span></span><br><span class="line"><span class="keyword">@-webkit-keyframes</span> ccc &#123;</span><br><span class="line">  <span class="number">0%</span> &#123;</span><br><span class="line">    -webkit-<span class="attribute">transform</span>: <span class="built_in">rotate</span>(<span class="number">0deg</span>);</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">rotate</span>(<span class="number">0deg</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="selector-tag">to</span> &#123;</span><br><span class="line">    -webkit-<span class="attribute">transform</span>: <span class="built_in">rotate</span>(-<span class="number">1turn</span>);</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">rotate</span>(-<span class="number">1turn</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">@keyframes</span> ccc &#123;</span><br><span class="line">  <span class="number">0%</span> &#123;</span><br><span class="line">    -webkit-<span class="attribute">transform</span>: <span class="built_in">rotate</span>(<span class="number">0deg</span>);</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">rotate</span>(<span class="number">0deg</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="selector-tag">to</span> &#123;</span><br><span class="line">    -webkit-<span class="attribute">transform</span>: <span class="built_in">rotate</span>(-<span class="number">1turn</span>);</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">rotate</span>(-<span class="number">1turn</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 设置风车颜色 */</span></span><br><span class="line"><span class="selector-id">#content-inner</span><span class="selector-class">.layout</span> <span class="selector-tag">h1</span><span class="selector-pseudo">::before</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#ef50a8</span>;</span><br><span class="line">  <span class="attribute">margin-left</span>: -<span class="number">1.55rem</span>;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">1.3rem</span>;</span><br><span class="line">  <span class="attribute">margin-top</span>: -<span class="number">0.23rem</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#content-inner</span><span class="selector-class">.layout</span> <span class="selector-tag">h2</span><span class="selector-pseudo">::before</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#fb7061</span>;</span><br><span class="line">  <span class="attribute">margin-left</span>: -<span class="number">1.35rem</span>;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">1.1rem</span>;</span><br><span class="line">  <span class="attribute">margin-top</span>: -<span class="number">0.12rem</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#content-inner</span><span class="selector-class">.layout</span> <span class="selector-tag">h3</span><span class="selector-pseudo">::before</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#ffbf00</span>;</span><br><span class="line">  <span class="attribute">margin-left</span>: -<span class="number">1.22rem</span>;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">0.95rem</span>;</span><br><span class="line">  <span class="attribute">margin-top</span>: -<span class="number">0.09rem</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#content-inner</span><span class="selector-class">.layout</span> <span class="selector-tag">h4</span><span class="selector-pseudo">::before</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#a9e000</span>;</span><br><span class="line">  <span class="attribute">margin-left</span>: -<span class="number">1.05rem</span>;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">0.8rem</span>;</span><br><span class="line">  <span class="attribute">margin-top</span>: -<span class="number">0.09rem</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#content-inner</span><span class="selector-class">.layout</span> <span class="selector-tag">h5</span><span class="selector-pseudo">::before</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#57c850</span>;</span><br><span class="line">  <span class="attribute">margin-left</span>: -<span class="number">0.9rem</span>;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">0.7rem</span>;</span><br><span class="line">  <span class="attribute">margin-top</span>: <span class="number">0rem</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#content-inner</span><span class="selector-class">.layout</span> <span class="selector-tag">h6</span><span class="selector-pseudo">::before</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#5ec1e0</span>;</span><br><span class="line">  <span class="attribute">margin-left</span>: -<span class="number">0.9rem</span>;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">0.66rem</span>;</span><br><span class="line">  <span class="attribute">margin-top</span>: <span class="number">0rem</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* s设置风车hover动效 6s那里可以自己调节快慢*/</span></span><br><span class="line"><span class="selector-id">#content-inner</span><span class="selector-class">.layout</span> <span class="selector-tag">h1</span><span class="selector-pseudo">:hover</span>,</span><br><span class="line"><span class="selector-id">#content-inner</span><span class="selector-class">.layout</span> <span class="selector-tag">h2</span><span class="selector-pseudo">:hover</span>,</span><br><span class="line"><span class="selector-id">#content-inner</span><span class="selector-class">.layout</span> <span class="selector-tag">h3</span><span class="selector-pseudo">:hover</span>,</span><br><span class="line"><span class="selector-id">#content-inner</span><span class="selector-class">.layout</span> <span class="selector-tag">h4</span><span class="selector-pseudo">:hover</span>,</span><br><span class="line"><span class="selector-id">#content-inner</span><span class="selector-class">.layout</span> <span class="selector-tag">h5</span><span class="selector-pseudo">:hover</span>,</span><br><span class="line"><span class="selector-id">#content-inner</span><span class="selector-class">.layout</span> <span class="selector-tag">h6</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: <span class="built_in">var</span>(--theme-color);</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#content-inner</span><span class="selector-class">.layout</span> <span class="selector-tag">h1</span><span class="selector-pseudo">:hover</span><span class="selector-pseudo">::before</span>,</span><br><span class="line"><span class="selector-id">#content-inner</span><span class="selector-class">.layout</span> <span class="selector-tag">h2</span><span class="selector-pseudo">:hover</span><span class="selector-pseudo">::before</span>,</span><br><span class="line"><span class="selector-id">#content-inner</span><span class="selector-class">.layout</span> <span class="selector-tag">h3</span><span class="selector-pseudo">:hover</span><span class="selector-pseudo">::before</span>,</span><br><span class="line"><span class="selector-id">#content-inner</span><span class="selector-class">.layout</span> <span class="selector-tag">h4</span><span class="selector-pseudo">:hover</span><span class="selector-pseudo">::before</span>,</span><br><span class="line"><span class="selector-id">#content-inner</span><span class="selector-class">.layout</span> <span class="selector-tag">h5</span><span class="selector-pseudo">:hover</span><span class="selector-pseudo">::before</span>,</span><br><span class="line"><span class="selector-id">#content-inner</span><span class="selector-class">.layout</span> <span class="selector-tag">h6</span><span class="selector-pseudo">:hover</span><span class="selector-pseudo">::before</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: <span class="built_in">var</span>(--theme-color);</span><br><span class="line">  -webkit-<span class="attribute">animation</span>: ccc <span class="number">6s</span> linear infinite;</span><br><span class="line">  <span class="attribute">animation</span>: ccc <span class="number">6s</span> linear infinite;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="首页文章轮播"><a href="#首页文章轮播" class="headerlink" title="首页文章轮播"></a>首页文章轮播</h1><a class="btn-beautify outline blue larger" href="https://akilar.top/posts/3d221bf2/" title="参考博客:akilar的教程"><i class="far fa-hand-point-right"></i><span>参考博客:akilar的教程</span></a><h2 id="教程"><a href="#教程" class="headerlink" title="教程"></a>教程</h2><ol><li>安装插件,在博客根目录<code>[Blogroot]</code>下打开终端，运行以下指令：</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-butterfly-swiper --save</span><br></pre></td></tr></table></figure><ol start="2"><li>添加配置信息，以下为写法示例<br>在站点配置文件<code>_config.yml</code>或者主题配置文件<code>_config.butterfly.yml</code>中添加</li></ol><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># hexo-butterfly-swiper</span></span><br><span class="line"><span class="comment"># see https://akilar.top/posts/8e1264d1/</span></span><br><span class="line"><span class="attr">swiper:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span> <span class="comment"># 开关</span></span><br><span class="line">  <span class="attr">priority:</span> <span class="number">5</span> <span class="comment">#过滤器优先权</span></span><br><span class="line">  <span class="attr">enable_page:</span> <span class="string">all</span> <span class="comment"># 应用页面</span></span><br><span class="line">  <span class="attr">timemode:</span> <span class="string">date</span> <span class="comment">#date/updated</span></span><br><span class="line">  <span class="attr">layout:</span> <span class="comment"># 挂载容器类型</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">id</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">recent-posts</span></span><br><span class="line">    <span class="attr">index:</span> <span class="number">0</span></span><br><span class="line">  <span class="attr">default_descr:</span> <span class="string">再怎么看我也不知道怎么描述它的啦！</span></span><br><span class="line">  <span class="attr">swiper_css:</span> <span class="string">https://npm.elemecdn.com/hexo-butterfly-swiper/lib/swiper.min.css</span> <span class="comment">#swiper css依赖</span></span><br><span class="line">  <span class="attr">swiper_js:</span> <span class="string">https://npm.elemecdn.com/hexo-butterfly-swiper/lib/swiper.min.js</span> <span class="comment">#swiper js依赖</span></span><br><span class="line">  <span class="attr">custom_css:</span> <span class="string">https://npm.elemecdn.com/hexo-butterfly-swiper/lib/swiperstyle.css</span> <span class="comment"># 适配主题样式补丁</span></span><br><span class="line">  <span class="attr">custom_js:</span> <span class="string">https://npm.elemecdn.com/hexo-butterfly-swiper/lib/swiper_init.js</span> <span class="comment"># swiper初始化方法</span></span><br></pre></td></tr></table></figure><ol start="3"><li>参数释义</li></ol><table><thead><tr><th align="left">参数</th><th align="left">备选值/类型</th><th align="left">释义</th></tr></thead><tbody><tr><td align="left">priority</td><td align="left">number</td><td align="left">【可选】过滤器优先级，数值越小，执行越早，默认为10，选填</td></tr><tr><td align="left">enable</td><td align="left">true/false</td><td align="left">【必选】控制开关</td></tr><tr><td align="left">enable_page</td><td align="left">path/all</td><td align="left">【可选】填写想要应用的页面的相对路径（即路由地址）,如根目录就填’/‘,分类页面就填’/categories/‘。若要应用于所有页面，就填’all’，默认为all</td></tr><tr><td align="left">timemode</td><td align="left">date/updated</td><td align="left">【可选】时间显示，date为显示创建日期，updated为显示更新日期,默认为date</td></tr><tr><td align="left">layout.type</td><td align="left">id/class</td><td align="left">【可选】挂载容器类型，填写id或class，不填则默认为id</td></tr><tr><td align="left">layout.name</td><td align="left">text</td><td align="left">【必选】挂载容器名称</td></tr><tr><td align="left">layout.index</td><td align="left">0和正整数</td><td align="left">【可选】前提是layout.type为class，因为同一页面可能有多个class，此项用来确认究竟排在第几个顺位</td></tr><tr><td align="left">default_descr</td><td align="left">text</td><td align="left">默认文章描述</td></tr><tr><td align="left">swiper_css</td><td align="left">url</td><td align="left">【可选】自定义的swiper依赖项css链接</td></tr><tr><td align="left">swiper_js</td><td align="left">url</td><td align="left">【可选】自定义的swiper依赖项加js链接</td></tr><tr><td align="left">custom_css</td><td align="left">url</td><td align="left">【可选】适配主题样式补丁</td></tr><tr><td align="left">custom_js</td><td align="left">url</td><td align="left">【可选】swiper初始化方法</td></tr></tbody></table><h2 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h2><p>在文章的<code>front_matter</code>中添加<code>swiper_index</code>配置项即可。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: 文章标题</span><br><span class="line">date: 创建日期</span><br><span class="line">updated: 更新日期</span><br><span class="line">cover: 文章封面</span><br><span class="line">description: 文章描述</span><br><span class="line">swiper_index: 1 #置顶轮播图顺序，非负整数，数字越大越靠前</span><br><span class="line">---</span><br></pre></td></tr></table></figure><h1 id="分类磁贴"><a href="#分类磁贴" class="headerlink" title="分类磁贴"></a>分类磁贴</h1><a class="btn-beautify outline blue larger" href="https://zfe.space/post/55585.html" title="参考博客"><i class="far fa-hand-point-right"></i><span>参考博客</span></a><ol><li>安装插件,在博客根目录<code>[Blogroot]</code>下打开终端，运行以下指令：</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-butterfly-categories-card --save</span><br></pre></td></tr></table></figure><ol start="2"><li>添加配置信息，以下为写法示例<br>在站点配置文件<code>_config.yml</code>或者主题配置文件<code>_config.butterfly.yml</code>中添加</li></ol><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># hexo-butterfly-categories-card</span></span><br><span class="line"><span class="comment"># see https://akilar.top/posts/a9131002/</span></span><br><span class="line"><span class="attr">categoryBar:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span> <span class="comment"># 开关</span></span><br><span class="line">  <span class="attr">priority:</span> <span class="number">5</span> <span class="comment">#过滤器优先权</span></span><br><span class="line">  <span class="attr">enable_page:</span> <span class="string">/</span> <span class="comment"># 应用页面</span></span><br><span class="line">  <span class="attr">layout:</span> <span class="comment"># 挂载容器类型</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">id</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">recent-posts</span></span><br><span class="line">    <span class="attr">index:</span> <span class="number">0</span></span><br><span class="line">  <span class="attr">column:</span> <span class="string">odd</span> <span class="comment"># odd：3列 | even：4列</span></span><br><span class="line">  <span class="attr">row:</span> <span class="number">1</span> <span class="comment">#显示行数，默认两行，超过行数切换为滚动显示</span></span><br><span class="line">  <span class="attr">message:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">descr:</span> <span class="string">Ubuntu指南</span></span><br><span class="line">      <span class="attr">cover:</span> <span class="string">https://npm.elemecdn.com/akilar-candyassets/image/cover1.webp</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">descr:</span> <span class="string">玩转Win10</span></span><br><span class="line">      <span class="attr">cover:</span> <span class="string">https://npm.elemecdn.com/akilar-candyassets/image/cover2.webp</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">descr:</span> <span class="string">长篇小说连载</span></span><br><span class="line">      <span class="attr">cover:</span> <span class="string">https://npm.elemecdn.com/akilar-candyassets/image/cover3.webp</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">descr:</span> <span class="string">个人日记</span></span><br><span class="line">      <span class="attr">cover:</span> <span class="string">https://npm.elemecdn.com/akilar-candyassets/image/cover4.webp</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">descr:</span> <span class="string">诗词歌赋</span></span><br><span class="line">      <span class="attr">cover:</span> <span class="string">https://npm.elemecdn.com/akilar-candyassets/image/cover5.webp</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">descr:</span> <span class="string">杂谈教程</span></span><br><span class="line">      <span class="attr">cover:</span> <span class="string">https://npm.elemecdn.com/akilar-candyassets/image/cover6.webp</span></span><br><span class="line">  <span class="attr">custom_css:</span> <span class="string">https://npm.elemecdn.com/hexo-butterfly-categories-card@1.0.0/lib/categorybar.css</span></span><br></pre></td></tr></table></figure><ol start="3"><li>参数释义</li></ol><table><thead><tr><th align="left">参数</th><th align="left">备选值/类型</th><th align="left">释义</th></tr></thead><tbody><tr><td align="left">priority</td><td align="left">number</td><td align="left">【可选】过滤器优先级，数值越小，执行越早，默认为10，选填</td></tr><tr><td align="left">enable</td><td align="left">true/false</td><td align="left">【必选】控制开关</td></tr><tr><td align="left">enable_page</td><td align="left">path/all</td><td align="left">【可选】填写想要应用的页面的相对路径（即路由地址）,如根目录就填’/‘,分类页面就填’/categories/‘。若要应用于所有页面，就填’all’，默认为’/‘</td></tr><tr><td align="left">layout.type</td><td align="left">id/class</td><td align="left">【可选】挂载容器类型，填写id或class，不填则默认为id</td></tr><tr><td align="left">layout.name</td><td align="left">text</td><td align="left">【必选】挂载容器名称</td></tr><tr><td align="left">layout.index</td><td align="left">0和正整数</td><td align="left">【可选】前提是layout.type为class，因为同一页面可能有多个class，此项用来确认究竟排在第几个顺位</td></tr><tr><td align="left">column</td><td align="left">odd/even</td><td align="left">【可选】显示列数，考虑到比例问题，只提供3列和4列，odd为3列， even为4列</td></tr><tr><td align="left">row</td><td align="left">number</td><td align="left">【可选】显示行数，默认两行，超过行数切换为滚动显示</td></tr><tr><td align="left">message.descr</td><td align="left">text</td><td align="left">分类描述,需要和你自己的文章分类一一对应。</td></tr><tr><td align="left">message.cover</td><td align="left">url</td><td align="left">分类背景,需要和你自己的文章分类一一对应。</td></tr><tr><td align="left">custom_css</td><td align="left">url</td><td align="left">【可选】自定义样式，会替换默认的css链接，可以下载文档给出的cdn链接后自主修改</td></tr></tbody></table><h1 id="引入CSS和JS"><a href="#引入CSS和JS" class="headerlink" title="引入CSS和JS"></a>引入CSS和JS</h1><h2 id="创建文件夹"><a href="#创建文件夹" class="headerlink" title="创建文件夹"></a>创建文件夹</h2><p>我们找到source文件夹<br>在里面创建js和css文件夹，如果你有其他需求，也可以在这里创建文件夹，例如存放图片的img文件夹，存放字体的font文件夹等等。<br><strong>不要直接在主题目录下面创建文件夹，虽然这样也可以，但是主题更新没做转移的话就GG了。</strong><br><a href="https://cdn.leonus.cn/img/2022-07-16_09-29-50.webp"><img src="https://cdn.leonus.cn/img/2022-07-16_09-29-50.webp" alt="img"></a></p><h2 id="引入文件"><a href="#引入文件" class="headerlink" title="引入文件"></a>引入文件</h2><p>一般来说，我们都是在主题配置文件（<code>_config.butterfly.yml</code>）里面的inject引入。<br>css文件在head引入，js文件在bottom里引入，有的js要求在head引入，不然无法生效。</p><p>例如引入css里面的<code>style.css</code>和js文件夹里面的<code>script.js</code>文件夹，可以这样写:</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">inject:</span></span><br><span class="line">  <span class="attr">head:</span></span><br><span class="line">    <span class="comment"># 自定义css</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">&lt;link</span> <span class="string">rel=&quot;stylesheet&quot;</span> <span class="string">href=&quot;/css/style.css?v1&quot;&gt;</span></span><br><span class="line">    <span class="comment"># 静态文件后面加个  ?任意内容  可以在每次更新之后用户自动重新请求.</span></span><br><span class="line">    <span class="comment"># 例如添加 ?1 ,在修改此文件后改成 ?2 ,用户访问你的网站时,不会使用本地的缓存,而是请求新的内容。没修改的话就不用动。</span></span><br><span class="line">  <span class="attr">bottom:</span></span><br><span class="line">    <span class="comment"># 自定义js</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">&lt;script</span> <span class="string">src=&quot;/js/script.js?v1&quot;&gt;&lt;/script&gt;</span></span><br><span class="line">    <span class="comment"># 引入多个文件就直接往下复制一行改一下文件名即可，如下：</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">&lt;script</span> <span class="string">src=&quot;/js/script1.js?v1&quot;&gt;&lt;/script&gt;</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">&lt;script</span> <span class="string">src=&quot;/js/script2.js?v1&quot;&gt;&lt;/script&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>注意：路径要添加 <code>/xxx</code>，不能添加 <code>.</code>/xxx。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 博客搭建 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 🦋Butterfly </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Butterfly主题美化（一）</title>
      <link href="/posts/96772efb/"/>
      <url>/posts/96772efb/</url>
      
        <content type="html"><![CDATA[<h1 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h1><h2 id="头像"><a href="#头像" class="headerlink" title="头像"></a>头像</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">avatar:</span><br><span class="line">  img: /images/b.jpg</span><br><span class="line">  effect: false # true则会一直转圈</span><br></pre></td></tr></table></figure><h2 id="背景-1"><a href="#背景-1" class="headerlink" title="背景"></a>背景</h2><p>修改主题配置文件<code>_config.butterfly.yml</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># 图片格式 url(http://xxxxxx.com/xxx.jpg)</span><br><span class="line"># 颜色（HEX值/RGB值/颜色单词/渐变色)</span><br><span class="line"># 留空 不显示背景</span><br><span class="line">background: url(https://source.fomal.cc/img/dm1.webp)</span><br></pre></td></tr></table></figure><p>如果你的网站根目录不是<code>&#39;/&#39;</code>，使用本地图片时，需加上你的根目录。<br>例如：网站是 <code>https://yoursite.com/blog</code>，引用一张 <code>img/xx.png</code> 图片，则设置 <code>background</code> 为 <code>url(/blog/img/xx.png)</code></p><p><strong>注意</strong>：图片应在 Source 文件夹下新建 images 文件，然后导入此路径</p><p><img src="https://s2.loli.net/2023/02/02/D6vCqiA4dRpcgom.jpg" alt="QQ浏览器截图20230202192321.jpg"></p><h2 id="顶部图"><a href="#顶部图" class="headerlink" title="顶部图"></a>顶部图</h2><table><thead><tr><th>配置</th><th>解释</th></tr></thead><tbody><tr><td>index_img</td><td>主页的 top_img</td></tr><tr><td>default_top_img</td><td>默认的 top_img，当页面的 top_img 没有配置时，会显示 default_top_img</td></tr><tr><td>archive_img</td><td>归档页面的 top_img</td></tr><tr><td>tag_img</td><td>tag 子页面 的 默认 top_img</td></tr><tr><td>tag_per_img</td><td>tag 子页面的 top_img，可配置每个 tag 的 top_img</td></tr><tr><td>category_img</td><td>category 子页面 的 默认 top_img</td></tr><tr><td>category_per_img</td><td>category 子页面的 top_img，可配置每个 category 的 top_img</td></tr></tbody></table><p>修改主题配置文件 <code>_config.butterfly.yml</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">index_img: xxx.png</span><br></pre></td></tr></table></figure><p>其它页面 （tags/categories/ 自建页面）和文章页的 <code>top_img</code> ，请到对应的 md 页面设置 <code>front-matter</code> 中的 <code>top_img</code></p><p><code>tag_per_img</code> 和 <code>category_per_img</code> 是 3.2.0 新增的内容，可对 tag 和 category 进行单独的配置</p><p>并不推荐为每个 tag 和每个 category 都配置不同的顶部图，因为配置太多会拖慢生成速度</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">tag_per_img：</span><br><span class="line">  aplayer: https://xxxxxx.png</span><br><span class="line">  android: ddddddd.png</span><br><span class="line"></span><br><span class="line">category_per_img：</span><br><span class="line">  随想: hdhdh.png</span><br><span class="line">  推荐: ddjdjdjd.png</span><br></pre></td></tr></table></figure><h2 id="图床配置图片"><a href="#图床配置图片" class="headerlink" title="图床配置图片"></a>图床配置图片</h2><p>采用 <a href="https://sm.ms/">SM.MS 图床</a>，在网上储存图片</p><ul><li>速度：现在估计是被滥用了没那么快了 烧风购买了更多节点、修改了服务架构，现在全球速度还是不错的。</li><li>CDN：烧风自建的 CDN，有香港阿里云、DigitalOcean 欧洲和 Linode 北美等节点</li><li> HTTPS：HTTP 会被 301 跳转 HTTPS（支持 HTTP2）</li><li>域名：<code>ooo.0o0.ooo``i.loli.net</code></li></ul><h1 id="文章"><a href="#文章" class="headerlink" title="文章"></a>文章</h1><h2 id="代码样式"><a href="#代码样式" class="headerlink" title="代码样式"></a>代码样式</h2><h3 id="代码高亮"><a href="#代码高亮" class="headerlink" title="代码高亮"></a>代码高亮</h3><p><code>Butterfly</code> 支持 6 种代码高亮样式：</p><ul><li>darker</li><li>pale night</li><li>light</li><li>ocean</li><li>mac</li><li>mac light</li></ul><p>修改主题配置文件 <code>_config.butterfly.yml</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">highlight_theme: mac</span><br></pre></td></tr></table></figure><h3 id="代码复制"><a href="#代码复制" class="headerlink" title="代码复制"></a>代码复制</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">highlight_copy: true</span><br></pre></td></tr></table></figure><h3 id="代码框展开-关闭"><a href="#代码框展开-关闭" class="headerlink" title="代码框展开 / 关闭"></a>代码框展开 / 关闭</h3><p>修改主题配置文件<code>_config.butterfly.yml</code>。中的 <code>highlight_shrink</code> 属性。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">highlight_shrink: true      #代码框不展开，需点击 &#x27;&gt;&#x27; 打开</span><br></pre></td></tr></table></figure><p>在默认情况下，代码框自动展开，可设置是否所有代码框都关闭状态，点击 &gt; 可展开代码。</p><ul><li>true 全部代码框不展开，需点击 &gt; 打开</li><li>false 代码框展开，有 &gt; 点击按钮</li><li>none 不显示 &gt; 按钮</li></ul><p><img src="https://s2.loli.net/2023/02/02/IhJxBPLCzrX2seo.png" alt="image.png"></p><h2 id="生成文章唯一链接"><a href="#生成文章唯一链接" class="headerlink" title="生成文章唯一链接"></a>生成文章唯一链接</h2><ol><li>安装插件，在博客根目录 [Blogroot] 下打开终端，运行以下指令：</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-abbrlink --save</span><br></pre></td></tr></table></figure><ol><li>插件安装成功后，在根目录 [Blogroot] 的配置文件 <strong>_config.yml</strong> 找到 permalink：</li></ol><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"> <span class="attr">permalink:</span> <span class="string">:year/:month/:day/:title/</span></span><br><span class="line"><span class="comment">#修改为</span></span><br><span class="line"><span class="attr">permalink:</span> <span class="string">post/:abbrlink.html</span> <span class="comment"># post为自定义前缀</span></span><br><span class="line"><span class="attr">abbrlink:</span></span><br><span class="line">    <span class="attr">alg:</span> <span class="string">crc32</span>   <span class="comment">#算法： crc16(default) and crc32</span></span><br><span class="line">    <span class="attr">rep:</span> <span class="string">hex</span>     <span class="comment">#进制： dec(default) and hex</span></span><br></pre></td></tr></table></figure><h2 id="文章置顶与封面"><a href="#文章置顶与封面" class="headerlink" title="文章置顶与封面"></a>文章置顶与封面</h2><ol><li><p>你可以直接在文章的 <code>front-matter</code> 区域里添加 <code>sticky: 1</code> 属性来把这篇文章置顶。数值越大，置顶的优先级越大。</p></li><li><p>文章的 markdown 文档上，在 <code>Front-matter</code> 添加 <code>cover</code>，并填上要显示的图片地址。如果不配置 <code>cover</code>，可以设置显示默认的 <code>cover</code>；如果不想在首页显示 cover，可以设置为 <code>false</code>。<br>修改主题配置文件<code>_config.butterfly.yml</code>。</p></li></ol><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">cover:</span></span><br><span class="line">  <span class="comment"># 是否显示文章封面</span></span><br><span class="line">  <span class="attr">index_enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">aside_enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">archives_enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="comment"># 封面显示的位置</span></span><br><span class="line">  <span class="comment"># 三个值可配置 left , right , both</span></span><br><span class="line">  <span class="attr">position:</span> <span class="string">both</span></span><br><span class="line">  <span class="comment"># 当没有设置cover时，默认的封面显示</span></span><br><span class="line">  <span class="attr">default_cover:</span> </span><br></pre></td></tr></table></figure><p>当配置多张图片时，会随机选择一张作为 cover，此时写法应为：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">default_cover:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">https://cdn.jsdelivr.net/gh/jerryc127/CDN@latest/cover/default_bg.png</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">https://cdn.jsdelivr.net/gh/jerryc127/CDN@latest/cover/default_bg2.png</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">https://cdn.jsdelivr.net/gh/jerryc127/CDN@latest/cover/default_bg3.png</span></span><br></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2023/02/02/Wl9j546LUdTmbOy.png" alt="img"></p><h2 id="给文章添加标签和分类"><a href="#给文章添加标签和分类" class="headerlink" title="给文章添加标签和分类"></a>给文章添加标签和分类</h2><p>增加标签和分类两个页面</p><p>接下来，我们就要给文章添加标签和分类。</p><p>打开一篇文章，我们可以看到开头已经有 <code>yaml</code> 语法的框架了，不知道或者想回顾 <code>yaml</code> 语法的话移步：<a href="https://link.zhihu.com/?target=https://www.dongyaoo.com/085392f66d6f.html">开发者必须要掌握的 YAML 知识点</a>。将其修改为：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">张三的自我救赎</span></span><br><span class="line"><span class="attr">date:</span> <span class="number">2022-04-24 10:25:34</span></span><br><span class="line"><span class="attr">categories:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">随笔</span></span><br><span class="line"><span class="attr">tags:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">张三</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">笔记</span></span><br><span class="line"><span class="attr">keywords:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">张三</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">救赎</span></span><br><span class="line"><span class="attr">description:</span> <span class="string">&quot;这是张三的自我救赎。&quot;</span></span><br><span class="line"><span class="meta">---</span></span><br></pre></td></tr></table></figure><p><code>title</code> 是文章的标题；<code>date</code> 是文章的创建时间；<code>categories</code> 是一个数组，<code>[随笔]</code> 表示该文章的类别是<code>随笔</code>，<code>[随笔, 子随笔]</code> 表示该文章的类别是<code>随笔</code>下的子类别<code>子随笔</code>；<code>tags</code> 数组中是要添加的标签；<code>keywords</code> 数组中是文章关键词；<code>description</code> 是文章的描述，在主页中会显示成摘要。接着走一波 <code>hexo clean; hexo g; hexo s</code> 就可以在 <code>tags</code> 和 <code>categories</code> 页面找到这篇文章啦。</p><h1 id="魔改"><a href="#魔改" class="headerlink" title="魔改"></a>魔改</h1><h2 id="访问人数"><a href="#访问人数" class="headerlink" title="访问人数"></a>访问人数</h2><h3 id="安装脚本"><a href="#安装脚本" class="headerlink" title="安装脚本"></a>安装脚本</h3><p>要使用不蒜子必须在页面中引入 busuanzi.js，目前最新版如下。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;script <span class="keyword">async</span>          src=<span class="string">&quot;//busuanzi.ibruce.info/busuanzi/2.3/busuanzi.pure.mini.js&quot;</span>&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>不蒜子可以给任何类型的个人站点使用，如果你是用的 hexo，打开 <strong>themes / 你的主题 /layout/_partial/footer.ejs</strong> 添加上述脚本即可，当然你也可以添加到 header 中。</p><h3 id="安装标签"><a href="#安装标签" class="headerlink" title="安装标签"></a>安装标签</h3><p>只需要复制相应的 html 标签到你的网站要显示访问量的位置即可。您可以随意更改不蒜子标签为自己喜欢的显示效果，内容参考第三部分<strong>扩展开发</strong>。根据你要显示内容的不同，这分几种情况。</p><ol><li><strong>显示站点总访问量</strong></li></ol><p>要显示站点总访问量，复制以下代码添加到你需要显示的位置。有两种算法可选：</p><p><strong>算法 a：pv 的方式</strong>，单个用户连续点击 n 篇文章，记录 n 次访问量。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">本站总访问量&lt;span id=<span class="string">&quot;busuanzi_value_site_pv&quot;</span>&gt;&lt;/span&gt;次</span><br></pre></td></tr></table></figure><p><strong>算法 b：uv 的方式</strong>，单个用户连续点击 n 篇文章，只记录 1 次访客数。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">本站访客数&lt;span id=<span class="string">&quot;busuanzi_value_site_uv&quot;</span>&gt;&lt;/span&gt;人次</span><br></pre></td></tr></table></figure><p>如果你是用的 hexo，打开 <strong>themes / 你的主题 /layout/_partial/footer.ejs</strong> 添加即可。</p><ol start="2"><li><strong>显示单页面访问量</strong></li></ol><p>要显示每篇文章的访问量，复制以下代码添加到你需要显示的位置。</p><p>算法：pv 的方式，单个用户点击 1 篇文章，本篇文章记录 1 次阅读量。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">本站总访问量&lt;span id=<span class="string">&quot;busuanzi_value_site_pv&quot;</span>&gt;&lt;/span&gt;次</span><br></pre></td></tr></table></figure><p>代码中文字是可以修改的，只要保留 id 正确即可。</p><ol start="3"><li><strong>显示站点总访问量和单页面访问量</strong></li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">本站访客数&lt;span id=<span class="string">&quot;busuanzi_value_site_uv&quot;</span>&gt;&lt;/span&gt;人次</span><br></pre></td></tr></table></figure><h2 id="鼠标效果"><a href="#鼠标效果" class="headerlink" title="鼠标效果"></a>鼠标效果</h2><ol><li>新建文件 <code>[BlogRoot]\source\js\cursor.js</code>，在里面写上如下代码：</li></ol><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">var</span> <span class="attribute">CURSOR</span>;</span><br><span class="line"></span><br><span class="line">Math<span class="selector-class">.lerp</span> = (<span class="selector-tag">a</span>, <span class="selector-tag">b</span>, n) =&gt; (<span class="number">1</span> - n) * <span class="selector-tag">a</span> + n * <span class="selector-tag">b</span>;</span><br><span class="line"></span><br><span class="line">const getStyle = (el, attr) =&gt; &#123;</span><br><span class="line">    try &#123;</span><br><span class="line">        return window<span class="selector-class">.getComputedStyle</span></span><br><span class="line">            ? window<span class="selector-class">.getComputedStyle</span>(el)<span class="selector-attr">[attr]</span></span><br><span class="line">            : el.currentStyle[attr];</span><br><span class="line">    &#125; catch (e) &#123;&#125;</span><br><span class="line">    return &quot;&quot;;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">class <span class="attribute">Cursor</span> &#123;</span><br><span class="line">    constructor() &#123;</span><br><span class="line">        this<span class="selector-class">.pos</span> = &#123;curr: null, prev: null&#125;;</span><br><span class="line">        this<span class="selector-class">.pt</span> = <span class="selector-attr">[]</span>;</span><br><span class="line">        this<span class="selector-class">.create</span>();</span><br><span class="line">        this<span class="selector-class">.init</span>();</span><br><span class="line">        this<span class="selector-class">.render</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    move(<span class="attribute">left</span>, <span class="attribute">top</span>) &#123;</span><br><span class="line">        this<span class="selector-class">.cursor</span><span class="selector-class">.style</span><span class="selector-attr">[<span class="string">&quot;left&quot;</span>]</span> = `$&#123;<span class="attribute">left</span>&#125;px`;</span><br><span class="line">        this<span class="selector-class">.cursor</span><span class="selector-class">.style</span><span class="selector-attr">[<span class="string">&quot;top&quot;</span>]</span> = `$&#123;<span class="attribute">top</span>&#125;px`;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    create() &#123;</span><br><span class="line">        if (!this<span class="selector-class">.cursor</span>) &#123;</span><br><span class="line">            this<span class="selector-class">.cursor</span> = document<span class="selector-class">.createElement</span>(&quot;<span class="selector-tag">div</span>&quot;);</span><br><span class="line">            this<span class="selector-class">.cursor</span><span class="selector-class">.id</span> = &quot;<span class="attribute">cursor</span>&quot;;</span><br><span class="line">            this<span class="selector-class">.cursor</span><span class="selector-class">.classList</span><span class="selector-class">.add</span>(&quot;hidden&quot;);</span><br><span class="line">            document<span class="selector-class">.body</span><span class="selector-class">.append</span>(this<span class="selector-class">.cursor</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="selector-tag">var</span> el = document<span class="selector-class">.getElementsByTagName</span>(&#x27;*&#x27;);</span><br><span class="line">        for (let <span class="selector-tag">i</span> = <span class="number">0</span>; <span class="selector-tag">i</span> &lt; el<span class="selector-class">.length</span>; <span class="selector-tag">i</span>++)</span><br><span class="line">            if (getStyle(el<span class="selector-attr">[i]</span>, &quot;<span class="attribute">cursor</span>&quot;) == &quot;pointer&quot;)</span><br><span class="line">                this<span class="selector-class">.pt</span><span class="selector-class">.push</span>(el<span class="selector-attr">[i]</span><span class="selector-class">.outerHTML</span>);</span><br><span class="line"></span><br><span class="line">        document<span class="selector-class">.body</span><span class="selector-class">.appendChild</span>((this<span class="selector-class">.scr</span> = document<span class="selector-class">.createElement</span>(&quot;style&quot;)));</span><br><span class="line">        // 这里改变鼠标指针的颜色 由svg生成</span><br><span class="line">        this<span class="selector-class">.scr</span><span class="selector-class">.innerHTML</span> = `* &#123;<span class="attribute">cursor</span>: <span class="built_in">url</span>(<span class="string">&quot;data:image/svg+xml,&lt;svg xmlns=&#x27;http://www.w3.org/2000/svg&#x27; viewBox=&#x27;0 0 8 8&#x27; width=&#x27;8px&#x27; height=&#x27;8px&#x27;&gt;&lt;circle cx=&#x27;4&#x27; cy=&#x27;4&#x27; r=&#x27;4&#x27; opacity=&#x27;.5&#x27;/&gt;&lt;/svg&gt;&quot;</span>) <span class="number">4</span> <span class="number">4</span>, auto&#125;`;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    refresh() &#123;</span><br><span class="line">        this<span class="selector-class">.scr</span><span class="selector-class">.remove</span>();</span><br><span class="line">        this<span class="selector-class">.cursor</span><span class="selector-class">.classList</span><span class="selector-class">.remove</span>(&quot;hover&quot;);</span><br><span class="line">        this<span class="selector-class">.cursor</span><span class="selector-class">.classList</span><span class="selector-class">.remove</span>(&quot;active&quot;);</span><br><span class="line">        this<span class="selector-class">.pos</span> = &#123;curr: null, prev: null&#125;;</span><br><span class="line">        this<span class="selector-class">.pt</span> = <span class="selector-attr">[]</span>;</span><br><span class="line"></span><br><span class="line">        this<span class="selector-class">.create</span>();</span><br><span class="line">        this<span class="selector-class">.init</span>();</span><br><span class="line">        this<span class="selector-class">.render</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    init() &#123;</span><br><span class="line">        document<span class="selector-class">.onmouseover</span>  = e =&gt; this<span class="selector-class">.pt</span><span class="selector-class">.includes</span>(e<span class="selector-class">.target</span><span class="selector-class">.outerHTML</span>) &amp;&amp; this<span class="selector-class">.cursor</span><span class="selector-class">.classList</span><span class="selector-class">.add</span>(&quot;hover&quot;);</span><br><span class="line">        document<span class="selector-class">.onmouseout</span>   = e =&gt; this<span class="selector-class">.pt</span><span class="selector-class">.includes</span>(e<span class="selector-class">.target</span><span class="selector-class">.outerHTML</span>) &amp;&amp; this<span class="selector-class">.cursor</span><span class="selector-class">.classList</span><span class="selector-class">.remove</span>(&quot;hover&quot;);</span><br><span class="line">        document<span class="selector-class">.onmousemove</span>  = e =&gt; &#123;(this<span class="selector-class">.pos</span><span class="selector-class">.curr</span> == null) &amp;&amp; this<span class="selector-class">.move</span>(e<span class="selector-class">.clientX</span> - <span class="number">8</span>, e<span class="selector-class">.clientY</span> - <span class="number">8</span>); this<span class="selector-class">.pos</span><span class="selector-class">.curr</span> = &#123;x: e.clientX - <span class="number">8</span>, y: e.clientY - <span class="number">8</span>&#125;; this<span class="selector-class">.cursor</span><span class="selector-class">.classList</span><span class="selector-class">.remove</span>(&quot;hidden&quot;);&#125;;</span><br><span class="line">        document<span class="selector-class">.onmouseenter</span> = e =&gt; this<span class="selector-class">.cursor</span><span class="selector-class">.classList</span><span class="selector-class">.remove</span>(&quot;hidden&quot;);</span><br><span class="line">        document<span class="selector-class">.onmouseleave</span> = e =&gt; this<span class="selector-class">.cursor</span><span class="selector-class">.classList</span><span class="selector-class">.add</span>(&quot;hidden&quot;);</span><br><span class="line">        document<span class="selector-class">.onmousedown</span>  = e =&gt; this<span class="selector-class">.cursor</span><span class="selector-class">.classList</span><span class="selector-class">.add</span>(&quot;active&quot;);</span><br><span class="line">        document<span class="selector-class">.onmouseup</span>    = e =&gt; this<span class="selector-class">.cursor</span><span class="selector-class">.classList</span><span class="selector-class">.remove</span>(&quot;active&quot;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    render() &#123;</span><br><span class="line">        if (this<span class="selector-class">.pos</span><span class="selector-class">.prev</span>) &#123;</span><br><span class="line">            this<span class="selector-class">.pos</span><span class="selector-class">.prev</span><span class="selector-class">.x</span> = Math<span class="selector-class">.lerp</span>(this<span class="selector-class">.pos</span><span class="selector-class">.prev</span><span class="selector-class">.x</span>, this<span class="selector-class">.pos</span><span class="selector-class">.curr</span><span class="selector-class">.x</span>, <span class="number">0.15</span>);</span><br><span class="line">            this<span class="selector-class">.pos</span><span class="selector-class">.prev</span><span class="selector-class">.y</span> = Math<span class="selector-class">.lerp</span>(this<span class="selector-class">.pos</span><span class="selector-class">.prev</span><span class="selector-class">.y</span>, this<span class="selector-class">.pos</span><span class="selector-class">.curr</span><span class="selector-class">.y</span>, <span class="number">0.15</span>);</span><br><span class="line">            this<span class="selector-class">.move</span>(this<span class="selector-class">.pos</span><span class="selector-class">.prev</span><span class="selector-class">.x</span>, this<span class="selector-class">.pos</span><span class="selector-class">.prev</span><span class="selector-class">.y</span>);</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">            this<span class="selector-class">.pos</span><span class="selector-class">.prev</span> = this<span class="selector-class">.pos</span><span class="selector-class">.curr</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        requestAnimationFrame(() =&gt; this<span class="selector-class">.render</span>());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">(() =&gt; &#123;</span><br><span class="line">    <span class="attribute">CURSOR</span> = new <span class="attribute">Cursor</span>();</span><br><span class="line">    // 需要重新获取列表时，使用 <span class="attribute">CURSOR</span><span class="selector-class">.refresh</span>()</span><br><span class="line">&#125;)();</span><br></pre></td></tr></table></figure><p>其中比较重要的参数就是鼠标的尺寸和颜色，已经在上图中标出，目前发现颜色只支持 RGB 写法和固有名称写法（例如 red 这种），其他参数也可以自行摸索：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">* &#123;<span class="attribute">cursor</span>: <span class="built_in">url</span>(<span class="string">&quot;data:image/svg+xml,&lt;svg xmlns=&#x27;http://www.w3.org/2000/svg&#x27; viewBox=&#x27;0 0 8 8&#x27; width=&#x27;8px&#x27; height=&#x27;8px&#x27;&gt;&lt;circle cx=&#x27;4&#x27; cy=&#x27;4&#x27; r=&#x27;4&#x27; opacity=&#x27;1.0&#x27; fill=&#x27;rgb(57, 197, 187)&#x27;/&gt;&lt;/svg&gt;&quot;</span>) <span class="number">4</span> <span class="number">4</span>, auto&#125;`</span><br></pre></td></tr></table></figure><p>在 <code>[BlogRoot]\source\css\custom.css</code> 添加如下代码：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 鼠标样式 */</span></span><br><span class="line"><span class="selector-id">#cursor</span> &#123;</span><br><span class="line">  <span class="attribute">position</span>: fixed;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">16px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">16px</span>;</span><br><span class="line">  <span class="comment">/* 这里改变跟随的底色 */</span></span><br><span class="line">  <span class="attribute">background</span>: <span class="built_in">var</span>(--theme-color);</span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="number">8px</span>;</span><br><span class="line">  <span class="attribute">opacity</span>: <span class="number">0.25</span>;</span><br><span class="line">  <span class="attribute">z-index</span>: <span class="number">10086</span>;</span><br><span class="line">  <span class="attribute">pointer-events</span>: none;</span><br><span class="line">  <span class="attribute">transition</span>: <span class="number">0.2s</span> ease-in-out;</span><br><span class="line">  <span class="attribute">transition-property</span>: background, opacity, transform;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#cursor</span><span class="selector-class">.hidden</span> &#123;</span><br><span class="line">  <span class="attribute">opacity</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#cursor</span><span class="selector-class">.hover</span> &#123;</span><br><span class="line">  <span class="attribute">opacity</span>: <span class="number">0.1</span>;</span><br><span class="line">  <span class="attribute">transform</span>: <span class="built_in">scale</span>(<span class="number">2.5</span>);</span><br><span class="line">  -webkit-<span class="attribute">transform</span>: <span class="built_in">scale</span>(<span class="number">2.5</span>);</span><br><span class="line">  -moz-<span class="attribute">transform</span>: <span class="built_in">scale</span>(<span class="number">2.5</span>);</span><br><span class="line">  -ms-<span class="attribute">transform</span>: <span class="built_in">scale</span>(<span class="number">2.5</span>);</span><br><span class="line">  -o-<span class="attribute">transform</span>: <span class="built_in">scale</span>(<span class="number">2.5</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#cursor</span><span class="selector-class">.active</span> &#123;</span><br><span class="line">  <span class="attribute">opacity</span>: <span class="number">0.5</span>;</span><br><span class="line">  <span class="attribute">transform</span>: <span class="built_in">scale</span>(<span class="number">0.5</span>);</span><br><span class="line">  -webkit-<span class="attribute">transform</span>: <span class="built_in">scale</span>(<span class="number">0.5</span>);</span><br><span class="line">  -moz-<span class="attribute">transform</span>: <span class="built_in">scale</span>(<span class="number">0.5</span>);</span><br><span class="line">  -ms-<span class="attribute">transform</span>: <span class="built_in">scale</span>(<span class="number">0.5</span>);</span><br><span class="line">  -o-<span class="attribute">transform</span>: <span class="built_in">scale</span>(<span class="number">0.5</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里比较重要的参数就是鼠标跟随的圆形颜色，可以根据自己的喜好进行更改：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-id">#cursor</span> &#123;</span><br><span class="line">  <span class="comment">/* 这里改变跟随的底色 */</span></span><br><span class="line">  <span class="attribute">background</span>: <span class="built_in">rgb</span>(<span class="number">57</span>, <span class="number">197</span>, <span class="number">187</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在主题配置文件<code>_config.butterfly.yml</code> 文件的 <code>inject</code> 配置项引入刚刚创建的 <code>css</code> 文件和 <code>js</code> 文件：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">inject:</span> </span><br><span class="line">  <span class="attr">head:</span> </span><br><span class="line"><span class="string">+</span>    <span class="bullet">-</span> <span class="string">&lt;link</span> <span class="string">rel=&quot;stylesheet&quot;</span> <span class="string">href=&quot;/css/custom.css&quot;&gt;</span></span><br><span class="line">  <span class="attr">bottom:</span></span><br><span class="line"><span class="string">+</span>    <span class="bullet">-</span> <span class="string">&lt;script</span> <span class="string">defer</span> <span class="string">src=&quot;/js/cursor.js&quot;&gt;&lt;/script&gt;</span></span><br></pre></td></tr></table></figure><p>重启项目即可看见效果：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo cl; hexo s</span><br></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2023/02/02/zsnACvJNBRVq1XO.png" alt="image.png"></p><h2 id="打字效果"><a href="#打字效果" class="headerlink" title="打字效果"></a>打字效果</h2><p>修改主题配置文件</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">activate_power_mode:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">colorful:</span> <span class="literal">true</span> <span class="comment"># open particle animation (冒光特效)</span></span><br><span class="line">  <span class="attr">shake:</span> <span class="literal">true</span> <span class="comment">#  open shake (抖动特效)</span></span><br><span class="line">  <span class="attr">mobile:</span> <span class="literal">false</span></span><br></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2023/02/03/82TVYK4on5x9JuH.png" alt="图片.png"></p>]]></content>
      
      
      <categories>
          
          <category> 博客搭建 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 🦋Butterfly </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
